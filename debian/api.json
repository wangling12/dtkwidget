{"Filepath":"examples/dwidget-examples/collections/buttonexample.h","Functions":[{"Uniquefunname":" ButtonExampleWindow(QWidget * parent=nullptr)","Funname":"ButtonExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ButtonExampleWindow::ButtonExampleWindow(QWidget * parent=nullptr)","Funname":"ButtonExampleWindow::ButtonExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxExample(QWidget * parent=nullptr)","Funname":"DButtonBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxExample::DButtonBoxExample(QWidget * parent=nullptr)","Funname":"DButtonBoxExample::DButtonBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DButtonBoxExample::getDescriptionInfo() cons)","Funname":"DButtonBoxExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DButtonBoxExample::getFixedHeight() cons)","Funname":"DButtonBoxExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DButtonBoxExample::getTitleName() cons)","Funname":"DButtonBoxExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DCheckButtonExample(QWidget * parent=nullptr)","Funname":"DCheckButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DCheckButtonExample::DCheckButtonExample(QWidget * parent=nullptr)","Funname":"DCheckButtonExample::DCheckButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DCheckButtonExample::getDescriptionInfo() cons)","Funname":"DCheckButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DCheckButtonExample::getFixedHeight() cons)","Funname":"DCheckButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DCheckButtonExample::getTitleName() cons)","Funname":"DCheckButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DComboBoxExample(QWidget * parent=nullptr)","Funname":"DComboBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DComboBoxExample::DComboBoxExample(QWidget * parent=nullptr)","Funname":"DComboBoxExample::DComboBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DComboBoxExample::getDescriptionInfo() cons)","Funname":"DComboBoxExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DComboBoxExample::getFixedHeight() cons)","Funname":"DComboBoxExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DComboBoxExample::getTitleName() cons)","Funname":"DComboBoxExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DFloatingButtonExample(QWidget * parent=nullptr)","Funname":"DFloatingButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButtonExample::DFloatingButtonExample(QWidget * parent=nullptr)","Funname":"DFloatingButtonExample::DFloatingButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DFloatingButtonExample::getDescriptionInfo() cons)","Funname":"DFloatingButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DFloatingButtonExample::getFixedHeight() cons)","Funname":"DFloatingButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DFloatingButtonExample::getTitleName() cons)","Funname":"DFloatingButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DFontComboBoxExample(QWidget * parent=nullptr)","Funname":"DFontComboBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFontComboBoxExample::DFontComboBoxExample(QWidget * parent=nullptr)","Funname":"DFontComboBoxExample::DFontComboBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DFontComboBoxExample::getDescriptionInfo() cons)","Funname":"DFontComboBoxExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DFontComboBoxExample::getFixedHeight() cons)","Funname":"DFontComboBoxExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DFontComboBoxExample::getTitleName() cons)","Funname":"DFontComboBoxExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DIconButtonExample(QWidget * parent=nullptr)","Funname":"DIconButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DIconButtonExample::DIconButtonExample(QWidget * parent=nullptr)","Funname":"DIconButtonExample::DIconButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DIconButtonExample::getDescriptionInfo() cons)","Funname":"DIconButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DIconButtonExample::getFixedHeight() cons)","Funname":"DIconButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DIconButtonExample::getTitleName() cons)","Funname":"DIconButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DPushButtonExample(QWidget * parent=nullptr)","Funname":"DPushButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DPushButtonExample::DPushButtonExample(QWidget * parent=nullptr)","Funname":"DPushButtonExample::DPushButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DPushButtonExample::getDescriptionInfo() cons)","Funname":"DPushButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DPushButtonExample::getFixedHeight() cons)","Funname":"DPushButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DPushButtonExample::getTitleName() cons)","Funname":"DPushButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DRadioButtonExample(QWidget * parent=nullptr)","Funname":"DRadioButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DRadioButtonExample::DRadioButtonExample(QWidget * parent=nullptr)","Funname":"DRadioButtonExample::DRadioButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DRadioButtonExample::getDescriptionInfo() cons)","Funname":"DRadioButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DRadioButtonExample::getFixedHeight() cons)","Funname":"DRadioButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DRadioButtonExample::getTitleName() cons)","Funname":"DRadioButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSearchComboBoxExample(QWidget * parent=nullptr)","Funname":"DSearchComboBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSearchComboBoxExample::DSearchComboBoxExample(QWidget * parent=nullptr)","Funname":"DSearchComboBoxExample::DSearchComboBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSearchComboBoxExample::getDescriptionInfo() cons)","Funname":"DSearchComboBoxExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSearchComboBoxExample::getFixedHeight() cons)","Funname":"DSearchComboBoxExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSearchComboBoxExample::getTitleName() cons)","Funname":"DSearchComboBoxExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSuggestButtonExample(QWidget * parent=nullptr)","Funname":"DSuggestButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSuggestButtonExample::DSuggestButtonExample(QWidget * parent=nullptr)","Funname":"DSuggestButtonExample::DSuggestButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSuggestButtonExample::getDescriptionInfo() cons)","Funname":"DSuggestButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSuggestButtonExample::getFixedHeight() cons)","Funname":"DSuggestButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSuggestButtonExample::getTitleName() cons)","Funname":"DSuggestButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSwitchButtonExample(QWidget * parent=nullptr)","Funname":"DSwitchButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSwitchButtonExample::DSwitchButtonExample(QWidget * parent=nullptr)","Funname":"DSwitchButtonExample::DSwitchButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSwitchButtonExample::getDescriptionInfo() cons)","Funname":"DSwitchButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSwitchButtonExample::getFixedHeight() cons)","Funname":"DSwitchButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSwitchButtonExample::getTitleName() cons)","Funname":"DSwitchButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DToolButtonExample(QWidget * parent=nullptr)","Funname":"DToolButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DToolButtonExample::DToolButtonExample(QWidget * parent=nullptr)","Funname":"DToolButtonExample::DToolButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DToolButtonExample::getDescriptionInfo() cons)","Funname":"DToolButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DToolButtonExample::getFixedHeight() cons)","Funname":"DToolButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DToolButtonExample::getTitleName() cons)","Funname":"DToolButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DWarningButtonExample(QWidget * parent=nullptr)","Funname":"DWarningButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DWarningButtonExample::DWarningButtonExample(QWidget * parent=nullptr)","Funname":"DWarningButtonExample::DWarningButtonExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DWarningButtonExample::getDescriptionInfo() cons)","Funname":"DWarningButtonExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DWarningButtonExample::getFixedHeight() cons)","Funname":"DWarningButtonExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DWarningButtonExample::getTitleName() cons)","Funname":"DWarningButtonExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["BUTTONEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/dialogexample.h","Functions":[{"Uniquefunname":" DDialogExample(QWidget * parent=nullptr)","Funname":"DDialogExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DDialogExample::DDialogExample(QWidget * parent=nullptr)","Funname":"DDialogExample::DDialogExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DDialogExample::getDescriptionInfo() cons)","Funname":"DDialogExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DDialogExample::getFixedHeight() cons)","Funname":"DDialogExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DDialogExample::getTitleName() cons)","Funname":"DDialogExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DFileDialogExample(QWidget * parent=nullptr)","Funname":"DFileDialogExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFileDialogExample::DFileDialogExample(QWidget * parent=nullptr)","Funname":"DFileDialogExample::DFileDialogExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DFileDialogExample::getDescriptionInfo() cons)","Funname":"DFileDialogExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DFileDialogExample::getFixedHeight() cons)","Funname":"DFileDialogExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DFileDialogExample::getTitleName() cons)","Funname":"DFileDialogExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DMessageManagerExample(QWidget * parent=nullptr)","Funname":"DMessageManagerExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DMessageManagerExample::DMessageManagerExample(QWidget * parent=nullptr)","Funname":"DMessageManagerExample::DMessageManagerExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DMessageManagerExample::getDescriptionInfo() cons)","Funname":"DMessageManagerExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DMessageManagerExample::getFixedHeight() cons)","Funname":"DMessageManagerExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DMessageManagerExample::getTitleName() cons)","Funname":"DMessageManagerExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DialogExampleWindow(QWidget * parent=nullptr)","Funname":"DialogExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DialogExampleWindow::DialogExampleWindow(QWidget * parent=nullptr)","Funname":"DialogExampleWindow::DialogExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DIALOGEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/editexample.h","Functions":[{"Uniquefunname":" DCrumbTextFormatExample(QWidget * parent=nullptr)","Funname":"DCrumbTextFormatExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DCrumbTextFormatExample::DCrumbTextFormatExample(QWidget * parent=nullptr)","Funname":"DCrumbTextFormatExample::DCrumbTextFormatExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DCrumbTextFormatExample::getDescriptionInfo() cons)","Funname":"DCrumbTextFormatExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DCrumbTextFormatExample::getFixedHeight() cons)","Funname":"DCrumbTextFormatExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DCrumbTextFormatExample::getTitleName() cons)","Funname":"DCrumbTextFormatExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DFileChooserEditExample(QWidget * parent=nullptr)","Funname":"DFileChooserEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFileChooserEditExample::DFileChooserEditExample(QWidget * parent=nullptr)","Funname":"DFileChooserEditExample::DFileChooserEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DFileChooserEditExample::getDescriptionInfo() cons)","Funname":"DFileChooserEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DFileChooserEditExample::getFixedHeight() cons)","Funname":"DFileChooserEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DFileChooserEditExample::getTitleName() cons)","Funname":"DFileChooserEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DIpv4LineEditExample(QWidget * parent=nullptr)","Funname":"DIpv4LineEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DIpv4LineEditExample::DIpv4LineEditExample(QWidget * parent=nullptr)","Funname":"DIpv4LineEditExample::DIpv4LineEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DIpv4LineEditExample::getDescriptionInfo() cons)","Funname":"DIpv4LineEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DIpv4LineEditExample::getFixedHeight() cons)","Funname":"DIpv4LineEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DIpv4LineEditExample::getTitleName() cons)","Funname":"DIpv4LineEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DKeySequenceEditExample(QWidget * parent=nullptr)","Funname":"DKeySequenceEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DKeySequenceEditExample::DKeySequenceEditExample(QWidget * parent=nullptr)","Funname":"DKeySequenceEditExample::DKeySequenceEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DKeySequenceEditExample::getDescriptionInfo() cons)","Funname":"DKeySequenceEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DKeySequenceEditExample::getFixedHeight() cons)","Funname":"DKeySequenceEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DKeySequenceEditExample::getTitleName() cons)","Funname":"DKeySequenceEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DLineEditExample(QWidget * parent=nullptr)","Funname":"DLineEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DLineEditExample::DLineEditExample(QWidget * parent=nullptr)","Funname":"DLineEditExample::DLineEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DLineEditExample::getDescriptionInfo() cons)","Funname":"DLineEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DLineEditExample::getFixedHeight() cons)","Funname":"DLineEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DLineEditExample::getTitleName() cons)","Funname":"DLineEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DPasswordEditExample(QWidget * parent=nullptr)","Funname":"DPasswordEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DPasswordEditExample::DPasswordEditExample(QWidget * parent=nullptr)","Funname":"DPasswordEditExample::DPasswordEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DPasswordEditExample::getDescriptionInfo() cons)","Funname":"DPasswordEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DPasswordEditExample::getFixedHeight() cons)","Funname":"DPasswordEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DPasswordEditExample::getTitleName() cons)","Funname":"DPasswordEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSearchEditExample(QWidget * parent=nullptr)","Funname":"DSearchEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSearchEditExample::DSearchEditExample(QWidget * parent=nullptr)","Funname":"DSearchEditExample::DSearchEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSearchEditExample::getDescriptionInfo() cons)","Funname":"DSearchEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSearchEditExample::getFixedHeight() cons)","Funname":"DSearchEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSearchEditExample::getTitleName() cons)","Funname":"DSearchEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSpinBoxExample(QWidget * parent=nullptr)","Funname":"DSpinBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSpinBoxExample::DSpinBoxExample(QWidget * parent=nullptr)","Funname":"DSpinBoxExample::DSpinBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSpinBoxExample::getDescriptionInfo() cons)","Funname":"DSpinBoxExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSpinBoxExample::getFixedHeight() cons)","Funname":"DSpinBoxExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSpinBoxExample::getTitleName() cons)","Funname":"DSpinBoxExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DTextEditExample(QWidget * parent=nullptr)","Funname":"DTextEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTextEditExample::DTextEditExample(QWidget * parent=nullptr)","Funname":"DTextEditExample::DTextEditExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DTextEditExample::getDescriptionInfo() cons)","Funname":"DTextEditExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DTextEditExample::getFixedHeight() cons)","Funname":"DTextEditExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DTextEditExample::getTitleName() cons)","Funname":"DTextEditExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" EditExampleWindow(QWidget * parent=nullptr)","Funname":"EditExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" EditExampleWindow::EditExampleWindow(QWidget * parent=nullptr)","Funname":"EditExampleWindow::EditExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["EDITEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/examplewindowinterface.h","Functions":[{"Uniquefunname":" ExampleWindowInterface(QWidget * parent)","Funname":"ExampleWindowInterface","Returntype":"","Args":"QWidget * parent"},{"Uniquefunname":" ExampleWindowInterface::ExampleWindowInterface(QWidget * parent)","Funname":"ExampleWindowInterface::ExampleWindowInterface","Returntype":"","Args":"QWidget * parent"},{"Uniquefunname":"QString ExampleWindowInterface::getDescriptionInfo() cons)","Funname":"ExampleWindowInterface::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int ExampleWindowInterface::getFixedHeight() cons)","Funname":"ExampleWindowInterface::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString ExampleWindowInterface::getTitleName() cons)","Funname":"ExampleWindowInterface::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ExampleWindowInterface::~ExampleWindowInterface()","Funname":"ExampleWindowInterface::~ExampleWindowInterface","Returntype":"","Args":""},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ~ExampleWindowInterface()","Funname":"~ExampleWindowInterface","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["EXAMPLEWINDOWINTERFACE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/layoutexample.h","Functions":[{"Uniquefunname":" DFrameExample(QWidget * parent=nullptr)","Funname":"DFrameExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFrameExample::DFrameExample(QWidget * parent=nullptr)","Funname":"DFrameExample::DFrameExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DFrameExample::getDescriptionInfo() cons)","Funname":"DFrameExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DFrameExample::getFixedHeight() cons)","Funname":"DFrameExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DFrameExample::getTitleName() cons)","Funname":"DFrameExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DHorizontalLineExample(QWidget * parent=nullptr)","Funname":"DHorizontalLineExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DHorizontalLineExample::DHorizontalLineExample(QWidget * parent=nullptr)","Funname":"DHorizontalLineExample::DHorizontalLineExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DHorizontalLineExample::getDescriptionInfo() cons)","Funname":"DHorizontalLineExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DHorizontalLineExample::getFixedHeight() cons)","Funname":"DHorizontalLineExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DHorizontalLineExample::getTitleName() cons)","Funname":"DHorizontalLineExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSplitterExample(QWidget * parent=nullptr)","Funname":"DSplitterExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSplitterExample::DSplitterExample(QWidget * parent=nullptr)","Funname":"DSplitterExample::DSplitterExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSplitterExample::getDescriptionInfo() cons)","Funname":"DSplitterExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSplitterExample::getFixedHeight() cons)","Funname":"DSplitterExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSplitterExample::getTitleName() cons)","Funname":"DSplitterExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DVerticalLineExample(QWidget * parent=nullptr)","Funname":"DVerticalLineExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DVerticalLineExample::DVerticalLineExample(QWidget * parent=nullptr)","Funname":"DVerticalLineExample::DVerticalLineExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DVerticalLineExample::getDescriptionInfo() cons)","Funname":"DVerticalLineExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DVerticalLineExample::getFixedHeight() cons)","Funname":"DVerticalLineExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DVerticalLineExample::getTitleName() cons)","Funname":"DVerticalLineExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" LayoutExampleWindow(QWidget * parent=nullptr)","Funname":"LayoutExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" LayoutExampleWindow::LayoutExampleWindow(QWidget * parent=nullptr)","Funname":"LayoutExampleWindow::LayoutExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["LAYOUTEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/lcdnumberexample.h","Functions":[{"Uniquefunname":" DLCDNumberExample(QWidget * parent=nullptr)","Funname":"DLCDNumberExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DLCDNumberExample::DLCDNumberExample(QWidget * parent=nullptr)","Funname":"DLCDNumberExample::DLCDNumberExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DLCDNumberExample::getDescriptionInfo() cons)","Funname":"DLCDNumberExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DLCDNumberExample::getFixedHeight() cons)","Funname":"DLCDNumberExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DLCDNumberExample::getTitleName() cons)","Funname":"DLCDNumberExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" LCDNumberExampleWindow(QWidget * parent=nullptr)","Funname":"LCDNumberExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" LCDNumberExampleWindow::LCDNumberExampleWindow(QWidget * parent=nullptr)","Funname":"LCDNumberExampleWindow::LCDNumberExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["LCDNUMBEREXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/listviewexample.h","Functions":[{"Uniquefunname":" DBackgroundGroupExample(QWidget * parent=nullptr)","Funname":"DBackgroundGroupExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DBackgroundGroupExample::DBackgroundGroupExample(QWidget * parent=nullptr)","Funname":"DBackgroundGroupExample::DBackgroundGroupExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DBackgroundGroupExample::getDescriptionInfo() cons)","Funname":"DBackgroundGroupExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DBackgroundGroupExample::getFixedHeight() cons)","Funname":"DBackgroundGroupExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DBackgroundGroupExample::getTitleName() cons)","Funname":"DBackgroundGroupExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DColumnViewExample(QWidget * parent=nullptr)","Funname":"DColumnViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DColumnViewExample::DColumnViewExample(QWidget * parent=nullptr)","Funname":"DColumnViewExample::DColumnViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DColumnViewExample::getDescriptionInfo() cons)","Funname":"DColumnViewExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DColumnViewExample::getFixedHeight() cons)","Funname":"DColumnViewExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DColumnViewExample::getTitleName() cons)","Funname":"DColumnViewExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DGroupBoxExample(QWidget * parent=nullptr)","Funname":"DGroupBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DGroupBoxExample::DGroupBoxExample(QWidget * parent=nullptr)","Funname":"DGroupBoxExample::DGroupBoxExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DGroupBoxExample::getDescriptionInfo() cons)","Funname":"DGroupBoxExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DGroupBoxExample::getFixedHeight() cons)","Funname":"DGroupBoxExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DGroupBoxExample::getTitleName() cons)","Funname":"DGroupBoxExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DHeaderViewExample(QWidget * parent=nullptr)","Funname":"DHeaderViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DHeaderViewExample::DHeaderViewExample(QWidget * parent=nullptr)","Funname":"DHeaderViewExample::DHeaderViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DHeaderViewExample::getDescriptionInfo() cons)","Funname":"DHeaderViewExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DHeaderViewExample::getFixedHeight() cons)","Funname":"DHeaderViewExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DHeaderViewExample::getTitleName() cons)","Funname":"DHeaderViewExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DListViewExample(QWidget * parent=nullptr)","Funname":"DListViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DListViewExample::DListViewExample(QWidget * parent=nullptr)","Funname":"DListViewExample::DListViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DListViewExample::getDescriptionInfo() cons)","Funname":"DListViewExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DListViewExample::getFixedHeight() cons)","Funname":"DListViewExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DListViewExample::getTitleName() cons)","Funname":"DListViewExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DTreeViewExample(QWidget * parent=nullptr)","Funname":"DTreeViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTreeViewExample::DTreeViewExample(QWidget * parent=nullptr)","Funname":"DTreeViewExample::DTreeViewExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DTreeViewExample::getDescriptionInfo() cons)","Funname":"DTreeViewExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DTreeViewExample::getFixedHeight() cons)","Funname":"DTreeViewExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DTreeViewExample::getTitleName() cons)","Funname":"DTreeViewExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ListViewExampleWindow(QWidget * parent=nullptr)","Funname":"ListViewExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ListViewExampleWindow::ListViewExampleWindow(QWidget * parent=nullptr)","Funname":"ListViewExampleWindow::ListViewExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["LISTVIEWEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/mainwindow.h","Functions":[{"Uniquefunname":" MainWindow(QWidget * parent=nullptr)","Funname":"MainWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" MainWindow::MainWindow(QWidget * parent=nullptr)","Funname":"MainWindow::MainWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void MainWindow::initModel()","Funname":"MainWindow::initModel","Returntype":"void","Args":""},{"Uniquefunname":"void MainWindow::menuItemInvoked(QAction * action)","Funname":"MainWindow::menuItemInvoked","Returntype":"void","Args":"QAction * action"},{"Uniquefunname":"void MainWindow::onCurrentIndexChanged(const QModelIndex \u0026 index)","Funname":"MainWindow::onCurrentIndexChanged","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"void MainWindow::registerPage(const QString \u0026 pageName,PageWindowInterface * pPageWindow,const QIcon \u0026 icon=QIcon ())","Funname":"MainWindow::registerPage","Returntype":"void","Args":"const QString \u0026 pageName,PageWindowInterface * pPageWindow,const QIcon \u0026 icon=QIcon ()"},{"Uniquefunname":" MainWindow::~MainWindow()","Funname":"MainWindow::~MainWindow","Returntype":"","Args":""},{"Uniquefunname":"void initModel()","Funname":"initModel","Returntype":"void","Args":""},{"Uniquefunname":"void menuItemInvoked(QAction * action)","Funname":"menuItemInvoked","Returntype":"void","Args":"QAction * action"},{"Uniquefunname":"void onCurrentIndexChanged(const QModelIndex \u0026 index)","Funname":"onCurrentIndexChanged","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"void registerPage(const QString \u0026 pageName,PageWindowInterface * pPageWindow,const QIcon \u0026 icon=QIcon ())","Funname":"registerPage","Returntype":"void","Args":"const QString \u0026 pageName,PageWindowInterface * pPageWindow,const QIcon \u0026 icon=QIcon ()"},{"Uniquefunname":" ~MainWindow()","Funname":"~MainWindow","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["MAINWINDOW_H"]},{"Name":"class:MainWindow","Fields":["DListView * MainWindow::m_pListView","QStandardItemModel * MainWindow::m_pListViewModel","QStackedWidget * MainWindow::m_pStackedWidget"]}]}
{"Filepath":"examples/dwidget-examples/collections/menuexample.h","Functions":[{"Uniquefunname":" DMenuExample(QWidget * parent=nullptr)","Funname":"DMenuExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DMenuExample::DMenuExample(QWidget * parent=nullptr)","Funname":"DMenuExample::DMenuExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool DMenuExample::eventFilter(QObject * watched,QEvent * event)","Funname":"DMenuExample::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"QColor DMenuExample::getAColor()","Funname":"DMenuExample::getAColor","Returntype":"QColor","Args":""},{"Uniquefunname":"QString DMenuExample::getDescriptionInfo() cons)","Funname":"DMenuExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DMenuExample::getFixedHeight() cons)","Funname":"DMenuExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DMenuExample::getTitleName() cons)","Funname":"DMenuExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DMenuExample::paintRegion()","Funname":"DMenuExample::paintRegion","Returntype":"void","Args":""},{"Uniquefunname":"void DMenuExample::restoreAnimation()","Funname":"DMenuExample::restoreAnimation","Returntype":"void","Args":""},{"Uniquefunname":"void DMenuExample::setAColor(const QColor \u0026 color)","Funname":"DMenuExample::setAColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":" MenuExampleWindow(QWidget * parent=nullptr)","Funname":"MenuExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" MenuExampleWindow::MenuExampleWindow(QWidget * parent=nullptr)","Funname":"MenuExampleWindow::MenuExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"QColor getAColor()","Funname":"getAColor","Returntype":"QColor","Args":""},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void paintRegion()","Funname":"paintRegion","Returntype":"void","Args":""},{"Uniquefunname":"void restoreAnimation()","Funname":"restoreAnimation","Returntype":"void","Args":""},{"Uniquefunname":"void setAColor(const QColor \u0026 color)","Funname":"setAColor","Returntype":"void","Args":"const QColor \u0026 color"}],"Records":[{"Name":"class:DMenuExample","Fields":["QColor DMenuExample::acolor","QPropertyAnimation * DMenuExample::animation","QMenu * DMenuExample::leftMenu","QPixmap DMenuExample::pixmap"]},{"Name":"macro","Fields":["MENUEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/pagewindowinterface.h","Functions":[{"Uniquefunname":" PageWindowInterface(QWidget * parent)","Funname":"PageWindowInterface","Returntype":"","Args":"QWidget * parent"},{"Uniquefunname":" PageWindowInterface::PageWindowInterface(QWidget * parent)","Funname":"PageWindowInterface::PageWindowInterface","Returntype":"","Args":"QWidget * parent"},{"Uniquefunname":"void PageWindowInterface::addExampleWindow(ExampleWindowInterface * pExample)","Funname":"PageWindowInterface::addExampleWindow","Returntype":"void","Args":"ExampleWindowInterface * pExample"},{"Uniquefunname":"QWidget * PageWindowInterface::doLayout(ExampleWindowInterface * pExample)","Funname":"PageWindowInterface::doLayout","Returntype":"QWidget *","Args":"ExampleWindowInterface * pExample"},{"Uniquefunname":"void PageWindowInterface::initPageWindow()","Funname":"PageWindowInterface::initPageWindow","Returntype":"void","Args":""},{"Uniquefunname":"void PageWindowInterface::mouseMoveEvent(QMouseEvent * event)","Funname":"PageWindowInterface::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void addExampleWindow(ExampleWindowInterface * pExample)","Funname":"addExampleWindow","Returntype":"void","Args":"ExampleWindowInterface * pExample"},{"Uniquefunname":"QWidget * doLayout(ExampleWindowInterface * pExample)","Funname":"doLayout","Returntype":"QWidget *","Args":"ExampleWindowInterface * pExample"},{"Uniquefunname":"void initPageWindow()","Funname":"initPageWindow","Returntype":"void","Args":""},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"}],"Records":[{"Name":"macro","Fields":["PAGEWINDOWINTERFACE_H"]},{"Name":"class:PageWindowInterface","Fields":["QList\u003cExampleWindowInterface * \u003e PageWindowInterface::m_exampleList"]}]}
{"Filepath":"examples/dwidget-examples/collections/progressbarexample.h","Functions":[{"Uniquefunname":" DColoredProgressBarExample(QWidget * parent=nullptr)","Funname":"DColoredProgressBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DColoredProgressBarExample::DColoredProgressBarExample(QWidget * parent=nullptr)","Funname":"DColoredProgressBarExample::DColoredProgressBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DColoredProgressBarExample::getDescriptionInfo() cons)","Funname":"DColoredProgressBarExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DColoredProgressBarExample::getFixedHeight() cons)","Funname":"DColoredProgressBarExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DColoredProgressBarExample::getTitleName() cons)","Funname":"DColoredProgressBarExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DProgressBarExample(QWidget * parent=nullptr)","Funname":"DProgressBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DProgressBarExample::DProgressBarExample(QWidget * parent=nullptr)","Funname":"DProgressBarExample::DProgressBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DProgressBarExample::getDescriptionInfo() cons)","Funname":"DProgressBarExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DProgressBarExample::getFixedHeight() cons)","Funname":"DProgressBarExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DProgressBarExample::getTitleName() cons)","Funname":"DProgressBarExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DWaterProgressExample(QWidget * parent=nullptr)","Funname":"DWaterProgressExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DWaterProgressExample::DWaterProgressExample(QWidget * parent=nullptr)","Funname":"DWaterProgressExample::DWaterProgressExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DWaterProgressExample::getDescriptionInfo() cons)","Funname":"DWaterProgressExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DWaterProgressExample::getFixedHeight() cons)","Funname":"DWaterProgressExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DWaterProgressExample::getTitleName() cons)","Funname":"DWaterProgressExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ProgressBarExampleWindow(QWidget * parent=nullptr)","Funname":"ProgressBarExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ProgressBarExampleWindow::ProgressBarExampleWindow(QWidget * parent=nullptr)","Funname":"ProgressBarExampleWindow::ProgressBarExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["PROGRESSBAREXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/rubberbandexample.h","Functions":[{"Uniquefunname":" DRubberBandExample(QWidget * parent=nullptr)","Funname":"DRubberBandExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DRubberBandExample::DRubberBandExample(QWidget * parent=nullptr)","Funname":"DRubberBandExample::DRubberBandExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DRubberBandExample::getDescriptionInfo() cons)","Funname":"DRubberBandExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DRubberBandExample::getFixedHeight() cons)","Funname":"DRubberBandExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DRubberBandExample::getTitleName() cons)","Funname":"DRubberBandExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DRubberBandExample::mouseMoveEvent(QMouseEvent * event)","Funname":"DRubberBandExample::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DRubberBandExample::mousePressEvent(QMouseEvent * event)","Funname":"DRubberBandExample::mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DRubberBandExample::mouseReleaseEvent(QMouseEvent * event)","Funname":"DRubberBandExample::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":" RubberBandExampleWindow(QWidget * parent=nullptr)","Funname":"RubberBandExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" RubberBandExampleWindow::RubberBandExampleWindow(QWidget * parent=nullptr)","Funname":"RubberBandExampleWindow::RubberBandExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * event)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"}],"Records":[{"Name":"class:DRubberBandExample","Fields":["QPoint DRubberBandExample::m_origin","Dtk::Widget::DRubberBand * DRubberBandExample::m_pRubberBand"]},{"Name":"macro","Fields":["RUBBERBANDEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/scrollbarexample.h","Functions":[{"Uniquefunname":" DScrollBarExample(QWidget * parent=nullptr)","Funname":"DScrollBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DScrollBarExample::DScrollBarExample(QWidget * parent=nullptr)","Funname":"DScrollBarExample::DScrollBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DScrollBarExample::getDescriptionInfo() cons)","Funname":"DScrollBarExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DScrollBarExample::getFixedHeight() cons)","Funname":"DScrollBarExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DScrollBarExample::getTitleName() cons)","Funname":"DScrollBarExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ScrollBarExampleWindow(QWidget * parent=nullptr)","Funname":"ScrollBarExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ScrollBarExampleWindow::ScrollBarExampleWindow(QWidget * parent=nullptr)","Funname":"ScrollBarExampleWindow::ScrollBarExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["SCROLLBAREXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/sliderexample.h","Functions":[{"Uniquefunname":" DSliderExample(QWidget * parent=nullptr)","Funname":"DSliderExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSliderExample::DSliderExample(QWidget * parent=nullptr)","Funname":"DSliderExample::DSliderExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSliderExample::getDescriptionInfo() cons)","Funname":"DSliderExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSliderExample::getFixedHeight() cons)","Funname":"DSliderExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSliderExample::getTitleName() cons)","Funname":"DSliderExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" SliderExampleWindow(QWidget * parent=nullptr)","Funname":"SliderExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" SliderExampleWindow::SliderExampleWindow(QWidget * parent=nullptr)","Funname":"SliderExampleWindow::SliderExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["SLIDEREXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/spinnerexample.h","Functions":[{"Uniquefunname":" DSpinnerExample(QWidget * parent=nullptr)","Funname":"DSpinnerExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSpinnerExample::DSpinnerExample(QWidget * parent=nullptr)","Funname":"DSpinnerExample::DSpinnerExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSpinnerExample::getDescriptionInfo() cons)","Funname":"DSpinnerExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSpinnerExample::getFixedHeight() cons)","Funname":"DSpinnerExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSpinnerExample::getTitleName() cons)","Funname":"DSpinnerExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" SpinnerExampleWindow(QWidget * parent=nullptr)","Funname":"SpinnerExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" SpinnerExampleWindow::SpinnerExampleWindow(QWidget * parent=nullptr)","Funname":"SpinnerExampleWindow::SpinnerExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["SPINNEREXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/tooltipexample.h","Functions":[{"Uniquefunname":" DArrowRectangleExample(QWidget * parent=nullptr)","Funname":"DArrowRectangleExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DArrowRectangleExample::DArrowRectangleExample(QWidget * parent=nullptr)","Funname":"DArrowRectangleExample::DArrowRectangleExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DArrowRectangleExample::getDescriptionInfo() cons)","Funname":"DArrowRectangleExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DArrowRectangleExample::getFixedHeight() cons)","Funname":"DArrowRectangleExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DArrowRectangleExample::getTitleName() cons)","Funname":"DArrowRectangleExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DToolTipExample(QWidget * parent=nullptr)","Funname":"DToolTipExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DToolTipExample::DToolTipExample(QWidget * parent=nullptr)","Funname":"DToolTipExample::DToolTipExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DToolTipExample::getDescriptionInfo() cons)","Funname":"DToolTipExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DToolTipExample::getFixedHeight() cons)","Funname":"DToolTipExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DToolTipExample::getTitleName() cons)","Funname":"DToolTipExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ToolTipExampleWindow(QWidget * parent=nullptr)","Funname":"ToolTipExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ToolTipExampleWindow::ToolTipExampleWindow(QWidget * parent=nullptr)","Funname":"ToolTipExampleWindow::ToolTipExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["TOOLTIPEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/widgetexample.h","Functions":[{"Uniquefunname":" CalendarModel(QObject * parent=nullptr)","Funname":"CalendarModel","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":" CalendarModel::CalendarModel(QObject * parent=nullptr)","Funname":"CalendarModel::CalendarModel","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":"int CalendarModel::columnCount(const QModelIndex \u0026 parent=QModelIndex ()) cons)","Funname":"CalendarModel::columnCount","Returntype":"int","Args":"const QModelIndex \u0026 parent=QModelIndex ()) cons"},{"Uniquefunname":"QVariant CalendarModel::data(const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons)","Funname":"CalendarModel::data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons"},{"Uniquefunname":"QVariant CalendarModel::headerData(int section,Qt::Orientation orientation,int role=Qt::DisplayRole) cons)","Funname":"CalendarModel::headerData","Returntype":"QVariant","Args":"int section,Qt::Orientation orientation,int role=Qt::DisplayRole) cons"},{"Uniquefunname":"int CalendarModel::rowCount(const QModelIndex \u0026 parent=QModelIndex ()) cons)","Funname":"CalendarModel::rowCount","Returntype":"int","Args":"const QModelIndex \u0026 parent=QModelIndex ()) cons"},{"Uniquefunname":" DCalendarWidgetExample(QWidget * parent=nullptr)","Funname":"DCalendarWidgetExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DCalendarWidgetExample::DCalendarWidgetExample(QWidget * parent=nullptr)","Funname":"DCalendarWidgetExample::DCalendarWidgetExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DCalendarWidgetExample::getDescriptionInfo() cons)","Funname":"DCalendarWidgetExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DCalendarWidgetExample::getFixedHeight() cons)","Funname":"DCalendarWidgetExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DCalendarWidgetExample::getTitleName() cons)","Funname":"DCalendarWidgetExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DTableWidgetExample(QWidget * parent=nullptr)","Funname":"DTableWidgetExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTableWidgetExample::DTableWidgetExample(QWidget * parent=nullptr)","Funname":"DTableWidgetExample::DTableWidgetExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DTableWidgetExample::getDescriptionInfo() cons)","Funname":"DTableWidgetExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DTableWidgetExample::getFixedHeight() cons)","Funname":"DTableWidgetExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DTableWidgetExample::getTitleName() cons)","Funname":"DTableWidgetExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" WidgetExampleWindow(QWidget * parent=nullptr)","Funname":"WidgetExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" WidgetExampleWindow::WidgetExampleWindow(QWidget * parent=nullptr)","Funname":"WidgetExampleWindow::WidgetExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"int columnCount(const QModelIndex \u0026 parent=QModelIndex ()) cons)","Funname":"columnCount","Returntype":"int","Args":"const QModelIndex \u0026 parent=QModelIndex ()) cons"},{"Uniquefunname":"QVariant data(const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons)","Funname":"data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QVariant headerData(int section,Qt::Orientation orientation,int role=Qt::DisplayRole) cons)","Funname":"headerData","Returntype":"QVariant","Args":"int section,Qt::Orientation orientation,int role=Qt::DisplayRole) cons"},{"Uniquefunname":"int rowCount(const QModelIndex \u0026 parent=QModelIndex ()) cons)","Funname":"rowCount","Returntype":"int","Args":"const QModelIndex \u0026 parent=QModelIndex ()) cons"}],"Records":[{"Name":"class:CalendarModel","Fields":["QStringList CalendarModel::header","QVector\u003cQVector\u003cQDate\u003e\u003e CalendarModel::m_tableData"]},{"Name":"class:DTableWidgetExample","Fields":["QTableView * DTableWidgetExample::tableView"]},{"Name":"macro","Fields":["WIDGETEXAMPLE_H"]}]}
{"Filepath":"examples/dwidget-examples/collections/windowexample.h","Functions":[{"Uniquefunname":" DMainWindowExample(QWidget * parent=nullptr)","Funname":"DMainWindowExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DMainWindowExample::DMainWindowExample(QWidget * parent=nullptr)","Funname":"DMainWindowExample::DMainWindowExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DMainWindowExample::getDescriptionInfo() cons)","Funname":"DMainWindowExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DMainWindowExample::getFixedHeight() cons)","Funname":"DMainWindowExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DMainWindowExample::getTitleName() cons)","Funname":"DMainWindowExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DSizegripExample(QWidget * parent=nullptr)","Funname":"DSizegripExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSizegripExample::DSizegripExample(QWidget * parent=nullptr)","Funname":"DSizegripExample::DSizegripExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DSizegripExample::getDescriptionInfo() cons)","Funname":"DSizegripExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DSizegripExample::getFixedHeight() cons)","Funname":"DSizegripExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DSizegripExample::getTitleName() cons)","Funname":"DSizegripExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DStatusBarExample(QWidget * parent=nullptr)","Funname":"DStatusBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DStatusBarExample::DStatusBarExample(QWidget * parent=nullptr)","Funname":"DStatusBarExample::DStatusBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DStatusBarExample::getDescriptionInfo() cons)","Funname":"DStatusBarExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DStatusBarExample::getFixedHeight() cons)","Funname":"DStatusBarExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DStatusBarExample::getTitleName() cons)","Funname":"DStatusBarExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DTabBarExample(QWidget * parent=nullptr)","Funname":"DTabBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTabBarExample::DTabBarExample(QWidget * parent=nullptr)","Funname":"DTabBarExample::DTabBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DTabBarExample::getDescriptionInfo() cons)","Funname":"DTabBarExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DTabBarExample::getFixedHeight() cons)","Funname":"DTabBarExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DTabBarExample::getTitleName() cons)","Funname":"DTabBarExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DTitleBarExample(QWidget * parent=nullptr)","Funname":"DTitleBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTitleBarExample::DTitleBarExample(QWidget * parent=nullptr)","Funname":"DTitleBarExample::DTitleBarExample","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString DTitleBarExample::getDescriptionInfo() cons)","Funname":"DTitleBarExample::getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DTitleBarExample::getFixedHeight() cons)","Funname":"DTitleBarExample::getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DTitleBarExample::getTitleName() cons)","Funname":"DTitleBarExample::getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":" WindowExampleWindow(QWidget * parent=nullptr)","Funname":"WindowExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" WindowExampleWindow::WindowExampleWindow(QWidget * parent=nullptr)","Funname":"WindowExampleWindow::WindowExampleWindow","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getDescriptionInfo() cons)","Funname":"getDescriptionInfo","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int getFixedHeight() cons)","Funname":"getFixedHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString getTitleName() cons)","Funname":"getTitleName","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["WINDOWEXAMPLE_H"]}]}
{"Filepath":"src/dtkwidget_global.h","Functions":[{"Uniquefunname":"void inline dtk_windget_init_resource()","Funname":"dtk_windget_init_resource","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DTKWIDGET_DECL_DEPRECATED","DTK_WIDGET_NAMESPACE","DWIDGET_BEGIN_NAMESPACE","DWIDGET_END_NAMESPACE","DWIDGET_INIT_RESOURCE()","DWIDGET_NAMESPACE","DWIDGET_USE_NAMESPACE","D_THEME_INIT_WIDGET(className,...)","LIBDTKWIDGETSHARED_EXPORT","LIBDTKWIDGETSHARED_EXPORT"]},{"Name":"namespace","Fields":["Dtk","Dtk::Widget","Widget"]}]}
{"Filepath":"src/platforms/mac/osxwindow.h","Functions":[{"Uniquefunname":"void HideWindowTitlebar(long winid)","Funname":"HideWindowTitlebar","Returntype":"void","Args":"long winid"},{"Uniquefunname":"void OSX::HideWindowTitlebar(long winid)","Funname":"OSX::HideWindowTitlebar","Returntype":"void","Args":"long winid"}],"Records":[{"Name":"namespace","Fields":["OSX"]}]}
{"Filepath":"src/platforms/windows/popupmenustyle.h","Functions":[{"Uniquefunname":" PopupMenuStyle()","Funname":"PopupMenuStyle","Returntype":"","Args":""},{"Uniquefunname":" PopupMenuStyle::PopupMenuStyle()","Funname":"PopupMenuStyle::PopupMenuStyle","Returntype":"","Args":""},{"Uniquefunname":"void PopupMenuStyle::drawControl(ControlElement control,const QStyleOption * option,QPainter * painter,const QWidget * widget) cons)","Funname":"PopupMenuStyle::drawControl","Returntype":"void","Args":"ControlElement control,const QStyleOption * option,QPainter * painter,const QWidget * widget) cons"},{"Uniquefunname":"void PopupMenuStyle::drawMenuItem(const QStyleOption * option,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawMenuItem","Returntype":"void","Args":"const QStyleOption * option,QPainter * painter) cons"},{"Uniquefunname":"void PopupMenuStyle::drawMenuItemCheckedIcon(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawMenuItemCheckedIcon","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void PopupMenuStyle::drawMenuItemIcon(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawMenuItemIcon","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void PopupMenuStyle::drawMenuItemSubIcon(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawMenuItemSubIcon","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void PopupMenuStyle::drawMenuItemText(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawMenuItemText","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void PopupMenuStyle::drawPrimitive(PrimitiveElement element,const QStyleOption * option,QPainter * painter,const QWidget * widget=Q_NULLPTR) cons)","Funname":"PopupMenuStyle::drawPrimitive","Returntype":"void","Args":"PrimitiveElement element,const QStyleOption * option,QPainter * painter,const QWidget * widget=Q_NULLPTR) cons"},{"Uniquefunname":"void PopupMenuStyle::drawScroller(const QStyleOption * option,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawScroller","Returntype":"void","Args":"const QStyleOption * option,QPainter * painter) cons"},{"Uniquefunname":"void PopupMenuStyle::drawSeparator(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"PopupMenuStyle::drawSeparator","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"QPixmap PopupMenuStyle::getIconPixmap(const QStyle::State state,const QIcon \u0026 icon,const QSize \u0026 size) cons)","Funname":"PopupMenuStyle::getIconPixmap","Returntype":"QPixmap","Args":"const QStyle::State state,const QIcon \u0026 icon,const QSize \u0026 size) cons"},{"Uniquefunname":"QColor PopupMenuStyle::getItemBGColor(const QStyle::State state) cons)","Funname":"PopupMenuStyle::getItemBGColor","Returntype":"QColor","Args":"const QStyle::State state) cons"},{"Uniquefunname":"QSize PopupMenuStyle::getItemSize(const QStyleOption * option,const QSize \u0026 size) cons)","Funname":"PopupMenuStyle::getItemSize","Returntype":"QSize","Args":"const QStyleOption * option,const QSize \u0026 size) cons"},{"Uniquefunname":"QPixmap PopupMenuStyle::getSubMenuPixmap(const QStyle::State state) cons)","Funname":"PopupMenuStyle::getSubMenuPixmap","Returntype":"QPixmap","Args":"const QStyle::State state) cons"},{"Uniquefunname":"int PopupMenuStyle::pixelMetric(PixelMetric metric,const QStyleOption * option=0,const QWidget * widget=0) cons)","Funname":"PopupMenuStyle::pixelMetric","Returntype":"int","Args":"PixelMetric metric,const QStyleOption * option=0,const QWidget * widget=0) cons"},{"Uniquefunname":"QSize PopupMenuStyle::sizeFromContents(ContentsType type,const QStyleOption * option,const QSize \u0026 contentsSize,const QWidget * widget=0) cons)","Funname":"PopupMenuStyle::sizeFromContents","Returntype":"QSize","Args":"ContentsType type,const QStyleOption * option,const QSize \u0026 contentsSize,const QWidget * widget=0) cons"},{"Uniquefunname":"int PopupMenuStyle::styleHint(StyleHint hint,const QStyleOption * option=0,const QWidget * widget=0,QStyleHintReturn * returnData=0) cons)","Funname":"PopupMenuStyle::styleHint","Returntype":"int","Args":"StyleHint hint,const QStyleOption * option=0,const QWidget * widget=0,QStyleHintReturn * returnData=0) cons"},{"Uniquefunname":"void drawControl(ControlElement control,const QStyleOption * option,QPainter * painter,const QWidget * widget) cons)","Funname":"drawControl","Returntype":"void","Args":"ControlElement control,const QStyleOption * option,QPainter * painter,const QWidget * widget) cons"},{"Uniquefunname":"void drawMenuItem(const QStyleOption * option,QPainter * painter) cons)","Funname":"drawMenuItem","Returntype":"void","Args":"const QStyleOption * option,QPainter * painter) cons"},{"Uniquefunname":"void drawMenuItemCheckedIcon(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"drawMenuItemCheckedIcon","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void drawMenuItemIcon(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"drawMenuItemIcon","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void drawMenuItemSubIcon(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"drawMenuItemSubIcon","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void drawMenuItemText(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"drawMenuItemText","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"void drawPrimitive(PrimitiveElement element,const QStyleOption * option,QPainter * painter,const QWidget * widget=Q_NULLPTR) cons)","Funname":"drawPrimitive","Returntype":"void","Args":"PrimitiveElement element,const QStyleOption * option,QPainter * painter,const QWidget * widget=Q_NULLPTR) cons"},{"Uniquefunname":"void drawScroller(const QStyleOption * option,QPainter * painter) cons)","Funname":"drawScroller","Returntype":"void","Args":"const QStyleOption * option,QPainter * painter) cons"},{"Uniquefunname":"void drawSeparator(const QStyleOptionMenuItem * menuItem,QPainter * painter) cons)","Funname":"drawSeparator","Returntype":"void","Args":"const QStyleOptionMenuItem * menuItem,QPainter * painter) cons"},{"Uniquefunname":"QPixmap getIconPixmap(const QStyle::State state,const QIcon \u0026 icon,const QSize \u0026 size) cons)","Funname":"getIconPixmap","Returntype":"QPixmap","Args":"const QStyle::State state,const QIcon \u0026 icon,const QSize \u0026 size) cons"},{"Uniquefunname":"QColor getItemBGColor(const QStyle::State state) cons)","Funname":"getItemBGColor","Returntype":"QColor","Args":"const QStyle::State state) cons"},{"Uniquefunname":"QSize getItemSize(const QStyleOption * option,const QSize \u0026 size) cons)","Funname":"getItemSize","Returntype":"QSize","Args":"const QStyleOption * option,const QSize \u0026 size) cons"},{"Uniquefunname":"QPixmap getSubMenuPixmap(const QStyle::State state) cons)","Funname":"getSubMenuPixmap","Returntype":"QPixmap","Args":"const QStyle::State state) cons"},{"Uniquefunname":"int pixelMetric(PixelMetric metric,const QStyleOption * option=0,const QWidget * widget=0) cons)","Funname":"pixelMetric","Returntype":"int","Args":"PixelMetric metric,const QStyleOption * option=0,const QWidget * widget=0) cons"},{"Uniquefunname":"QSize sizeFromContents(ContentsType type,const QStyleOption * option,const QSize \u0026 contentsSize,const QWidget * widget=0) cons)","Funname":"sizeFromContents","Returntype":"QSize","Args":"ContentsType type,const QStyleOption * option,const QSize \u0026 contentsSize,const QWidget * widget=0) cons"},{"Uniquefunname":"int styleHint(StyleHint hint,const QStyleOption * option=0,const QWidget * widget=0,QStyleHintReturn * returnData=0) cons)","Funname":"styleHint","Returntype":"int","Args":"StyleHint hint,const QStyleOption * option=0,const QWidget * widget=0,QStyleHintReturn * returnData=0) cons"}],"Records":[{"Name":"macro","Fields":["POPUPMENUSTYLEH"]}]}
{"Filepath":"src/platforms/x11/xutil.h","Functions":[{"Uniquefunname":"D_DECL_DEPRECATED void CancelMoveWindow(const QWidget * widget,Qt::MouseButton qbutton)","Funname":"CancelMoveWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton"},{"Uniquefunname":"D_DECL_DEPRECATED void ChangeWindowMaximizedState(const QWidget * widget,int wm_state)","Funname":"ChangeWindowMaximizedState","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,int wm_state"},{"Uniquefunname":"D_DECL_DEPRECATED void DisableResize(const QWidget * w)","Funname":"DisableResize","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * w"},{"Uniquefunname":"D_DECL_DEPRECATED CornerEdge GetCornerEdge(const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"GetCornerEdge","Returntype":"D_DECL_DEPRECATED CornerEdge","Args":"const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED bool IsCornerEdget(const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"IsCornerEdget","Returntype":"D_DECL_DEPRECATED bool","Args":"const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED void MoveResizeWindow(const QWidget * widget,Qt::MouseButton qbutton,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"MoveResizeWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED void MoveWindow(const QWidget * widget,Qt::MouseButton qbutton)","Funname":"MoveWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton"},{"Uniquefunname":"D_DECL_DEPRECATED void PropagateSizeHints(const QWidget * w)","Funname":"PropagateSizeHints","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * w"},{"Uniquefunname":"D_DECL_DEPRECATED void ResetCursorShape(const QWidget * widget)","Funname":"ResetCursorShape","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void SendMoveResizeMessage(const QWidget * widget,Qt::MouseButton qbutton,int action)","Funname":"SendMoveResizeMessage","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton,int action"},{"Uniquefunname":"D_DECL_DEPRECATED bool SetCursorShape(const QWidget * widget,int cursor_id)","Funname":"SetCursorShape","Returntype":"D_DECL_DEPRECATED bool","Args":"const QWidget * widget,int cursor_id"},{"Uniquefunname":"D_DECL_DEPRECATED void SetMouseTransparent(const QWidget * widget,bool on)","Funname":"SetMouseTransparent","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool on"},{"Uniquefunname":"D_DECL_DEPRECATED void SetStayOnTop(const QWidget * widget,bool on)","Funname":"SetStayOnTop","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool on"},{"Uniquefunname":"D_DECL_DEPRECATED void SetWindowExtents(const QWidget * widget,const QMargins \u0026 margins,const int resizeHandlSize)","Funname":"SetWindowExtents","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,const QMargins \u0026 margins,const int resizeHandlSize"},{"Uniquefunname":"D_DECL_DEPRECATED void SetWindowExtents(uint wid,const QRect \u0026 windowRect,const QMargins \u0026 margins,const int resizeHandleSize)","Funname":"SetWindowExtents","Returntype":"D_DECL_DEPRECATED void","Args":"uint wid,const QRect \u0026 windowRect,const QMargins \u0026 margins,const int resizeHandleSize"},{"Uniquefunname":"D_DECL_DEPRECATED void ShowFullscreenWindow(const QWidget * widget,bool is_fullscreen)","Funname":"ShowFullscreenWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool is_fullscreen"},{"Uniquefunname":"D_DECL_DEPRECATED void ShowMaximizedWindow(const QWidget * widget)","Funname":"ShowMaximizedWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void ShowMinimizedWindow(const QWidget * widget,bool minimized)","Funname":"ShowMinimizedWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool minimized"},{"Uniquefunname":"D_DECL_DEPRECATED void ShowNormalWindow(const QWidget * widget)","Funname":"ShowNormalWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void SkipTaskbarPager(const QWidget * widget)","Funname":"SkipTaskbarPager","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void StartResizing(const QWidget * w,const QPoint \u0026 globalPoint,const CornerEdge \u0026 ce)","Funname":"StartResizing","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * w,const QPoint \u0026 globalPoint,const CornerEdge \u0026 ce"},{"Uniquefunname":"D_DECL_DEPRECATED void ToggleMaximizedWindow(const QWidget * widget)","Funname":"ToggleMaximizedWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED bool UpdateCursorShape(const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"UpdateCursorShape","Returntype":"D_DECL_DEPRECATED bool","Args":"const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::CancelMoveWindow(const QWidget * widget,Qt::MouseButton qbutton)","Funname":"XUtils::CancelMoveWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ChangeWindowMaximizedState(const QWidget * widget,int wm_state)","Funname":"XUtils::ChangeWindowMaximizedState","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,int wm_state"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::DisableResize(const QWidget * w)","Funname":"XUtils::DisableResize","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * w"},{"Uniquefunname":"D_DECL_DEPRECATED CornerEdge XUtils::GetCornerEdge(const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"XUtils::GetCornerEdge","Returntype":"D_DECL_DEPRECATED CornerEdge","Args":"const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED bool XUtils::IsCornerEdget(const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"XUtils::IsCornerEdget","Returntype":"D_DECL_DEPRECATED bool","Args":"const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::MoveResizeWindow(const QWidget * widget,Qt::MouseButton qbutton,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"XUtils::MoveResizeWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton,int x,int y,const QMargins \u0026 margins,int border_width"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::MoveWindow(const QWidget * widget,Qt::MouseButton qbutton)","Funname":"XUtils::MoveWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::PropagateSizeHints(const QWidget * w)","Funname":"XUtils::PropagateSizeHints","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * w"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ResetCursorShape(const QWidget * widget)","Funname":"XUtils::ResetCursorShape","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::SendMoveResizeMessage(const QWidget * widget,Qt::MouseButton qbutton,int action)","Funname":"XUtils::SendMoveResizeMessage","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,Qt::MouseButton qbutton,int action"},{"Uniquefunname":"D_DECL_DEPRECATED bool XUtils::SetCursorShape(const QWidget * widget,int cursor_id)","Funname":"XUtils::SetCursorShape","Returntype":"D_DECL_DEPRECATED bool","Args":"const QWidget * widget,int cursor_id"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::SetMouseTransparent(const QWidget * widget,bool on)","Funname":"XUtils::SetMouseTransparent","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool on"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::SetStayOnTop(const QWidget * widget,bool on)","Funname":"XUtils::SetStayOnTop","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool on"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::SetWindowExtents(const QWidget * widget,const QMargins \u0026 margins,const int resizeHandlSize)","Funname":"XUtils::SetWindowExtents","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,const QMargins \u0026 margins,const int resizeHandlSize"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::SetWindowExtents(uint wid,const QRect \u0026 windowRect,const QMargins \u0026 margins,const int resizeHandleSize)","Funname":"XUtils::SetWindowExtents","Returntype":"D_DECL_DEPRECATED void","Args":"uint wid,const QRect \u0026 windowRect,const QMargins \u0026 margins,const int resizeHandleSize"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ShowFullscreenWindow(const QWidget * widget,bool is_fullscreen)","Funname":"XUtils::ShowFullscreenWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool is_fullscreen"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ShowMaximizedWindow(const QWidget * widget)","Funname":"XUtils::ShowMaximizedWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ShowMinimizedWindow(const QWidget * widget,bool minimized)","Funname":"XUtils::ShowMinimizedWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget,bool minimized"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ShowNormalWindow(const QWidget * widget)","Funname":"XUtils::ShowNormalWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::SkipTaskbarPager(const QWidget * widget)","Funname":"XUtils::SkipTaskbarPager","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::StartResizing(const QWidget * w,const QPoint \u0026 globalPoint,const CornerEdge \u0026 ce)","Funname":"XUtils::StartResizing","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * w,const QPoint \u0026 globalPoint,const CornerEdge \u0026 ce"},{"Uniquefunname":"D_DECL_DEPRECATED void XUtils::ToggleMaximizedWindow(const QWidget * widget)","Funname":"XUtils::ToggleMaximizedWindow","Returntype":"D_DECL_DEPRECATED void","Args":"const QWidget * widget"},{"Uniquefunname":"D_DECL_DEPRECATED bool XUtils::UpdateCursorShape(const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width)","Funname":"XUtils::UpdateCursorShape","Returntype":"D_DECL_DEPRECATED bool","Args":"const QWidget * widget,int x,int y,const QMargins \u0026 margins,int border_width"}],"Records":[{"Name":"namespace","Fields":["XUtils"]},{"Name":"enum:XUtils::XCursorType","Fields":["XUtils::kArrow","XUtils::kBottom","XUtils::kBottomLeft","XUtils::kBottomRight","XUtils::kInvalid","XUtils::kLeft","XUtils::kRight","XUtils::kTop","XUtils::kTopLeft","XUtils::kTopRight","kArrow","kBottom","kBottomLeft","kBottomRight","kInvalid","kLeft","kRight","kTop","kTopLeft","kTopRight"]},{"Name":"enum:XUtils::CornerEdge","Fields":["XUtils::kBottom","XUtils::kBottomLeft","XUtils::kBottomRight","XUtils::kInvalid","XUtils::kLeft","XUtils::kRight","XUtils::kTop","XUtils::kTopLeft","XUtils::kTopRight","kBottom","kBottomLeft","kBottomRight","kInvalid","kLeft","kRight","kTop","kTopLeft","kTopRight"]}]}
{"Filepath":"src/util/dapplicationsettings.h","Functions":[{"Uniquefunname":" DApplicationSettings(QObject * parent=nullptr)","Funname":"DApplicationSettings","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":" DApplicationSettings::DApplicationSettings(QObject * parent=nullptr)","Funname":"DApplicationSettings::DApplicationSettings","Returntype":"","Args":"QObject * parent=nullptr"}],"Records":[{"Name":"macro","Fields":["DAPPLICATIONSETTINGS_H"]}]}
{"Filepath":"src/util/ddesktopservices.h","Functions":[{"Uniquefunname":"QString DDesktopServices::errorMessage()","Funname":"DDesktopServices::errorMessage","Returntype":"QString","Args":""},{"Uniquefunname":"QString DDesktopServices::getNameByEffectType(const SystemSoundEffect \u0026 effect)","Funname":"DDesktopServices::getNameByEffectType","Returntype":"QString","Args":"const SystemSoundEffect \u0026 effect"},{"Uniquefunname":"bool DDesktopServices::playSystemSoundEffect(const QString \u0026 name)","Funname":"DDesktopServices::playSystemSoundEffect","Returntype":"bool","Args":"const QString \u0026 name"},{"Uniquefunname":"bool DDesktopServices::playSystemSoundEffect(const SystemSoundEffect \u0026 effect)","Funname":"DDesktopServices::playSystemSoundEffect","Returntype":"bool","Args":"const SystemSoundEffect \u0026 effect"},{"Uniquefunname":"bool DDesktopServices::previewSystemSoundEffect(const QString \u0026 name)","Funname":"DDesktopServices::previewSystemSoundEffect","Returntype":"bool","Args":"const QString \u0026 name"},{"Uniquefunname":"bool DDesktopServices::previewSystemSoundEffect(const SystemSoundEffect \u0026 effect)","Funname":"DDesktopServices::previewSystemSoundEffect","Returntype":"bool","Args":"const SystemSoundEffect \u0026 effect"},{"Uniquefunname":"bool DDesktopServices::showFileItem(QString localFilePath,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItem","Returntype":"bool","Args":"QString localFilePath,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItem(QUrl url,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItem","Returntype":"bool","Args":"QUrl url,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItemPropertie(QString localFilePath,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItemPropertie","Returntype":"bool","Args":"QString localFilePath,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItemPropertie(QUrl url,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItemPropertie","Returntype":"bool","Args":"QUrl url,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItemProperties(const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItemProperties","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItemProperties(const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItemProperties","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItems(const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItems","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFileItems(const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFileItems","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFolder(QString localFilePath,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFolder","Returntype":"bool","Args":"QString localFilePath,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFolder(QUrl url,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFolder","Returntype":"bool","Args":"QUrl url,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFolders(const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFolders","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::showFolders(const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ())","Funname":"DDesktopServices::showFolders","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool DDesktopServices::trash(QString localFilePath)","Funname":"DDesktopServices::trash","Returntype":"bool","Args":"QString localFilePath"},{"Uniquefunname":"bool DDesktopServices::trash(QUrl urlstartupId)","Funname":"DDesktopServices::trash","Returntype":"bool","Args":"QUrl urlstartupId"},{"Uniquefunname":"bool DDesktopServices::trash(const QList\u003cQString\u003e localFilePaths)","Funname":"DDesktopServices::trash","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths"},{"Uniquefunname":"bool DDesktopServices::trash(const QList\u003cQUrl\u003e urls)","Funname":"DDesktopServices::trash","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls"},{"Uniquefunname":"QString errorMessage()","Funname":"errorMessage","Returntype":"QString","Args":""},{"Uniquefunname":"QString getNameByEffectType(const SystemSoundEffect \u0026 effect)","Funname":"getNameByEffectType","Returntype":"QString","Args":"const SystemSoundEffect \u0026 effect"},{"Uniquefunname":"bool playSystemSoundEffect(const QString \u0026 name)","Funname":"playSystemSoundEffect","Returntype":"bool","Args":"const QString \u0026 name"},{"Uniquefunname":"bool playSystemSoundEffect(const SystemSoundEffect \u0026 effect)","Funname":"playSystemSoundEffect","Returntype":"bool","Args":"const SystemSoundEffect \u0026 effect"},{"Uniquefunname":"bool previewSystemSoundEffect(const QString \u0026 name)","Funname":"previewSystemSoundEffect","Returntype":"bool","Args":"const QString \u0026 name"},{"Uniquefunname":"bool previewSystemSoundEffect(const SystemSoundEffect \u0026 effect)","Funname":"previewSystemSoundEffect","Returntype":"bool","Args":"const SystemSoundEffect \u0026 effect"},{"Uniquefunname":"bool showFileItem(QString localFilePath,const QString \u0026 startupId=QString ())","Funname":"showFileItem","Returntype":"bool","Args":"QString localFilePath,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItem(QUrl url,const QString \u0026 startupId=QString ())","Funname":"showFileItem","Returntype":"bool","Args":"QUrl url,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItemPropertie(QString localFilePath,const QString \u0026 startupId=QString ())","Funname":"showFileItemPropertie","Returntype":"bool","Args":"QString localFilePath,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItemPropertie(QUrl url,const QString \u0026 startupId=QString ())","Funname":"showFileItemPropertie","Returntype":"bool","Args":"QUrl url,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItemProperties(const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ())","Funname":"showFileItemProperties","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItemProperties(const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ())","Funname":"showFileItemProperties","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItems(const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ())","Funname":"showFileItems","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFileItems(const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ())","Funname":"showFileItems","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFolder(QString localFilePath,const QString \u0026 startupId=QString ())","Funname":"showFolder","Returntype":"bool","Args":"QString localFilePath,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFolder(QUrl url,const QString \u0026 startupId=QString ())","Funname":"showFolder","Returntype":"bool","Args":"QUrl url,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFolders(const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ())","Funname":"showFolders","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool showFolders(const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ())","Funname":"showFolders","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls,const QString \u0026 startupId=QString ()"},{"Uniquefunname":"bool trash(QString localFilePath)","Funname":"trash","Returntype":"bool","Args":"QString localFilePath"},{"Uniquefunname":"bool trash(QUrl urlstartupId)","Funname":"trash","Returntype":"bool","Args":"QUrl urlstartupId"},{"Uniquefunname":"bool trash(const QList\u003cQString\u003e localFilePaths)","Funname":"trash","Returntype":"bool","Args":"const QList\u003cQString\u003e localFilePaths"},{"Uniquefunname":"bool trash(const QList\u003cQUrl\u003e urls)","Funname":"trash","Returntype":"bool","Args":"const QList\u003cQUrl\u003e urls"}],"Records":[{"Name":"macro","Fields":["DDESKTOPSERVICES_H"]},{"Name":"enum:DDesktopServices::SystemSoundEffect","Fields":["DDesktopServices::SEE_Screenshot","DDesktopServices::SSE_BootUp","DDesktopServices::SSE_DeviceAdded","DDesktopServices::SSE_DeviceRemoved","DDesktopServices::SSE_EmptyTrash","DDesktopServices::SSE_Error","DDesktopServices::SSE_Logout","DDesktopServices::SSE_LowBattery","DDesktopServices::SSE_Notifications","DDesktopServices::SSE_PlugIn","DDesktopServices::SSE_PlugOut","DDesktopServices::SSE_SendFileComplete","DDesktopServices::SSE_Shutdown","DDesktopServices::SSE_VolumeChange","DDesktopServices::SSE_WakeUp","SEE_Screenshot","SSE_BootUp","SSE_DeviceAdded","SSE_DeviceRemoved","SSE_EmptyTrash","SSE_Error","SSE_Logout","SSE_LowBattery","SSE_Notifications","SSE_PlugIn","SSE_PlugOut","SSE_SendFileComplete","SSE_Shutdown","SSE_VolumeChange","SSE_WakeUp"]}]}
{"Filepath":"src/util/dfileiconprovider.h","Functions":[{"Uniquefunname":" DFileIconProvider()","Funname":"DFileIconProvider","Returntype":"","Args":""},{"Uniquefunname":" DFileIconProvider::DFileIconProvider()","Funname":"DFileIconProvider::DFileIconProvider","Returntype":"","Args":""},{"Uniquefunname":"DFileIconProvider * DFileIconProvider::globalProvider()","Funname":"DFileIconProvider::globalProvider","Returntype":"DFileIconProvider *","Args":""},{"Uniquefunname":"QIcon DFileIconProvider::icon(const QFileInfo \u0026 info) cons)","Funname":"DFileIconProvider::icon","Returntype":"QIcon","Args":"const QFileInfo \u0026 info) cons"},{"Uniquefunname":"QIcon DFileIconProvider::icon(const QFileInfo \u0026 info,const QIcon \u0026 feedback) cons)","Funname":"DFileIconProvider::icon","Returntype":"QIcon","Args":"const QFileInfo \u0026 info,const QIcon \u0026 feedback) cons"},{"Uniquefunname":"DFileIconProvider * globalProvider()","Funname":"globalProvider","Returntype":"DFileIconProvider *","Args":""},{"Uniquefunname":"QIcon icon(const QFileInfo \u0026 info) cons)","Funname":"icon","Returntype":"QIcon","Args":"const QFileInfo \u0026 info) cons"},{"Uniquefunname":"QIcon icon(const QFileInfo \u0026 info,const QIcon \u0026 feedback) cons)","Funname":"icon","Returntype":"QIcon","Args":"const QFileInfo \u0026 info,const QIcon \u0026 feedback) cons"}],"Records":[{"Name":"macro","Fields":["DFILEICONPROVIDER_H"]}]}
{"Filepath":"src/util/dhidpihelper.h","Functions":[{"Uniquefunname":"QPixmap DHiDPIHelper::loadNxPixmap(const QString \u0026 fileName)","Funname":"DHiDPIHelper::loadNxPixmap","Returntype":"QPixmap","Args":"const QString \u0026 fileName"},{"Uniquefunname":"QPixmap loadNxPixmap(const QString \u0026 fileName)","Funname":"loadNxPixmap","Returntype":"QPixmap","Args":"const QString \u0026 fileName"}],"Records":[{"Name":"macro","Fields":["DHIDPIHELPER_H"]}]}
{"Filepath":"src/util/dregionmonitor.h","Functions":[{"Uniquefunname":" DRegionMonitor(QObject * parent=nullptr)","Funname":"DRegionMonitor","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":" DRegionMonitor::DRegionMonitor(QObject * parent=nullptr)","Funname":"DRegionMonitor::DRegionMonitor","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":"    Q_ENUM(CoordinateType)","Funname":"DRegionMonitor::Q_ENUM","Returntype":"","Args":"CoordinateType"},{"Uniquefunname":"void DRegionMonitor::buttonRelease(const QPoint \u0026 p,const int flag) cons)","Funname":"DRegionMonitor::buttonRelease","Returntype":"void","Args":"const QPoint \u0026 p,const int flag) cons"},{"Uniquefunname":"CoordinateType DRegionMonitor::coordinateType() cons)","Funname":"DRegionMonitor::coordinateType","Returntype":"CoordinateType","Args":") cons"},{"Uniquefunname":"void DRegionMonitor::coordinateTypeChanged(CoordinateType type) cons)","Funname":"DRegionMonitor::coordinateTypeChanged","Returntype":"void","Args":"CoordinateType type) cons"},{"Uniquefunname":"void DRegionMonitor::cursorMove(const QPoint \u0026 p) cons)","Funname":"DRegionMonitor::cursorMove","Returntype":"void","Args":"const QPoint \u0026 p) cons"},{"Uniquefunname":"void DRegionMonitor::keyPress(const QString \u0026 keyname) cons)","Funname":"DRegionMonitor::keyPress","Returntype":"void","Args":"const QString \u0026 keyname) cons"},{"Uniquefunname":"void DRegionMonitor::keyRelease(const QString \u0026 keyname) cons)","Funname":"DRegionMonitor::keyRelease","Returntype":"void","Args":"const QString \u0026 keyname) cons"},{"Uniquefunname":"    inline void registerRegion(const QRegion \u0026region)","Funname":"DRegionMonitor::registerRegion","Returntype":"void","Args":"const QRegion \u0026 region"},{"Uniquefunname":"void DRegionMonitor::registerRegion()","Funname":"DRegionMonitor::registerRegion","Returntype":"void","Args":""},{"Uniquefunname":"void DRegionMonitor::setCoordinateType(CoordinateType type)","Funname":"DRegionMonitor::setCoordinateType","Returntype":"void","Args":"CoordinateType type"},{"Uniquefunname":"void DRegionMonitor::setWatchedRegion(const QRegion \u0026 region)","Funname":"DRegionMonitor::setWatchedRegion","Returntype":"void","Args":"const QRegion \u0026 region"},{"Uniquefunname":"void DRegionMonitor::unregisterRegion()","Funname":"DRegionMonitor::unregisterRegion","Returntype":"void","Args":""},{"Uniquefunname":"QRegion DRegionMonitor::watchedRegion() cons)","Funname":"DRegionMonitor::watchedRegion","Returntype":"QRegion","Args":") cons"},{"Uniquefunname":"    Q_ENUM(CoordinateType)","Funname":"Q_ENUM","Returntype":"","Args":"CoordinateType"},{"Uniquefunname":"void buttonRelease(const QPoint \u0026 p,const int flag) cons)","Funname":"buttonRelease","Returntype":"void","Args":"const QPoint \u0026 p,const int flag) cons"},{"Uniquefunname":"CoordinateType coordinateType() cons)","Funname":"coordinateType","Returntype":"CoordinateType","Args":") cons"},{"Uniquefunname":"void coordinateTypeChanged(CoordinateType type) cons)","Funname":"coordinateTypeChanged","Returntype":"void","Args":"CoordinateType type) cons"},{"Uniquefunname":"void cursorMove(const QPoint \u0026 p) cons)","Funname":"cursorMove","Returntype":"void","Args":"const QPoint \u0026 p) cons"},{"Uniquefunname":"void keyPress(const QString \u0026 keyname) cons)","Funname":"keyPress","Returntype":"void","Args":"const QString \u0026 keyname) cons"},{"Uniquefunname":"void keyRelease(const QString \u0026 keyname) cons)","Funname":"keyRelease","Returntype":"void","Args":"const QString \u0026 keyname) cons"},{"Uniquefunname":"    inline void registerRegion(const QRegion \u0026region)","Funname":"registerRegion","Returntype":"void","Args":"const QRegion \u0026 region"},{"Uniquefunname":"void registerRegion()","Funname":"registerRegion","Returntype":"void","Args":""},{"Uniquefunname":"void setCoordinateType(CoordinateType type)","Funname":"setCoordinateType","Returntype":"void","Args":"CoordinateType type"},{"Uniquefunname":"void setWatchedRegion(const QRegion \u0026 region)","Funname":"setWatchedRegion","Returntype":"void","Args":"const QRegion \u0026 region"},{"Uniquefunname":"void unregisterRegion()","Funname":"unregisterRegion","Returntype":"void","Args":""},{"Uniquefunname":"QRegion watchedRegion() cons)","Funname":"watchedRegion","Returntype":"QRegion","Args":") cons"}],"Records":[{"Name":"enum:DRegionMonitor::WatchedFlags","Fields":["Button_Left","Button_Right","DRegionMonitor::Button_Left","DRegionMonitor::Button_Right"]},{"Name":"macro","Fields":["DREGIONMONITOR_H_DWIDGET"]},{"Name":"enum:DRegionMonitor::CoordinateType","Fields":["DRegionMonitor::Original","DRegionMonitor::ScaleRatio","Original","ScaleRatio"]}]}
{"Filepath":"src/util/dthumbnailprovider.h","Functions":[{"Uniquefunname":" DThumbnailProvider(QObject * parent=0)","Funname":"DThumbnailProvider","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DThumbnailProvider::DThumbnailProvider(QObject * parent=0)","Funname":"DThumbnailProvider::DThumbnailProvider","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"void DThumbnailProvider::appendToProduceQueue(const QFileInfo \u0026 info,Size size,CallBack callback=0)","Funname":"DThumbnailProvider::appendToProduceQueue","Returntype":"void","Args":"const QFileInfo \u0026 info,Size size,CallBack callback=0"},{"Uniquefunname":"QString DThumbnailProvider::createThumbnail(const QFileInfo \u0026 info,Size size)","Funname":"DThumbnailProvider::createThumbnail","Returntype":"QString","Args":"const QFileInfo \u0026 info,Size size"},{"Uniquefunname":"void DThumbnailProvider::createThumbnailFailed(const QString \u0026 sourceFilePath) cons)","Funname":"DThumbnailProvider::createThumbnailFailed","Returntype":"void","Args":"const QString \u0026 sourceFilePath) cons"},{"Uniquefunname":"void DThumbnailProvider::createThumbnailFinished(const QString \u0026 sourceFilePath,const QString \u0026 thumbnailPath) cons)","Funname":"DThumbnailProvider::createThumbnailFinished","Returntype":"void","Args":"const QString \u0026 sourceFilePath,const QString \u0026 thumbnailPath) cons"},{"Uniquefunname":"qint64 DThumbnailProvider::defaultSizeLimit() cons)","Funname":"DThumbnailProvider::defaultSizeLimit","Returntype":"qint64","Args":") cons"},{"Uniquefunname":"QString DThumbnailProvider::errorString() cons)","Funname":"DThumbnailProvider::errorString","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool DThumbnailProvider::hasThumbnail(const QFileInfo \u0026 info) cons)","Funname":"DThumbnailProvider::hasThumbnail","Returntype":"bool","Args":"const QFileInfo \u0026 info) cons"},{"Uniquefunname":"bool DThumbnailProvider::hasThumbnail(const QMimeType \u0026 mimeType) cons)","Funname":"DThumbnailProvider::hasThumbnail","Returntype":"bool","Args":"const QMimeType \u0026 mimeType) cons"},{"Uniquefunname":"DThumbnailProvider * DThumbnailProvider::instance()","Funname":"DThumbnailProvider::instance","Returntype":"DThumbnailProvider *","Args":""},{"Uniquefunname":"void DThumbnailProvider::removeInProduceQueue(const QFileInfo \u0026 info,Size size)","Funname":"DThumbnailProvider::removeInProduceQueue","Returntype":"void","Args":"const QFileInfo \u0026 info,Size size"},{"Uniquefunname":"void DThumbnailProvider::run()","Funname":"DThumbnailProvider::run","Returntype":"void","Args":""},{"Uniquefunname":"void DThumbnailProvider::setDefaultSizeLimit(qint64 size)","Funname":"DThumbnailProvider::setDefaultSizeLimit","Returntype":"void","Args":"qint64 size"},{"Uniquefunname":"void DThumbnailProvider::setSizeLimit(const QMimeType \u0026 mimeType,qint64 size)","Funname":"DThumbnailProvider::setSizeLimit","Returntype":"void","Args":"const QMimeType \u0026 mimeType,qint64 size"},{"Uniquefunname":"qint64 DThumbnailProvider::sizeLimit(const QMimeType \u0026 mimeType) cons)","Funname":"DThumbnailProvider::sizeLimit","Returntype":"qint64","Args":"const QMimeType \u0026 mimeType) cons"},{"Uniquefunname":"QString DThumbnailProvider::thumbnailFilePath(const QFileInfo \u0026 info,Size size) cons)","Funname":"DThumbnailProvider::thumbnailFilePath","Returntype":"QString","Args":"const QFileInfo \u0026 info,Size size) cons"},{"Uniquefunname":" DThumbnailProvider::~DThumbnailProvider()","Funname":"DThumbnailProvider::~DThumbnailProvider","Returntype":"","Args":""},{"Uniquefunname":"void appendToProduceQueue(const QFileInfo \u0026 info,Size size,CallBack callback=0)","Funname":"appendToProduceQueue","Returntype":"void","Args":"const QFileInfo \u0026 info,Size size,CallBack callback=0"},{"Uniquefunname":"QString createThumbnail(const QFileInfo \u0026 info,Size size)","Funname":"createThumbnail","Returntype":"QString","Args":"const QFileInfo \u0026 info,Size size"},{"Uniquefunname":"void createThumbnailFailed(const QString \u0026 sourceFilePath) cons)","Funname":"createThumbnailFailed","Returntype":"void","Args":"const QString \u0026 sourceFilePath) cons"},{"Uniquefunname":"void createThumbnailFinished(const QString \u0026 sourceFilePath,const QString \u0026 thumbnailPath) cons)","Funname":"createThumbnailFinished","Returntype":"void","Args":"const QString \u0026 sourceFilePath,const QString \u0026 thumbnailPath) cons"},{"Uniquefunname":"qint64 defaultSizeLimit() cons)","Funname":"defaultSizeLimit","Returntype":"qint64","Args":") cons"},{"Uniquefunname":"QString errorString() cons)","Funname":"errorString","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool hasThumbnail(const QFileInfo \u0026 info) cons)","Funname":"hasThumbnail","Returntype":"bool","Args":"const QFileInfo \u0026 info) cons"},{"Uniquefunname":"bool hasThumbnail(const QMimeType \u0026 mimeType) cons)","Funname":"hasThumbnail","Returntype":"bool","Args":"const QMimeType \u0026 mimeType) cons"},{"Uniquefunname":"DThumbnailProvider * instance()","Funname":"instance","Returntype":"DThumbnailProvider *","Args":""},{"Uniquefunname":"void removeInProduceQueue(const QFileInfo \u0026 info,Size size)","Funname":"removeInProduceQueue","Returntype":"void","Args":"const QFileInfo \u0026 info,Size size"},{"Uniquefunname":"void run()","Funname":"run","Returntype":"void","Args":""},{"Uniquefunname":"void setDefaultSizeLimit(qint64 size)","Funname":"setDefaultSizeLimit","Returntype":"void","Args":"qint64 size"},{"Uniquefunname":"void setSizeLimit(const QMimeType \u0026 mimeType,qint64 size)","Funname":"setSizeLimit","Returntype":"void","Args":"const QMimeType \u0026 mimeType,qint64 size"},{"Uniquefunname":"qint64 sizeLimit(const QMimeType \u0026 mimeType) cons)","Funname":"sizeLimit","Returntype":"qint64","Args":"const QMimeType \u0026 mimeType) cons"},{"Uniquefunname":"QString thumbnailFilePath(const QFileInfo \u0026 info,Size size) cons)","Funname":"thumbnailFilePath","Returntype":"QString","Args":"const QFileInfo \u0026 info,Size size) cons"},{"Uniquefunname":" ~DThumbnailProvider()","Funname":"~DThumbnailProvider","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DFILETHUMBNAILPROVIDER_H"]},{"Name":"enum:DThumbnailProvider::Size","Fields":["DThumbnailProvider::Large","DThumbnailProvider::Normal","DThumbnailProvider::Small","Large","Normal","Small"]}]}
{"Filepath":"src/util/dtrashmanager.h","Functions":[{"Uniquefunname":" DTrashManager()","Funname":"DTrashManager","Returntype":"","Args":""},{"Uniquefunname":" DTrashManager::DTrashManager()","Funname":"DTrashManager::DTrashManager","Returntype":"","Args":""},{"Uniquefunname":"bool DTrashManager::cleanTrash()","Funname":"DTrashManager::cleanTrash","Returntype":"bool","Args":""},{"Uniquefunname":"DTrashManager * DTrashManager::instance()","Funname":"DTrashManager::instance","Returntype":"DTrashManager *","Args":""},{"Uniquefunname":"bool DTrashManager::moveToTrash(const QString \u0026 filePath,bool followSymlink=false)","Funname":"DTrashManager::moveToTrash","Returntype":"bool","Args":"const QString \u0026 filePath,bool followSymlink=false"},{"Uniquefunname":"bool DTrashManager::trashIsEmpty() cons)","Funname":"DTrashManager::trashIsEmpty","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool cleanTrash()","Funname":"cleanTrash","Returntype":"bool","Args":""},{"Uniquefunname":"DTrashManager * instance()","Funname":"instance","Returntype":"DTrashManager *","Args":""},{"Uniquefunname":"bool moveToTrash(const QString \u0026 filePath,bool followSymlink=false)","Funname":"moveToTrash","Returntype":"bool","Args":"const QString \u0026 filePath,bool followSymlink=false"},{"Uniquefunname":"bool trashIsEmpty() cons)","Funname":"trashIsEmpty","Returntype":"bool","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DTRASHMANAGER_H"]}]}
{"Filepath":"src/util/dwidgetutil.h","Functions":[{"Uniquefunname":"DWIDGET_BEGIN_NAMESPACE QImage dropShadow(const QPixmap \u0026 px,qreal radius,const QColor \u0026 color=Qt::black)","Funname":"dropShadow","Returntype":"DWIDGET_BEGIN_NAMESPACE QImage","Args":"const QPixmap \u0026 px,qreal radius,const QColor \u0026 color=Qt::black"},{"Uniquefunname":"QStringList elideText(const QString \u0026 text,const QSize \u0026 size,const QFontMetrics \u0026 fontMetrics,QTextOption::WrapMode wordWrap,Qt::TextElideMode mode,int flags=0)","Funname":"elideText","Returntype":"QStringList","Args":"const QString \u0026 text,const QSize \u0026 size,const QFontMetrics \u0026 fontMetrics,QTextOption::WrapMode wordWrap,Qt::TextElideMode mode,int flags=0"},{"Uniquefunname":"QIcon getCircleIcon(const QIcon \u0026 icon,int diameter=36)","Funname":"getCircleIcon","Returntype":"QIcon","Args":"const QIcon \u0026 icon,int diameter=36"},{"Uniquefunname":"QIcon getCircleIcon(const QPixmap \u0026 pixmap,int diameter=36)","Funname":"getCircleIcon","Returntype":"QIcon","Args":"const QPixmap \u0026 pixmap,int diameter=36"},{"Uniquefunname":"void moveToCenter(QWidget * w)","Funname":"moveToCenter","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"QStringList wordWrapText(const QString \u0026 text,int width,QTextOption::WrapMode wrapMode,int * lineCount=0)","Funname":"wordWrapText","Returntype":"QStringList","Args":"const QString \u0026 text,int width,QTextOption::WrapMode wrapMode,int * lineCount=0"}],"Records":[{"Name":"macro","Fields":["DUTILITY_H"]}]}
{"Filepath":"src/util/private/dregionmonitor_p.h","Functions":[{"Uniquefunname":" DRegionMonitorPrivate(DObject * qq,QObject * parent=nullptr)","Funname":"DRegionMonitorPrivate","Returntype":"","Args":"DObject * qq,QObject * parent=nullptr"},{"Uniquefunname":" DRegionMonitorPrivate::DRegionMonitorPrivate(DObject * qq,QObject * parent=nullptr)","Funname":"DRegionMonitorPrivate::DRegionMonitorPrivate","Returntype":"","Args":"DObject * qq,QObject * parent=nullptr"},{"Uniquefunname":" DRegionMonitorPrivate::~DRegionMonitorPrivate()","Funname":"DRegionMonitorPrivate::~DRegionMonitorPrivate","Returntype":"","Args":""},{"Uniquefunname":" ~DRegionMonitorPrivate()","Funname":"~DRegionMonitorPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DREGIONMONITOR_P_H_DWIDGET"]},{"Name":"class:DRegionMonitorPrivate","Fields":["GuiDRegionMonitor * DRegionMonitorPrivate::guiRegionMonitor"]}]}
{"Filepath":"src/widgets/daboutdialog.h","Functions":[{"Uniquefunname":" DAboutDialog(QWidget * parent=0)","Funname":"DAboutDialog","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DAboutDialog::DAboutDialog(QWidget * parent=0)","Funname":"DAboutDialog::DAboutDialog","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"QString DAboutDialog::acknowledgementLink() cons)","Funname":"DAboutDialog::acknowledgementLink","Returntype":"QString","Args":") cons"},{"Uniquefunname":"const QPixmap * DAboutDialog::companyLogo() cons)","Funname":"DAboutDialog::companyLogo","Returntype":"const QPixmap *","Args":") cons"},{"Uniquefunname":"QString DAboutDialog::description() cons)","Funname":"DAboutDialog::description","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DAboutDialog::keyPressEvent(QKeyEvent * event)","Funname":"DAboutDialog::keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QString DAboutDialog::license() cons)","Funname":"DAboutDialog::license","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DAboutDialog::productName() cons)","Funname":"DAboutDialog::productName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DAboutDialog::setAcknowledgementLink(const QString \u0026 acknowledgementLink)","Funname":"DAboutDialog::setAcknowledgementLink","Returntype":"void","Args":"const QString \u0026 acknowledgementLink"},{"Uniquefunname":"void DAboutDialog::setAcknowledgementVisible(bool visible)","Funname":"DAboutDialog::setAcknowledgementVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DAboutDialog::setCompanyLogo(const QPixmap \u0026 companyLogo)","Funname":"DAboutDialog::setCompanyLogo","Returntype":"void","Args":"const QPixmap \u0026 companyLogo"},{"Uniquefunname":"void DAboutDialog::setDescription(const QString \u0026 description)","Funname":"DAboutDialog::setDescription","Returntype":"void","Args":"const QString \u0026 description"},{"Uniquefunname":"void DAboutDialog::setLicense(const QString \u0026 license)","Funname":"DAboutDialog::setLicense","Returntype":"void","Args":"const QString \u0026 license"},{"Uniquefunname":"void DAboutDialog::setProductIcon(const QIcon \u0026 icon)","Funname":"DAboutDialog::setProductIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void DAboutDialog::setProductName(const QString \u0026 productName)","Funname":"DAboutDialog::setProductName","Returntype":"void","Args":"const QString \u0026 productName"},{"Uniquefunname":"void DAboutDialog::setVersion(const QString \u0026 version)","Funname":"DAboutDialog::setVersion","Returntype":"void","Args":"const QString \u0026 version"},{"Uniquefunname":"void DAboutDialog::setWebsiteLink(const QString \u0026 websiteLink)","Funname":"DAboutDialog::setWebsiteLink","Returntype":"void","Args":"const QString \u0026 websiteLink"},{"Uniquefunname":"void DAboutDialog::setWebsiteName(const QString \u0026 websiteName)","Funname":"DAboutDialog::setWebsiteName","Returntype":"void","Args":"const QString \u0026 websiteName"},{"Uniquefunname":"void DAboutDialog::setWindowTitle(const QString \u0026 windowTitle)","Funname":"DAboutDialog::setWindowTitle","Returntype":"void","Args":"const QString \u0026 windowTitle"},{"Uniquefunname":"void DAboutDialog::showEvent(QShowEvent * event)","Funname":"DAboutDialog::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QString DAboutDialog::version() cons)","Funname":"DAboutDialog::version","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DAboutDialog::websiteLink() cons)","Funname":"DAboutDialog::websiteLink","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DAboutDialog::websiteName() cons)","Funname":"DAboutDialog::websiteName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DAboutDialog::windowTitle() cons)","Funname":"DAboutDialog::windowTitle","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString acknowledgementLink() cons)","Funname":"acknowledgementLink","Returntype":"QString","Args":") cons"},{"Uniquefunname":"const QPixmap * companyLogo() cons)","Funname":"companyLogo","Returntype":"const QPixmap *","Args":") cons"},{"Uniquefunname":"QString description() cons)","Funname":"description","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * event)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QString license() cons)","Funname":"license","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString productName() cons)","Funname":"productName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void setAcknowledgementLink(const QString \u0026 acknowledgementLink)","Funname":"setAcknowledgementLink","Returntype":"void","Args":"const QString \u0026 acknowledgementLink"},{"Uniquefunname":"void setAcknowledgementVisible(bool visible)","Funname":"setAcknowledgementVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setCompanyLogo(const QPixmap \u0026 companyLogo)","Funname":"setCompanyLogo","Returntype":"void","Args":"const QPixmap \u0026 companyLogo"},{"Uniquefunname":"void setDescription(const QString \u0026 description)","Funname":"setDescription","Returntype":"void","Args":"const QString \u0026 description"},{"Uniquefunname":"void setLicense(const QString \u0026 license)","Funname":"setLicense","Returntype":"void","Args":"const QString \u0026 license"},{"Uniquefunname":"void setProductIcon(const QIcon \u0026 icon)","Funname":"setProductIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void setProductName(const QString \u0026 productName)","Funname":"setProductName","Returntype":"void","Args":"const QString \u0026 productName"},{"Uniquefunname":"void setVersion(const QString \u0026 version)","Funname":"setVersion","Returntype":"void","Args":"const QString \u0026 version"},{"Uniquefunname":"void setWebsiteLink(const QString \u0026 websiteLink)","Funname":"setWebsiteLink","Returntype":"void","Args":"const QString \u0026 websiteLink"},{"Uniquefunname":"void setWebsiteName(const QString \u0026 websiteName)","Funname":"setWebsiteName","Returntype":"void","Args":"const QString \u0026 websiteName"},{"Uniquefunname":"void setWindowTitle(const QString \u0026 windowTitle)","Funname":"setWindowTitle","Returntype":"void","Args":"const QString \u0026 windowTitle"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QString version() cons)","Funname":"version","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString websiteLink() cons)","Funname":"websiteLink","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString websiteName() cons)","Funname":"websiteName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString windowTitle() cons)","Funname":"windowTitle","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DABOUTDIALOG_H"]}]}
{"Filepath":"src/widgets/dabstractdialog.h","Functions":[{"Uniquefunname":" DAbstractDialog(DAbstractDialogPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DAbstractDialog","Returntype":"","Args":"DAbstractDialogPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DAbstractDialog(bool blurIfPossible,QWidget * parent=nullptr)","Funname":"DAbstractDialog","Returntype":"","Args":"bool blurIfPossible,QWidget * parent=nullptr"},{"Uniquefunname":" DAbstractDialog::DAbstractDialog(DAbstractDialogPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DAbstractDialog::DAbstractDialog","Returntype":"","Args":"DAbstractDialogPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DAbstractDialog::DAbstractDialog(bool blurIfPossible,QWidget * parent=nullptr)","Funname":"DAbstractDialog::DAbstractDialog","Returntype":"","Args":"bool blurIfPossible,QWidget * parent=nullptr"},{"Uniquefunname":"    Q_ENUMS(DisplayPostion)","Funname":"DAbstractDialog::Q_ENUMS","Returntype":"DisplayPosition","Args":"DisplayPostion"},{"Uniquefunname":"DisplayPosition DAbstractDialog::displayPosition() cons)","Funname":"DAbstractDialog::displayPosition","Returntype":"DisplayPosition","Args":") cons"},{"Uniquefunname":"void DAbstractDialog::mouseMoveEvent(QMouseEvent * event)","Funname":"DAbstractDialog::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DAbstractDialog::mousePressEvent(QMouseEvent * event)","Funname":"DAbstractDialog::mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DAbstractDialog::mouseReleaseEvent(QMouseEvent * event)","Funname":"DAbstractDialog::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"    inline void move(int x, int y)","Funname":"DAbstractDialog::move","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void DAbstractDialog::move(const QPoint \u0026 pos)","Funname":"DAbstractDialog::move","Returntype":"void","Args":"const QPoint \u0026 pos"},{"Uniquefunname":"void DAbstractDialog::moveToCenter()","Funname":"DAbstractDialog::moveToCenter","Returntype":"void","Args":""},{"Uniquefunname":"void DAbstractDialog::moveToCenterByRect(const QRect \u0026 rect)","Funname":"DAbstractDialog::moveToCenterByRect","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void DAbstractDialog::moveToTopRight()","Funname":"DAbstractDialog::moveToTopRight","Returntype":"void","Args":""},{"Uniquefunname":"void DAbstractDialog::moveToTopRightByRect(const QRect \u0026 rect)","Funname":"DAbstractDialog::moveToTopRightByRect","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void DAbstractDialog::resizeEvent(QResizeEvent * event)","Funname":"DAbstractDialog::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DAbstractDialog::setDisplayPosition(DisplayPosition displayPosition)","Funname":"DAbstractDialog::setDisplayPosition","Returntype":"void","Args":"DisplayPosition displayPosition"},{"Uniquefunname":"    inline void setGeometry(int x, int y, int width, int height)","Funname":"DAbstractDialog::setGeometry","Returntype":"void","Args":"int x,int y,int width,int height"},{"Uniquefunname":"void DAbstractDialog::setGeometry(const QRect \u0026 rect)","Funname":"DAbstractDialog::setGeometry","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void DAbstractDialog::showEvent(QShowEvent * event)","Funname":"DAbstractDialog::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"    Q_ENUMS(DisplayPostion)","Funname":"Q_ENUMS","Returntype":"DisplayPosition","Args":"DisplayPostion"},{"Uniquefunname":"DisplayPosition displayPosition() cons)","Funname":"displayPosition","Returntype":"DisplayPosition","Args":") cons"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * event)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"    inline void move(int x, int y)","Funname":"move","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void move(const QPoint \u0026 pos)","Funname":"move","Returntype":"void","Args":"const QPoint \u0026 pos"},{"Uniquefunname":"void moveToCenter()","Funname":"moveToCenter","Returntype":"void","Args":""},{"Uniquefunname":"void moveToCenterByRect(const QRect \u0026 rect)","Funname":"moveToCenterByRect","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void moveToTopRight()","Funname":"moveToTopRight","Returntype":"void","Args":""},{"Uniquefunname":"void moveToTopRightByRect(const QRect \u0026 rect)","Funname":"moveToTopRightByRect","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void setDisplayPosition(DisplayPosition displayPosition)","Funname":"setDisplayPosition","Returntype":"void","Args":"DisplayPosition displayPosition"},{"Uniquefunname":"    inline void setGeometry(int x, int y, int width, int height)","Funname":"setGeometry","Returntype":"void","Args":"int x,int y,int width,int height"},{"Uniquefunname":"void setGeometry(const QRect \u0026 rect)","Funname":"setGeometry","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"}],"Records":[{"Name":"enum:DAbstractDialog::DisplayPosition","Fields":["Center","DAbstractDialog::Center","DAbstractDialog::TopRight","TopRight"]},{"Name":"macro","Fields":["DABSTRACTDIALOG_H"]},{"Name":"enum:DAbstractDialog::DisplayPostion","Fields":["DAbstractDialog::DisplayCenter","DAbstractDialog::DisplayTopRight","DisplayCenter","DisplayTopRight"]}]}
{"Filepath":"src/widgets/dalertcontrol.h","Functions":[{"Uniquefunname":" DAlertControl(DAlertControlPrivate \u0026 d,QObject * parent)","Funname":"DAlertControl","Returntype":"","Args":"DAlertControlPrivate \u0026 d,QObject * parent"},{"Uniquefunname":" DAlertControl(QWidget * target,QObject * parent=nullptr)","Funname":"DAlertControl","Returntype":"","Args":"QWidget * target,QObject * parent=nullptr"},{"Uniquefunname":" DAlertControl::DAlertControl(DAlertControlPrivate \u0026 d,QObject * parent)","Funname":"DAlertControl::DAlertControl","Returntype":"","Args":"DAlertControlPrivate \u0026 d,QObject * parent"},{"Uniquefunname":" DAlertControl::DAlertControl(QWidget * target,QObject * parent=nullptr)","Funname":"DAlertControl::DAlertControl","Returntype":"","Args":"QWidget * target,QObject * parent=nullptr"},{"Uniquefunname":"QColor DAlertControl::alertColor() cons)","Funname":"DAlertControl::alertColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QColor DAlertControl::defaultAlertColor() cons)","Funname":"DAlertControl::defaultAlertColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"bool DAlertControl::eventFilter(QObject * watched,QEvent * event)","Funname":"DAlertControl::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void DAlertControl::hideAlertMessage()","Funname":"DAlertControl::hideAlertMessage","Returntype":"void","Args":""},{"Uniquefunname":"bool DAlertControl::isAlert() cons)","Funname":"DAlertControl::isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"Qt DAlertControl::messageAlignment() cons)","Funname":"DAlertControl::messageAlignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DAlertControl::setAlert(bool isAlert)","Funname":"DAlertControl::setAlert","Returntype":"void","Args":"bool isAlert"},{"Uniquefunname":"void DAlertControl::setAlertColor(QColor c)","Funname":"DAlertControl::setAlertColor","Returntype":"void","Args":"QColor c"},{"Uniquefunname":"void DAlertControl::setMessageAlignment(Qt::Alignment alignment)","Funname":"DAlertControl::setMessageAlignment","Returntype":"void","Args":"Qt::Alignment alignment"},{"Uniquefunname":"void DAlertControl::showAlertMessage(const QString \u0026 text,QWidget * follower,int duration=3000)","Funname":"DAlertControl::showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,QWidget * follower,int duration=3000"},{"Uniquefunname":"void DAlertControl::showAlertMessage(const QString \u0026 text,int duration=3000)","Funname":"DAlertControl::showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,int duration=3000"},{"Uniquefunname":"QColor alertColor() cons)","Funname":"alertColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QColor defaultAlertColor() cons)","Funname":"defaultAlertColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void hideAlertMessage()","Funname":"hideAlertMessage","Returntype":"void","Args":""},{"Uniquefunname":"bool isAlert() cons)","Funname":"isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"Qt messageAlignment() cons)","Funname":"messageAlignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void setAlert(bool isAlert)","Funname":"setAlert","Returntype":"void","Args":"bool isAlert"},{"Uniquefunname":"void setAlertColor(QColor c)","Funname":"setAlertColor","Returntype":"void","Args":"QColor c"},{"Uniquefunname":"void setMessageAlignment(Qt::Alignment alignment)","Funname":"setMessageAlignment","Returntype":"void","Args":"Qt::Alignment alignment"},{"Uniquefunname":"void showAlertMessage(const QString \u0026 text,QWidget * follower,int duration=3000)","Funname":"showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,QWidget * follower,int duration=3000"},{"Uniquefunname":"void showAlertMessage(const QString \u0026 text,int duration=3000)","Funname":"showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,int duration=3000"}],"Records":[{"Name":"macro","Fields":["DALERTCONTROL_H"]}]}
{"Filepath":"src/widgets/danchors.h","Functions":[{"Uniquefunname":" DAnchorInfo(DAnchorsBase * b,const Qt::AnchorPoint \u0026 t)","Funname":"DAnchorInfo","Returntype":"","Args":"DAnchorsBase * b,const Qt::AnchorPoint \u0026 t"},{"Uniquefunname":" DAnchorInfo::DAnchorInfo(DAnchorsBase * b,const Qt::AnchorPoint \u0026 t)","Funname":"DAnchorInfo::DAnchorInfo","Returntype":"","Args":"DAnchorsBase * b,const Qt::AnchorPoint \u0026 t"},{"Uniquefunname":"bool DAnchorInfo::operator !=(const DAnchorInfo \u0026 info) cons)","Funname":"DAnchorInfo::operator !=","Returntype":"bool","Args":"const DAnchorInfo \u0026 info) cons"},{"Uniquefunname":"bool DAnchorInfo::operator !=(const DAnchorInfo * info) cons)","Funname":"DAnchorInfo::operator !=","Returntype":"bool","Args":"const DAnchorInfo * info) cons"},{"Uniquefunname":"    const DAnchorInfo \u0026operator=(const DAnchorInfo *info)","Funname":"DAnchorInfo::operator =","Returntype":"const DAnchorInfo \u0026","Args":"const DAnchorInfo * info"},{"Uniquefunname":"bool DAnchorInfo::operator ==(const DAnchorInfo \u0026 info) cons)","Funname":"DAnchorInfo::operator ==","Returntype":"bool","Args":"const DAnchorInfo \u0026 info) cons"},{"Uniquefunname":"bool DAnchorInfo::operator ==(const DAnchorInfo * info) cons)","Funname":"DAnchorInfo::operator ==","Returntype":"bool","Args":"const DAnchorInfo * info) cons"},{"Uniquefunname":" DAnchors()","Funname":"DAnchors","Returntype":"","Args":""},{"Uniquefunname":" DAnchors(T * w)","Funname":"DAnchors","Returntype":"","Args":"T * w"},{"Uniquefunname":" DAnchors(const DAnchors \u0026 me)","Funname":"DAnchors","Returntype":"","Args":"const DAnchors \u0026 me"},{"Uniquefunname":" DAnchors::DAnchors()","Funname":"DAnchors::DAnchors","Returntype":"","Args":""},{"Uniquefunname":" DAnchors::DAnchors(T * w)","Funname":"DAnchors::DAnchors","Returntype":"","Args":"T * w"},{"Uniquefunname":" DAnchors::DAnchors(const DAnchors \u0026 me)","Funname":"DAnchors::DAnchors","Returntype":"","Args":"const DAnchors \u0026 me"},{"Uniquefunname":"T \u0026 DAnchors::operator *() cons)","Funname":"DAnchors::operator *","Returntype":"T \u0026","Args":") cons"},{"Uniquefunname":"T * DAnchors::operator -\u003e() cons)","Funname":"DAnchors::operator -\u003e","Returntype":"T *","Args":") cons"},{"Uniquefunname":"    inline T \u0026operator=(T *w)","Funname":"DAnchors::operator =","Returntype":"T \u0026","Args":"T * w"},{"Uniquefunname":"    inline T \u0026operator=(const DAnchors \u0026me)","Funname":"DAnchors::operator =","Returntype":"T \u0026","Args":"const DAnchors \u0026 me"},{"Uniquefunname":"T * DAnchors::widget() cons)","Funname":"DAnchors::widget","Returntype":"T *","Args":") cons"},{"Uniquefunname":" DAnchorsBase(QWidget * w,bool)","Funname":"DAnchorsBase","Returntype":"","Args":"QWidget * w,bool"},{"Uniquefunname":" DAnchorsBase(QWidget * w)","Funname":"DAnchorsBase","Returntype":"","Args":"QWidget * w"},{"Uniquefunname":" DAnchorsBase::DAnchorsBase(QWidget * w,bool)","Funname":"DAnchorsBase::DAnchorsBase","Returntype":"","Args":"QWidget * w,bool"},{"Uniquefunname":" DAnchorsBase::DAnchorsBase(QWidget * w)","Funname":"DAnchorsBase::DAnchorsBase","Returntype":"","Args":"QWidget * w"},{"Uniquefunname":"int DAnchorsBase::alignWhenCentered() cons)","Funname":"DAnchorsBase::alignWhenCentered","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::alignWhenCenteredChanged(bool alignWhenCentered)","Funname":"DAnchorsBase::alignWhenCenteredChanged","Returntype":"void","Args":"bool alignWhenCentered"},{"Uniquefunname":"const DAnchorsBase * DAnchorsBase::anchors() cons)","Funname":"DAnchorsBase::anchors","Returntype":"const DAnchorsBase *","Args":") cons"},{"Uniquefunname":"const DAnchorInfo * DAnchorsBase::bottom() cons)","Funname":"DAnchorsBase::bottom","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::bottomChanged(const DAnchorInfo * bottom)","Funname":"DAnchorsBase::bottomChanged","Returntype":"void","Args":"const DAnchorInfo * bottom"},{"Uniquefunname":"int DAnchorsBase::bottomMargin() cons)","Funname":"DAnchorsBase::bottomMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::bottomMarginChanged(int bottomMargin)","Funname":"DAnchorsBase::bottomMarginChanged","Returntype":"void","Args":"int bottomMargin"},{"Uniquefunname":"QWidget * DAnchorsBase::centerIn() cons)","Funname":"DAnchorsBase::centerIn","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::centerInChanged(QWidget * centerIn)","Funname":"DAnchorsBase::centerInChanged","Returntype":"void","Args":"QWidget * centerIn"},{"Uniquefunname":"void DAnchorsBase::clearAnchors(const QWidget * w)","Funname":"DAnchorsBase::clearAnchors","Returntype":"void","Args":"const QWidget * w"},{"Uniquefunname":"bool DAnchorsBase::enabled() cons)","Funname":"DAnchorsBase::enabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"DEnhancedWidget * DAnchorsBase::enhancedWidget() cons)","Funname":"DAnchorsBase::enhancedWidget","Returntype":"DEnhancedWidget *","Args":") cons"},{"Uniquefunname":"AnchorError DAnchorsBase::errorCode() cons)","Funname":"DAnchorsBase::errorCode","Returntype":"AnchorError","Args":") cons"},{"Uniquefunname":"QString DAnchorsBase::errorString() cons)","Funname":"DAnchorsBase::errorString","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QWidget * DAnchorsBase::fill() cons)","Funname":"DAnchorsBase::fill","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::fillChanged(QWidget * fill)","Funname":"DAnchorsBase::fillChanged","Returntype":"void","Args":"QWidget * fill"},{"Uniquefunname":"DAnchorsBase * DAnchorsBase::getAnchorBaseByWidget(const QWidget * w)","Funname":"DAnchorsBase::getAnchorBaseByWidget","Returntype":"DAnchorsBase *","Args":"const QWidget * w"},{"Uniquefunname":"const DAnchorInfo * DAnchorsBase::horizontalCenter() cons)","Funname":"DAnchorsBase::horizontalCenter","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::horizontalCenterChanged(const DAnchorInfo * horizontalCenter)","Funname":"DAnchorsBase::horizontalCenterChanged","Returntype":"void","Args":"const DAnchorInfo * horizontalCenter"},{"Uniquefunname":"int DAnchorsBase::horizontalCenterOffset() cons)","Funname":"DAnchorsBase::horizontalCenterOffset","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::horizontalCenterOffsetChanged(int horizontalCenterOffset)","Funname":"DAnchorsBase::horizontalCenterOffsetChanged","Returntype":"void","Args":"int horizontalCenterOffset"},{"Uniquefunname":"void DAnchorsBase::init(QWidget * w)","Funname":"DAnchorsBase::init","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"bool DAnchorsBase::isBinding(const DAnchorInfo * info) cons)","Funname":"DAnchorsBase::isBinding","Returntype":"bool","Args":"const DAnchorInfo * info) cons"},{"Uniquefunname":"const DAnchorInfo * DAnchorsBase::left() cons)","Funname":"DAnchorsBase::left","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::leftChanged(const DAnchorInfo * left)","Funname":"DAnchorsBase::leftChanged","Returntype":"void","Args":"const DAnchorInfo * left"},{"Uniquefunname":"int DAnchorsBase::leftMargin() cons)","Funname":"DAnchorsBase::leftMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::leftMarginChanged(int leftMargin)","Funname":"DAnchorsBase::leftMarginChanged","Returntype":"void","Args":"int leftMargin"},{"Uniquefunname":"int DAnchorsBase::margins() cons)","Funname":"DAnchorsBase::margins","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::marginsChanged(int margins)","Funname":"DAnchorsBase::marginsChanged","Returntype":"void","Args":"int margins"},{"Uniquefunname":"void DAnchorsBase::moveBottom(int arg)","Funname":"DAnchorsBase::moveBottom","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void DAnchorsBase::moveCenter(const QPoint \u0026 arg)","Funname":"DAnchorsBase::moveCenter","Returntype":"void","Args":"const QPoint \u0026 arg"},{"Uniquefunname":"void DAnchorsBase::moveHorizontalCenter(int arg)","Funname":"DAnchorsBase::moveHorizontalCenter","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void DAnchorsBase::moveLeft(int arg)","Funname":"DAnchorsBase::moveLeft","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void DAnchorsBase::moveRight(int arg)","Funname":"DAnchorsBase::moveRight","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void DAnchorsBase::moveTop(int arg)","Funname":"DAnchorsBase::moveTop","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void DAnchorsBase::moveVerticalCenter(int arg)","Funname":"DAnchorsBase::moveVerticalCenter","Returntype":"void","Args":"int arg"},{"Uniquefunname":"const DAnchorInfo * DAnchorsBase::right() cons)","Funname":"DAnchorsBase::right","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::rightChanged(const DAnchorInfo * right)","Funname":"DAnchorsBase::rightChanged","Returntype":"void","Args":"const DAnchorInfo * right"},{"Uniquefunname":"int DAnchorsBase::rightMargin() cons)","Funname":"DAnchorsBase::rightMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::rightMarginChanged(int rightMargin)","Funname":"DAnchorsBase::rightMarginChanged","Returntype":"void","Args":"int rightMargin"},{"Uniquefunname":"void DAnchorsBase::setAlignWhenCentered(bool alignWhenCentered)","Funname":"DAnchorsBase::setAlignWhenCentered","Returntype":"void","Args":"bool alignWhenCentered"},{"Uniquefunname":"bool DAnchorsBase::setAnchor(const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point)","Funname":"DAnchorsBase::setAnchor","Returntype":"bool","Args":"const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point"},{"Uniquefunname":"bool DAnchorsBase::setAnchor(QWidget * w,const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point)","Funname":"DAnchorsBase::setAnchor","Returntype":"bool","Args":"QWidget * w,const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point"},{"Uniquefunname":"bool DAnchorsBase::setBottom(const DAnchorInfo * bottom)","Funname":"DAnchorsBase::setBottom","Returntype":"bool","Args":"const DAnchorInfo * bottom"},{"Uniquefunname":"void DAnchorsBase::setBottom(int arg,Qt::AnchorPoint point)","Funname":"DAnchorsBase::setBottom","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void DAnchorsBase::setBottomMargin(int bottomMargin)","Funname":"DAnchorsBase::setBottomMargin","Returntype":"void","Args":"int bottomMargin"},{"Uniquefunname":"bool DAnchorsBase::setCenterIn(DAnchorsBase * centerIn)","Funname":"DAnchorsBase::setCenterIn","Returntype":"bool","Args":"DAnchorsBase * centerIn"},{"Uniquefunname":"bool DAnchorsBase::setCenterIn(QWidget * centerIn)","Funname":"DAnchorsBase::setCenterIn","Returntype":"bool","Args":"QWidget * centerIn"},{"Uniquefunname":"void DAnchorsBase::setEnabled(bool enabled)","Funname":"DAnchorsBase::setEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"bool DAnchorsBase::setFill(DAnchorsBase * fill)","Funname":"DAnchorsBase::setFill","Returntype":"bool","Args":"DAnchorsBase * fill"},{"Uniquefunname":"bool DAnchorsBase::setFill(QWidget * fill)","Funname":"DAnchorsBase::setFill","Returntype":"bool","Args":"QWidget * fill"},{"Uniquefunname":"bool DAnchorsBase::setHorizontalCenter(const DAnchorInfo * horizontalCenter)","Funname":"DAnchorsBase::setHorizontalCenter","Returntype":"bool","Args":"const DAnchorInfo * horizontalCenter"},{"Uniquefunname":"void DAnchorsBase::setHorizontalCenter(int arg,Qt::AnchorPoint point)","Funname":"DAnchorsBase::setHorizontalCenter","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void DAnchorsBase::setHorizontalCenterOffset(int horizontalCenterOffset)","Funname":"DAnchorsBase::setHorizontalCenterOffset","Returntype":"void","Args":"int horizontalCenterOffset"},{"Uniquefunname":"bool DAnchorsBase::setLeft(const DAnchorInfo * left)","Funname":"DAnchorsBase::setLeft","Returntype":"bool","Args":"const DAnchorInfo * left"},{"Uniquefunname":"void DAnchorsBase::setLeft(int arg,Qt::AnchorPoint point)","Funname":"DAnchorsBase::setLeft","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void DAnchorsBase::setLeftMargin(int leftMargin)","Funname":"DAnchorsBase::setLeftMargin","Returntype":"void","Args":"int leftMargin"},{"Uniquefunname":"void DAnchorsBase::setMargins(int margins)","Funname":"DAnchorsBase::setMargins","Returntype":"void","Args":"int margins"},{"Uniquefunname":"bool DAnchorsBase::setRight(const DAnchorInfo * right)","Funname":"DAnchorsBase::setRight","Returntype":"bool","Args":"const DAnchorInfo * right"},{"Uniquefunname":"void DAnchorsBase::setRight(int arg,Qt::AnchorPoint point)","Funname":"DAnchorsBase::setRight","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void DAnchorsBase::setRightMargin(int rightMargin)","Funname":"DAnchorsBase::setRightMargin","Returntype":"void","Args":"int rightMargin"},{"Uniquefunname":"bool DAnchorsBase::setTop(const DAnchorInfo * top)","Funname":"DAnchorsBase::setTop","Returntype":"bool","Args":"const DAnchorInfo * top"},{"Uniquefunname":"void DAnchorsBase::setTop(int arg,Qt::AnchorPoint point)","Funname":"DAnchorsBase::setTop","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void DAnchorsBase::setTopMargin(int topMargin)","Funname":"DAnchorsBase::setTopMargin","Returntype":"void","Args":"int topMargin"},{"Uniquefunname":"bool DAnchorsBase::setVerticalCenter(const DAnchorInfo * verticalCenter)","Funname":"DAnchorsBase::setVerticalCenter","Returntype":"bool","Args":"const DAnchorInfo * verticalCenter"},{"Uniquefunname":"void DAnchorsBase::setVerticalCenter(int arg,Qt::AnchorPoint point)","Funname":"DAnchorsBase::setVerticalCenter","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void DAnchorsBase::setVerticalCenterOffset(int verticalCenterOffset)","Funname":"DAnchorsBase::setVerticalCenterOffset","Returntype":"void","Args":"int verticalCenterOffset"},{"Uniquefunname":"QWidget * DAnchorsBase::target() cons)","Funname":"DAnchorsBase::target","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"const DAnchorInfo * DAnchorsBase::top() cons)","Funname":"DAnchorsBase::top","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::topChanged(const DAnchorInfo * top)","Funname":"DAnchorsBase::topChanged","Returntype":"void","Args":"const DAnchorInfo * top"},{"Uniquefunname":"int DAnchorsBase::topMargin() cons)","Funname":"DAnchorsBase::topMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::topMarginChanged(int topMargin)","Funname":"DAnchorsBase::topMarginChanged","Returntype":"void","Args":"int topMargin"},{"Uniquefunname":"void DAnchorsBase::updateCenterIn()","Funname":"DAnchorsBase::updateCenterIn","Returntype":"void","Args":""},{"Uniquefunname":"void DAnchorsBase::updateFill()","Funname":"DAnchorsBase::updateFill","Returntype":"void","Args":""},{"Uniquefunname":"void DAnchorsBase::updateHorizontal()","Funname":"DAnchorsBase::updateHorizontal","Returntype":"void","Args":""},{"Uniquefunname":"void DAnchorsBase::updateVertical()","Funname":"DAnchorsBase::updateVertical","Returntype":"void","Args":""},{"Uniquefunname":"const DAnchorInfo * DAnchorsBase::verticalCenter() cons)","Funname":"DAnchorsBase::verticalCenter","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::verticalCenterChanged(const DAnchorInfo * verticalCenter)","Funname":"DAnchorsBase::verticalCenterChanged","Returntype":"void","Args":"const DAnchorInfo * verticalCenter"},{"Uniquefunname":"int DAnchorsBase::verticalCenterOffset() cons)","Funname":"DAnchorsBase::verticalCenterOffset","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DAnchorsBase::verticalCenterOffsetChanged(int verticalCenterOffset)","Funname":"DAnchorsBase::verticalCenterOffsetChanged","Returntype":"void","Args":"int verticalCenterOffset"},{"Uniquefunname":" DAnchorsBase::~DAnchorsBase()","Funname":"DAnchorsBase::~DAnchorsBase","Returntype":"","Args":""},{"Uniquefunname":"int alignWhenCentered() cons)","Funname":"alignWhenCentered","Returntype":"int","Args":") cons"},{"Uniquefunname":"void alignWhenCenteredChanged(bool alignWhenCentered)","Funname":"alignWhenCenteredChanged","Returntype":"void","Args":"bool alignWhenCentered"},{"Uniquefunname":"const DAnchorsBase * anchors() cons)","Funname":"anchors","Returntype":"const DAnchorsBase *","Args":") cons"},{"Uniquefunname":"const DAnchorInfo * bottom() cons)","Funname":"bottom","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void bottomChanged(const DAnchorInfo * bottom)","Funname":"bottomChanged","Returntype":"void","Args":"const DAnchorInfo * bottom"},{"Uniquefunname":"int bottomMargin() cons)","Funname":"bottomMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void bottomMarginChanged(int bottomMargin)","Funname":"bottomMarginChanged","Returntype":"void","Args":"int bottomMargin"},{"Uniquefunname":"QWidget * centerIn() cons)","Funname":"centerIn","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void centerInChanged(QWidget * centerIn)","Funname":"centerInChanged","Returntype":"void","Args":"QWidget * centerIn"},{"Uniquefunname":"void clearAnchors(const QWidget * w)","Funname":"clearAnchors","Returntype":"void","Args":"const QWidget * w"},{"Uniquefunname":"bool enabled() cons)","Funname":"enabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"DEnhancedWidget * enhancedWidget() cons)","Funname":"enhancedWidget","Returntype":"DEnhancedWidget *","Args":") cons"},{"Uniquefunname":"AnchorError errorCode() cons)","Funname":"errorCode","Returntype":"AnchorError","Args":") cons"},{"Uniquefunname":"QString errorString() cons)","Funname":"errorString","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QWidget * fill() cons)","Funname":"fill","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void fillChanged(QWidget * fill)","Funname":"fillChanged","Returntype":"void","Args":"QWidget * fill"},{"Uniquefunname":"DAnchorsBase * getAnchorBaseByWidget(const QWidget * w)","Funname":"getAnchorBaseByWidget","Returntype":"DAnchorsBase *","Args":"const QWidget * w"},{"Uniquefunname":"const DAnchorInfo * horizontalCenter() cons)","Funname":"horizontalCenter","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void horizontalCenterChanged(const DAnchorInfo * horizontalCenter)","Funname":"horizontalCenterChanged","Returntype":"void","Args":"const DAnchorInfo * horizontalCenter"},{"Uniquefunname":"int horizontalCenterOffset() cons)","Funname":"horizontalCenterOffset","Returntype":"int","Args":") cons"},{"Uniquefunname":"void horizontalCenterOffsetChanged(int horizontalCenterOffset)","Funname":"horizontalCenterOffsetChanged","Returntype":"void","Args":"int horizontalCenterOffset"},{"Uniquefunname":"void init(QWidget * w)","Funname":"init","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"bool isBinding(const DAnchorInfo * info) cons)","Funname":"isBinding","Returntype":"bool","Args":"const DAnchorInfo * info) cons"},{"Uniquefunname":"const DAnchorInfo * left() cons)","Funname":"left","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void leftChanged(const DAnchorInfo * left)","Funname":"leftChanged","Returntype":"void","Args":"const DAnchorInfo * left"},{"Uniquefunname":"int leftMargin() cons)","Funname":"leftMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void leftMarginChanged(int leftMargin)","Funname":"leftMarginChanged","Returntype":"void","Args":"int leftMargin"},{"Uniquefunname":"int margins() cons)","Funname":"margins","Returntype":"int","Args":") cons"},{"Uniquefunname":"void marginsChanged(int margins)","Funname":"marginsChanged","Returntype":"void","Args":"int margins"},{"Uniquefunname":"void moveBottom(int arg)","Funname":"moveBottom","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void moveCenter(const QPoint \u0026 arg)","Funname":"moveCenter","Returntype":"void","Args":"const QPoint \u0026 arg"},{"Uniquefunname":"void moveHorizontalCenter(int arg)","Funname":"moveHorizontalCenter","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void moveLeft(int arg)","Funname":"moveLeft","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void moveRight(int arg)","Funname":"moveRight","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void moveTop(int arg)","Funname":"moveTop","Returntype":"void","Args":"int arg"},{"Uniquefunname":"void moveVerticalCenter(int arg)","Funname":"moveVerticalCenter","Returntype":"void","Args":"int arg"},{"Uniquefunname":"bool operator !=(const DAnchorInfo \u0026 info) cons)","Funname":"operator !=","Returntype":"bool","Args":"const DAnchorInfo \u0026 info) cons"},{"Uniquefunname":"bool operator !=(const DAnchorInfo * info) cons)","Funname":"operator !=","Returntype":"bool","Args":"const DAnchorInfo * info) cons"},{"Uniquefunname":"T \u0026 operator *() cons)","Funname":"operator *","Returntype":"T \u0026","Args":") cons"},{"Uniquefunname":"T * operator -\u003e() cons)","Funname":"operator -\u003e","Returntype":"T *","Args":") cons"},{"Uniquefunname":"    const DAnchorInfo \u0026operator=(const DAnchorInfo *info)","Funname":"operator =","Returntype":"const DAnchorInfo \u0026","Args":"const DAnchorInfo * info"},{"Uniquefunname":"    inline T \u0026operator=(T *w)","Funname":"operator =","Returntype":"T \u0026","Args":"T * w"},{"Uniquefunname":"    inline T \u0026operator=(const DAnchors \u0026me)","Funname":"operator =","Returntype":"T \u0026","Args":"const DAnchors \u0026 me"},{"Uniquefunname":"bool operator ==(const DAnchorInfo \u0026 info) cons)","Funname":"operator ==","Returntype":"bool","Args":"const DAnchorInfo \u0026 info) cons"},{"Uniquefunname":"bool operator ==(const DAnchorInfo * info) cons)","Funname":"operator ==","Returntype":"bool","Args":"const DAnchorInfo * info) cons"},{"Uniquefunname":"const DAnchorInfo * right() cons)","Funname":"right","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void rightChanged(const DAnchorInfo * right)","Funname":"rightChanged","Returntype":"void","Args":"const DAnchorInfo * right"},{"Uniquefunname":"int rightMargin() cons)","Funname":"rightMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void rightMarginChanged(int rightMargin)","Funname":"rightMarginChanged","Returntype":"void","Args":"int rightMargin"},{"Uniquefunname":"void setAlignWhenCentered(bool alignWhenCentered)","Funname":"setAlignWhenCentered","Returntype":"void","Args":"bool alignWhenCentered"},{"Uniquefunname":"bool setAnchor(const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point)","Funname":"setAnchor","Returntype":"bool","Args":"const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point"},{"Uniquefunname":"bool setAnchor(QWidget * w,const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point)","Funname":"setAnchor","Returntype":"bool","Args":"QWidget * w,const Qt::AnchorPoint \u0026 p,QWidget * target,const Qt::AnchorPoint \u0026 point"},{"Uniquefunname":"bool setBottom(const DAnchorInfo * bottom)","Funname":"setBottom","Returntype":"bool","Args":"const DAnchorInfo * bottom"},{"Uniquefunname":"void setBottom(int arg,Qt::AnchorPoint point)","Funname":"setBottom","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void setBottomMargin(int bottomMargin)","Funname":"setBottomMargin","Returntype":"void","Args":"int bottomMargin"},{"Uniquefunname":"bool setCenterIn(DAnchorsBase * centerIn)","Funname":"setCenterIn","Returntype":"bool","Args":"DAnchorsBase * centerIn"},{"Uniquefunname":"bool setCenterIn(QWidget * centerIn)","Funname":"setCenterIn","Returntype":"bool","Args":"QWidget * centerIn"},{"Uniquefunname":"void setEnabled(bool enabled)","Funname":"setEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"bool setFill(DAnchorsBase * fill)","Funname":"setFill","Returntype":"bool","Args":"DAnchorsBase * fill"},{"Uniquefunname":"bool setFill(QWidget * fill)","Funname":"setFill","Returntype":"bool","Args":"QWidget * fill"},{"Uniquefunname":"bool setHorizontalCenter(const DAnchorInfo * horizontalCenter)","Funname":"setHorizontalCenter","Returntype":"bool","Args":"const DAnchorInfo * horizontalCenter"},{"Uniquefunname":"void setHorizontalCenter(int arg,Qt::AnchorPoint point)","Funname":"setHorizontalCenter","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void setHorizontalCenterOffset(int horizontalCenterOffset)","Funname":"setHorizontalCenterOffset","Returntype":"void","Args":"int horizontalCenterOffset"},{"Uniquefunname":"bool setLeft(const DAnchorInfo * left)","Funname":"setLeft","Returntype":"bool","Args":"const DAnchorInfo * left"},{"Uniquefunname":"void setLeft(int arg,Qt::AnchorPoint point)","Funname":"setLeft","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void setLeftMargin(int leftMargin)","Funname":"setLeftMargin","Returntype":"void","Args":"int leftMargin"},{"Uniquefunname":"void setMargins(int margins)","Funname":"setMargins","Returntype":"void","Args":"int margins"},{"Uniquefunname":"bool setRight(const DAnchorInfo * right)","Funname":"setRight","Returntype":"bool","Args":"const DAnchorInfo * right"},{"Uniquefunname":"void setRight(int arg,Qt::AnchorPoint point)","Funname":"setRight","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void setRightMargin(int rightMargin)","Funname":"setRightMargin","Returntype":"void","Args":"int rightMargin"},{"Uniquefunname":"bool setTop(const DAnchorInfo * top)","Funname":"setTop","Returntype":"bool","Args":"const DAnchorInfo * top"},{"Uniquefunname":"void setTop(int arg,Qt::AnchorPoint point)","Funname":"setTop","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void setTopMargin(int topMargin)","Funname":"setTopMargin","Returntype":"void","Args":"int topMargin"},{"Uniquefunname":"bool setVerticalCenter(const DAnchorInfo * verticalCenter)","Funname":"setVerticalCenter","Returntype":"bool","Args":"const DAnchorInfo * verticalCenter"},{"Uniquefunname":"void setVerticalCenter(int arg,Qt::AnchorPoint point)","Funname":"setVerticalCenter","Returntype":"void","Args":"int arg,Qt::AnchorPoint point"},{"Uniquefunname":"void setVerticalCenterOffset(int verticalCenterOffset)","Funname":"setVerticalCenterOffset","Returntype":"void","Args":"int verticalCenterOffset"},{"Uniquefunname":"QWidget * target() cons)","Funname":"target","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"const DAnchorInfo * top() cons)","Funname":"top","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void topChanged(const DAnchorInfo * top)","Funname":"topChanged","Returntype":"void","Args":"const DAnchorInfo * top"},{"Uniquefunname":"int topMargin() cons)","Funname":"topMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void topMarginChanged(int topMargin)","Funname":"topMarginChanged","Returntype":"void","Args":"int topMargin"},{"Uniquefunname":"void updateCenterIn()","Funname":"updateCenterIn","Returntype":"void","Args":""},{"Uniquefunname":"void updateFill()","Funname":"updateFill","Returntype":"void","Args":""},{"Uniquefunname":"void updateHorizontal()","Funname":"updateHorizontal","Returntype":"void","Args":""},{"Uniquefunname":"void updateVertical()","Funname":"updateVertical","Returntype":"void","Args":""},{"Uniquefunname":"const DAnchorInfo * verticalCenter() cons)","Funname":"verticalCenter","Returntype":"const DAnchorInfo *","Args":") cons"},{"Uniquefunname":"void verticalCenterChanged(const DAnchorInfo * verticalCenter)","Funname":"verticalCenterChanged","Returntype":"void","Args":"const DAnchorInfo * verticalCenter"},{"Uniquefunname":"int verticalCenterOffset() cons)","Funname":"verticalCenterOffset","Returntype":"int","Args":") cons"},{"Uniquefunname":"void verticalCenterOffsetChanged(int verticalCenterOffset)","Funname":"verticalCenterOffsetChanged","Returntype":"void","Args":"int verticalCenterOffset"},{"Uniquefunname":"T * widget() cons)","Funname":"widget","Returntype":"T *","Args":") cons"},{"Uniquefunname":" ~DAnchorsBase()","Funname":"~DAnchorsBase","Returntype":"","Args":""}],"Records":[{"Name":"enum:DAnchorsBase::AnchorError","Fields":["Conflict","DAnchorsBase::Conflict","DAnchorsBase::LoopBind","DAnchorsBase::NoError","DAnchorsBase::PointInvalid","DAnchorsBase::TargetInvalid","LoopBind","NoError","PointInvalid","TargetInvalid"]},{"Name":"macro","Fields":["DANCHORS_H"]},{"Name":"struct:DAnchorInfo","Fields":["DAnchorsBase * DAnchorInfo::base","const DAnchorInfo * DAnchorInfo::targetInfo","Qt::AnchorPoint DAnchorInfo::type"]},{"Name":"class:DAnchors","Fields":["T * DAnchors::m_widget"]},{"Name":"class:DAnchorsBase","Fields":["QExplicitlySharedDataPointer\u003cQSharedData\u003e DAnchorsBase::d_ptr"]}]}
{"Filepath":"src/widgets/dapplication.h","Functions":[{"Uniquefunname":" DApplication(int \u0026 argc,char ** argv)","Funname":"DApplication","Returntype":"","Args":"int \u0026 argc,char ** argv"},{"Uniquefunname":" DApplication::DApplication(int \u0026 argc,char ** argv)","Funname":"DApplication::DApplication","Returntype":"","Args":"int \u0026 argc,char ** argv"},{"Uniquefunname":"DAboutDialog * DApplication::aboutDialog()","Funname":"DApplication::aboutDialog","Returntype":"DAboutDialog *","Args":""},{"Uniquefunname":"void DApplication::acclimatizeVirtualKeyboard(QWidget * window)","Funname":"DApplication::acclimatizeVirtualKeyboard","Returntype":"void","Args":"QWidget * window"},{"Uniquefunname":"QString DApplication::applicationAcknowledgementPage() cons)","Funname":"DApplication::applicationAcknowledgementPage","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool DApplication::applicationAcknowledgementVisible() cons)","Funname":"DApplication::applicationAcknowledgementVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString DApplication::applicationDescription() cons)","Funname":"DApplication::applicationDescription","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DApplication::applicationHomePage() cons)","Funname":"DApplication::applicationHomePage","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DApplication::applicationLicense() cons)","Funname":"DApplication::applicationLicense","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool DApplication::autoActivateWindows() cons)","Funname":"DApplication::autoActivateWindows","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int DApplication::buildDtkVersion()","Funname":"DApplication::buildDtkVersion","Returntype":"int","Args":""},{"Uniquefunname":"    static inline QString buildVersion(const QString \u0026fallbackVersion)","Funname":"DApplication::buildVersion","Returntype":"QString","Args":"const QString \u0026 fallbackVersion"},{"Uniquefunname":"void DApplication::customQtThemeConfigPath(const QString \u0026 path)","Funname":"DApplication::customQtThemeConfigPath","Returntype":"void","Args":"const QString \u0026 path"},{"Uniquefunname":"void DApplication::customQtThemeConfigPathByUserHome(const QString \u0026 home)","Funname":"DApplication::customQtThemeConfigPathByUserHome","Returntype":"void","Args":"const QString \u0026 home"},{"Uniquefunname":"QString DApplication::customizedQtThemeConfigPath()","Funname":"DApplication::customizedQtThemeConfigPath","Returntype":"QString","Args":""},{"Uniquefunname":"DApplication * DApplication::globalApplication(int \u0026 argc,char ** argv)","Funname":"DApplication::globalApplication","Returntype":"DApplication *","Args":"int \u0026 argc,char ** argv"},{"Uniquefunname":"void DApplication::handleAboutAction()","Funname":"DApplication::handleAboutAction","Returntype":"void","Args":""},{"Uniquefunname":"void DApplication::handleHelpAction()","Funname":"DApplication::handleHelpAction","Returntype":"void","Args":""},{"Uniquefunname":"void DApplication::handleQuitAction()","Funname":"DApplication::handleQuitAction","Returntype":"void","Args":""},{"Uniquefunname":"void DApplication::iconThemeChanged()","Funname":"DApplication::iconThemeChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DApplication::ignoreVirtualKeyboard(QWidget * window)","Funname":"DApplication::ignoreVirtualKeyboard","Returntype":"void","Args":"QWidget * window"},{"Uniquefunname":"bool DApplication::isAcclimatizedVirtualKeyboard(QWidget * window) cons)","Funname":"DApplication::isAcclimatizedVirtualKeyboard","Returntype":"bool","Args":"QWidget * window) cons"},{"Uniquefunname":"bool DApplication::isDXcbPlatform()","Funname":"DApplication::isDXcbPlatform","Returntype":"bool","Args":""},{"Uniquefunname":"D_DECL_DEPRECATED bool DApplication::loadDXcbPlugin()","Funname":"DApplication::loadDXcbPlugin","Returntype":"D_DECL_DEPRECATED bool","Args":""},{"Uniquefunname":"bool DApplication::loadTranslator(QList\u003cQLocale\u003e localeFallback=QList\u003cQLocale\u003e ()\u003c\u003cQLocale::system ())","Funname":"DApplication::loadTranslator","Returntype":"bool","Args":"QList\u003cQLocale\u003e localeFallback=QList\u003cQLocale\u003e ()\u003c\u003cQLocale::system ()"},{"Uniquefunname":"bool DApplication::notify(QObject * obj,QEvent * event)","Funname":"DApplication::notify","Returntype":"bool","Args":"QObject * obj,QEvent * event"},{"Uniquefunname":"const QIcon \u0026 DApplication::productIcon() cons)","Funname":"DApplication::productIcon","Returntype":"const QIcon \u0026","Args":") cons"},{"Uniquefunname":"QString DApplication::productName() cons)","Funname":"DApplication::productName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DApplication::registerDDESession()","Funname":"DApplication::registerDDESession","Returntype":"void","Args":""},{"Uniquefunname":"int DApplication::runtimeDtkVersion()","Funname":"DApplication::runtimeDtkVersion","Returntype":"int","Args":""},{"Uniquefunname":"void DApplication::screenDevicePixelRatioChanged(QScreen * screen)","Funname":"DApplication::screenDevicePixelRatioChanged","Returntype":"void","Args":"QScreen * screen"},{"Uniquefunname":"void DApplication::setAboutDialog(DAboutDialog * aboutDialog)","Funname":"DApplication::setAboutDialog","Returntype":"void","Args":"DAboutDialog * aboutDialog"},{"Uniquefunname":"void DApplication::setApplicationAcknowledgementPage(const QString \u0026 link)","Funname":"DApplication::setApplicationAcknowledgementPage","Returntype":"void","Args":"const QString \u0026 link"},{"Uniquefunname":"void DApplication::setApplicationAcknowledgementVisible(bool visible)","Funname":"DApplication::setApplicationAcknowledgementVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DApplication::setApplicationDescription(const QString \u0026 description)","Funname":"DApplication::setApplicationDescription","Returntype":"void","Args":"const QString \u0026 description"},{"Uniquefunname":"void DApplication::setApplicationHomePage(const QString \u0026 link)","Funname":"DApplication::setApplicationHomePage","Returntype":"void","Args":"const QString \u0026 link"},{"Uniquefunname":"void DApplication::setApplicationLicense(const QString \u0026 license)","Funname":"DApplication::setApplicationLicense","Returntype":"void","Args":"const QString \u0026 license"},{"Uniquefunname":"void DApplication::setAutoActivateWindows(bool autoActivateWindows)","Funname":"DApplication::setAutoActivateWindows","Returntype":"void","Args":"bool autoActivateWindows"},{"Uniquefunname":"void DApplication::setOOMScoreAdj(const int score)","Funname":"DApplication::setOOMScoreAdj","Returntype":"void","Args":"const int score"},{"Uniquefunname":"void DApplication::setProductIcon(const QIcon \u0026 productIcon)","Funname":"DApplication::setProductIcon","Returntype":"void","Args":"const QIcon \u0026 productIcon"},{"Uniquefunname":"void DApplication::setProductName(const QString \u0026 productName)","Funname":"DApplication::setProductName","Returntype":"void","Args":"const QString \u0026 productName"},{"Uniquefunname":"bool DApplication::setSingleInstance(const QString \u0026 key)","Funname":"DApplication::setSingleInstance","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"bool DApplication::setSingleInstance(const QString \u0026 key,SingleScope singleScope)","Funname":"DApplication::setSingleInstance","Returntype":"bool","Args":"const QString \u0026 key,SingleScope singleScope"},{"Uniquefunname":"D_DECL_DEPRECATED void DApplication::setTheme(const QString \u0026 theme)","Funname":"DApplication::setTheme","Returntype":"D_DECL_DEPRECATED void","Args":"const QString \u0026 theme"},{"Uniquefunname":"void DApplication::setVisibleMenuCheckboxWidget(bool value)","Funname":"DApplication::setVisibleMenuCheckboxWidget","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DApplication::setVisibleMenuIcon(bool value)","Funname":"DApplication::setVisibleMenuIcon","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DApplication::setVisibleMenuShortcutText(bool value)","Funname":"DApplication::setVisibleMenuShortcutText","Returntype":"void","Args":"bool value"},{"Uniquefunname":"D_DECL_DEPRECATED QString DApplication::theme() cons)","Funname":"DApplication::theme","Returntype":"D_DECL_DEPRECATED QString","Args":") cons"},{"Uniquefunname":"bool DApplication::visibleMenuCheckboxWidget() cons)","Funname":"DApplication::visibleMenuCheckboxWidget","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DApplication::visibleMenuIcon() cons)","Funname":"DApplication::visibleMenuIcon","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DApplication::visibleMenuShortcutText() cons)","Funname":"DApplication::visibleMenuShortcutText","Returntype":"bool","Args":") cons"},{"Uniquefunname":" _DtkBuildVersion()","Funname":"_DtkBuildVersion","Returntype":"","Args":""},{"Uniquefunname":" _DtkBuildVersion::_DtkBuildVersion()","Funname":"_DtkBuildVersion::_DtkBuildVersion","Returntype":"","Args":""},{"Uniquefunname":"DAboutDialog * aboutDialog()","Funname":"aboutDialog","Returntype":"DAboutDialog *","Args":""},{"Uniquefunname":"void acclimatizeVirtualKeyboard(QWidget * window)","Funname":"acclimatizeVirtualKeyboard","Returntype":"void","Args":"QWidget * window"},{"Uniquefunname":"QString applicationAcknowledgementPage() cons)","Funname":"applicationAcknowledgementPage","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool applicationAcknowledgementVisible() cons)","Funname":"applicationAcknowledgementVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString applicationDescription() cons)","Funname":"applicationDescription","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString applicationHomePage() cons)","Funname":"applicationHomePage","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString applicationLicense() cons)","Funname":"applicationLicense","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool autoActivateWindows() cons)","Funname":"autoActivateWindows","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int buildDtkVersion()","Funname":"buildDtkVersion","Returntype":"int","Args":""},{"Uniquefunname":"    static inline QString buildVersion(const QString \u0026fallbackVersion)","Funname":"buildVersion","Returntype":"QString","Args":"const QString \u0026 fallbackVersion"},{"Uniquefunname":"void customQtThemeConfigPath(const QString \u0026 path)","Funname":"customQtThemeConfigPath","Returntype":"void","Args":"const QString \u0026 path"},{"Uniquefunname":"void customQtThemeConfigPathByUserHome(const QString \u0026 home)","Funname":"customQtThemeConfigPathByUserHome","Returntype":"void","Args":"const QString \u0026 home"},{"Uniquefunname":"QString customizedQtThemeConfigPath()","Funname":"customizedQtThemeConfigPath","Returntype":"QString","Args":""},{"Uniquefunname":"DApplication * globalApplication(int \u0026 argc,char ** argv)","Funname":"globalApplication","Returntype":"DApplication *","Args":"int \u0026 argc,char ** argv"},{"Uniquefunname":"void handleAboutAction()","Funname":"handleAboutAction","Returntype":"void","Args":""},{"Uniquefunname":"void handleHelpAction()","Funname":"handleHelpAction","Returntype":"void","Args":""},{"Uniquefunname":"void handleQuitAction()","Funname":"handleQuitAction","Returntype":"void","Args":""},{"Uniquefunname":"void iconThemeChanged()","Funname":"iconThemeChanged","Returntype":"void","Args":""},{"Uniquefunname":"void ignoreVirtualKeyboard(QWidget * window)","Funname":"ignoreVirtualKeyboard","Returntype":"void","Args":"QWidget * window"},{"Uniquefunname":"bool isAcclimatizedVirtualKeyboard(QWidget * window) cons)","Funname":"isAcclimatizedVirtualKeyboard","Returntype":"bool","Args":"QWidget * window) cons"},{"Uniquefunname":"bool isDXcbPlatform()","Funname":"isDXcbPlatform","Returntype":"bool","Args":""},{"Uniquefunname":"D_DECL_DEPRECATED bool loadDXcbPlugin()","Funname":"loadDXcbPlugin","Returntype":"D_DECL_DEPRECATED bool","Args":""},{"Uniquefunname":"bool loadTranslator(QList\u003cQLocale\u003e localeFallback=QList\u003cQLocale\u003e ()\u003c\u003cQLocale::system ())","Funname":"loadTranslator","Returntype":"bool","Args":"QList\u003cQLocale\u003e localeFallback=QList\u003cQLocale\u003e ()\u003c\u003cQLocale::system ()"},{"Uniquefunname":"bool notify(QObject * obj,QEvent * event)","Funname":"notify","Returntype":"bool","Args":"QObject * obj,QEvent * event"},{"Uniquefunname":"const QIcon \u0026 productIcon() cons)","Funname":"productIcon","Returntype":"const QIcon \u0026","Args":") cons"},{"Uniquefunname":"QString productName() cons)","Funname":"productName","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void registerDDESession()","Funname":"registerDDESession","Returntype":"void","Args":""},{"Uniquefunname":"int runtimeDtkVersion()","Funname":"runtimeDtkVersion","Returntype":"int","Args":""},{"Uniquefunname":"void screenDevicePixelRatioChanged(QScreen * screen)","Funname":"screenDevicePixelRatioChanged","Returntype":"void","Args":"QScreen * screen"},{"Uniquefunname":"void setAboutDialog(DAboutDialog * aboutDialog)","Funname":"setAboutDialog","Returntype":"void","Args":"DAboutDialog * aboutDialog"},{"Uniquefunname":"void setApplicationAcknowledgementPage(const QString \u0026 link)","Funname":"setApplicationAcknowledgementPage","Returntype":"void","Args":"const QString \u0026 link"},{"Uniquefunname":"void setApplicationAcknowledgementVisible(bool visible)","Funname":"setApplicationAcknowledgementVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setApplicationDescription(const QString \u0026 description)","Funname":"setApplicationDescription","Returntype":"void","Args":"const QString \u0026 description"},{"Uniquefunname":"void setApplicationHomePage(const QString \u0026 link)","Funname":"setApplicationHomePage","Returntype":"void","Args":"const QString \u0026 link"},{"Uniquefunname":"void setApplicationLicense(const QString \u0026 license)","Funname":"setApplicationLicense","Returntype":"void","Args":"const QString \u0026 license"},{"Uniquefunname":"void setAutoActivateWindows(bool autoActivateWindows)","Funname":"setAutoActivateWindows","Returntype":"void","Args":"bool autoActivateWindows"},{"Uniquefunname":"void setOOMScoreAdj(const int score)","Funname":"setOOMScoreAdj","Returntype":"void","Args":"const int score"},{"Uniquefunname":"void setProductIcon(const QIcon \u0026 productIcon)","Funname":"setProductIcon","Returntype":"void","Args":"const QIcon \u0026 productIcon"},{"Uniquefunname":"void setProductName(const QString \u0026 productName)","Funname":"setProductName","Returntype":"void","Args":"const QString \u0026 productName"},{"Uniquefunname":"bool setSingleInstance(const QString \u0026 key)","Funname":"setSingleInstance","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"bool setSingleInstance(const QString \u0026 key,SingleScope singleScope)","Funname":"setSingleInstance","Returntype":"bool","Args":"const QString \u0026 key,SingleScope singleScope"},{"Uniquefunname":"D_DECL_DEPRECATED void setTheme(const QString \u0026 theme)","Funname":"setTheme","Returntype":"D_DECL_DEPRECATED void","Args":"const QString \u0026 theme"},{"Uniquefunname":"void setVisibleMenuCheckboxWidget(bool value)","Funname":"setVisibleMenuCheckboxWidget","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setVisibleMenuIcon(bool value)","Funname":"setVisibleMenuIcon","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setVisibleMenuShortcutText(bool value)","Funname":"setVisibleMenuShortcutText","Returntype":"void","Args":"bool value"},{"Uniquefunname":"D_DECL_DEPRECATED QString theme() cons)","Funname":"theme","Returntype":"D_DECL_DEPRECATED QString","Args":") cons"},{"Uniquefunname":"bool visibleMenuCheckboxWidget() cons)","Funname":"visibleMenuCheckboxWidget","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool visibleMenuIcon() cons)","Funname":"visibleMenuIcon","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool visibleMenuShortcutText() cons)","Funname":"visibleMenuShortcutText","Returntype":"bool","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DAPPLICATION_H","DAPPLICATION_STRING(s)","DAPPLICATION_XSTRING(s)","qApp"]},{"Name":"enum:DApplication::SingleScope","Fields":["DApplication::SystemScope","DApplication::UserScope","SystemScope","UserScope"]},{"Name":"class:DtkBuildVersion","Fields":["int DtkBuildVersion::value"]}]}
{"Filepath":"src/widgets/dapplicationhelper.h","Functions":[{"Uniquefunname":" DApplicationHelper()","Funname":"DApplicationHelper","Returntype":"","Args":""},{"Uniquefunname":" DApplicationHelper::DApplicationHelper()","Funname":"DApplicationHelper::DApplicationHelper","Returntype":"","Args":""},{"Uniquefunname":"bool DApplicationHelper::event(QEvent * event)","Funname":"DApplicationHelper::event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool DApplicationHelper::eventFilter(QObject * watched,QEvent * event)","Funname":"DApplicationHelper::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"DApplicationHelper * DApplicationHelper::instance()","Funname":"DApplicationHelper::instance","Returntype":"DApplicationHelper *","Args":""},{"Uniquefunname":"DPalette DApplicationHelper::palette(const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons)","Funname":"DApplicationHelper::palette","Returntype":"DPalette","Args":"const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons"},{"Uniquefunname":"void DApplicationHelper::resetPalette(QWidget * widget)","Funname":"DApplicationHelper::resetPalette","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void DApplicationHelper::setPalette(QWidget * widget,const DPalette \u0026 palette)","Funname":"DApplicationHelper::setPalette","Returntype":"void","Args":"QWidget * widget,const DPalette \u0026 palette"},{"Uniquefunname":" DApplicationHelper::~DApplicationHelper()","Funname":"DApplicationHelper::~DApplicationHelper","Returntype":"","Args":""},{"Uniquefunname":"bool event(QEvent * event)","Funname":"event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"DApplicationHelper * instance()","Funname":"instance","Returntype":"DApplicationHelper *","Args":""},{"Uniquefunname":"DPalette palette(const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons)","Funname":"palette","Returntype":"DPalette","Args":"const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons"},{"Uniquefunname":"void resetPalette(QWidget * widget)","Funname":"resetPalette","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void setPalette(QWidget * widget,const DPalette \u0026 palette)","Funname":"setPalette","Returntype":"void","Args":"QWidget * widget,const DPalette \u0026 palette"},{"Uniquefunname":" ~DApplicationHelper()","Funname":"~DApplicationHelper","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DAPPLICATIONHELPER_H"]}]}
{"Filepath":"src/widgets/darrowbutton.h","Functions":[{"Uniquefunname":" ArrowButtonIcon(QWidget * parent=0)","Funname":"ArrowButtonIcon","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" ArrowButtonIcon::ArrowButtonIcon(QWidget * parent=0)","Funname":"ArrowButtonIcon::ArrowButtonIcon","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int ArrowButtonIcon::arrowDirection() cons)","Funname":"ArrowButtonIcon::arrowDirection","Returntype":"int","Args":") cons"},{"Uniquefunname":"int ArrowButtonIcon::buttonState() cons)","Funname":"ArrowButtonIcon::buttonState","Returntype":"int","Args":") cons"},{"Uniquefunname":"void ArrowButtonIcon::setArrowDirection(int direction)","Funname":"ArrowButtonIcon::setArrowDirection","Returntype":"void","Args":"int direction"},{"Uniquefunname":"void ArrowButtonIcon::setButtonState(int state)","Funname":"ArrowButtonIcon::setButtonState","Returntype":"void","Args":"int state"},{"Uniquefunname":" DArrowButton(QWidget * parent=0)","Funname":"DArrowButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DArrowButton::DArrowButton(QWidget * parent=0)","Funname":"DArrowButton::DArrowButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DArrowButton::arrowDirection() cons)","Funname":"DArrowButton::arrowDirection","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DArrowButton::buttonState() cons)","Funname":"DArrowButton::buttonState","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DArrowButton::enterEvent(QEvent *)","Funname":"DArrowButton::enterEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void DArrowButton::initButtonState()","Funname":"DArrowButton::initButtonState","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowButton::leaveEvent(QEvent *)","Funname":"DArrowButton::leaveEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void DArrowButton::mouseEnter()","Funname":"DArrowButton::mouseEnter","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowButton::mouseLeave()","Funname":"DArrowButton::mouseLeave","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowButton::mousePressEvent(QMouseEvent * event)","Funname":"DArrowButton::mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DArrowButton::mouseRelease()","Funname":"DArrowButton::mouseRelease","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowButton::mouseReleaseEvent(QMouseEvent * event)","Funname":"DArrowButton::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DArrowButton::setArrowDirection(ArrowDirection direction)","Funname":"DArrowButton::setArrowDirection","Returntype":"void","Args":"ArrowDirection direction"},{"Uniquefunname":"void DArrowButton::setButtonState(ArrowButtonState state)","Funname":"DArrowButton::setButtonState","Returntype":"void","Args":"ArrowButtonState state"},{"Uniquefunname":"void DArrowButton::updateIconDirection(ArrowDirection direction)","Funname":"DArrowButton::updateIconDirection","Returntype":"void","Args":"ArrowDirection direction"},{"Uniquefunname":"void DArrowButton::updateIconState(ArrowButtonState state)","Funname":"DArrowButton::updateIconState","Returntype":"void","Args":"ArrowButtonState state"},{"Uniquefunname":"int arrowDirection() cons)","Funname":"arrowDirection","Returntype":"int","Args":") cons"},{"Uniquefunname":"int arrowDirection() cons)","Funname":"arrowDirection","Returntype":"int","Args":") cons"},{"Uniquefunname":"int buttonState() cons)","Funname":"buttonState","Returntype":"int","Args":") cons"},{"Uniquefunname":"int buttonState() cons)","Funname":"buttonState","Returntype":"int","Args":") cons"},{"Uniquefunname":"void enterEvent(QEvent *)","Funname":"enterEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void initButtonState()","Funname":"initButtonState","Returntype":"void","Args":""},{"Uniquefunname":"void leaveEvent(QEvent *)","Funname":"leaveEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void mouseEnter()","Funname":"mouseEnter","Returntype":"void","Args":""},{"Uniquefunname":"void mouseLeave()","Funname":"mouseLeave","Returntype":"void","Args":""},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mouseRelease()","Funname":"mouseRelease","Returntype":"void","Args":""},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * event)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void setArrowDirection(ArrowDirection direction)","Funname":"setArrowDirection","Returntype":"void","Args":"ArrowDirection direction"},{"Uniquefunname":"void setArrowDirection(int direction)","Funname":"setArrowDirection","Returntype":"void","Args":"int direction"},{"Uniquefunname":"void setButtonState(ArrowButtonState state)","Funname":"setButtonState","Returntype":"void","Args":"ArrowButtonState state"},{"Uniquefunname":"void setButtonState(int state)","Funname":"setButtonState","Returntype":"void","Args":"int state"},{"Uniquefunname":"void updateIconDirection(ArrowDirection direction)","Funname":"updateIconDirection","Returntype":"void","Args":"ArrowDirection direction"},{"Uniquefunname":"void updateIconState(ArrowButtonState state)","Funname":"updateIconState","Returntype":"void","Args":"ArrowButtonState state"}],"Records":[{"Name":"class:ArrowButtonIcon","Fields":["int ArrowButtonIcon::m_buttonState","int ArrowButtonIcon::m_direction"]},{"Name":"enum:DArrowButton::ArrowDirection","Fields":["ArrowDown","ArrowLeft","ArrowRight","ArrowUp","DArrowButton::ArrowDown","DArrowButton::ArrowLeft","DArrowButton::ArrowRight","DArrowButton::ArrowUp"]},{"Name":"enum:DArrowButton::ArrowButtonState","Fields":["ArrowStateHover","ArrowStateNormal","ArrowStatePress","DArrowButton::ArrowStateHover","DArrowButton::ArrowStateNormal","DArrowButton::ArrowStatePress"]},{"Name":"macro","Fields":["DARROWBUTTON_H"]},{"Name":"class:DArrowButton","Fields":["ArrowDirection DArrowButton::m_arrowDirection","ArrowButtonState DArrowButton::m_buttonState","ArrowButtonIcon * DArrowButton::m_hoverLabel","ArrowButtonIcon * DArrowButton::m_normalLabel","ArrowButtonIcon * DArrowButton::m_pressLabel"]}]}
{"Filepath":"src/widgets/darrowlinedrawer.h","Functions":[{"Uniquefunname":" DArrowLineDrawer(QWidget * parent=nullptr)","Funname":"DArrowLineDrawer","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DArrowLineDrawer::DArrowLineDrawer(QWidget * parent=nullptr)","Funname":"DArrowLineDrawer::DArrowLineDrawer","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"D_DECL_DEPRECATED DBaseLine * DArrowLineDrawer::headerLine()","Funname":"DArrowLineDrawer::headerLine","Returntype":"D_DECL_DEPRECATED DBaseLine *","Args":""},{"Uniquefunname":"void DArrowLineDrawer::resizeEvent(QResizeEvent * e)","Funname":"DArrowLineDrawer::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DArrowLineDrawer::setExpand(bool value)","Funname":"DArrowLineDrawer::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DArrowLineDrawer::setHeader(QWidget * header)","Funname":"DArrowLineDrawer::setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void DArrowLineDrawer::setTitle(const QString \u0026 title)","Funname":"DArrowLineDrawer::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"D_DECL_DEPRECATED DBaseLine * headerLine()","Funname":"headerLine","Returntype":"D_DECL_DEPRECATED DBaseLine *","Args":""},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setHeader(QWidget * header)","Funname":"setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"}],"Records":[{"Name":"macro","Fields":["DARROWLINEDRAWER_H"]}]}
{"Filepath":"src/widgets/darrowlineexpand.h","Functions":[{"Uniquefunname":" ArrowHeaderLine(QWidget * parent=nullptr)","Funname":"ArrowHeaderLine","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ArrowHeaderLine::ArrowHeaderLine(QWidget * parent=nullptr)","Funname":"ArrowHeaderLine::ArrowHeaderLine","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void ArrowHeaderLine::mouseMoveEvent(QMouseEvent *)","Funname":"ArrowHeaderLine::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent *"},{"Uniquefunname":"void ArrowHeaderLine::mousePressEvent(QMouseEvent *)","Funname":"ArrowHeaderLine::mousePressEvent","Returntype":"void","Args":"QMouseEvent *"},{"Uniquefunname":"void ArrowHeaderLine::reverseArrowDirection()","Funname":"ArrowHeaderLine::reverseArrowDirection","Returntype":"void","Args":""},{"Uniquefunname":"void ArrowHeaderLine::setExpand(bool value)","Funname":"ArrowHeaderLine::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":" DArrowLineExpand(QWidget * parent=nullptr)","Funname":"DArrowLineExpand","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DArrowLineExpand::DArrowLineExpand(QWidget * parent=nullptr)","Funname":"DArrowLineExpand::DArrowLineExpand","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"DBaseLine * DArrowLineExpand::headerLine()","Funname":"DArrowLineExpand::headerLine","Returntype":"DBaseLine *","Args":""},{"Uniquefunname":"void DArrowLineExpand::resizeEvent(QResizeEvent * e)","Funname":"DArrowLineExpand::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DArrowLineExpand::setExpand(bool value)","Funname":"DArrowLineExpand::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DArrowLineExpand::setHeader(QWidget * header)","Funname":"DArrowLineExpand::setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void DArrowLineExpand::setTitle(const QString \u0026 title)","Funname":"DArrowLineExpand::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"DBaseLine * headerLine()","Funname":"headerLine","Returntype":"DBaseLine *","Args":""},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent *)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent *"},{"Uniquefunname":"void mousePressEvent(QMouseEvent *)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent *"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void reverseArrowDirection()","Funname":"reverseArrowDirection","Returntype":"void","Args":""},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setHeader(QWidget * header)","Funname":"setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"}],"Records":[{"Name":"class:ArrowHeaderLine","Fields":["DIconButton * ArrowHeaderLine::m_arrowButton","bool ArrowHeaderLine::m_isExpanded"]},{"Name":"macro","Fields":["DARROWLINEEXPAND_H"]},{"Name":"class:DArrowLineExpand","Fields":["ArrowHeaderLine * DArrowLineExpand::m_headerLine"]}]}
{"Filepath":"src/widgets/darrowrectangle.h","Functions":[{"Uniquefunname":" DArrowRectangle(ArrowDirection direction,FloatMode floatMode,QWidget * parent=nullptr)","Funname":"DArrowRectangle","Returntype":"","Args":"ArrowDirection direction,FloatMode floatMode,QWidget * parent=nullptr"},{"Uniquefunname":" DArrowRectangle(ArrowDirection direction,QWidget * parent=nullptr)","Funname":"DArrowRectangle","Returntype":"","Args":"ArrowDirection direction,QWidget * parent=nullptr"},{"Uniquefunname":" DArrowRectangle::DArrowRectangle(ArrowDirection direction,FloatMode floatMode,QWidget * parent=nullptr)","Funname":"DArrowRectangle::DArrowRectangle","Returntype":"","Args":"ArrowDirection direction,FloatMode floatMode,QWidget * parent=nullptr"},{"Uniquefunname":" DArrowRectangle::DArrowRectangle(ArrowDirection direction,QWidget * parent=nullptr)","Funname":"DArrowRectangle::DArrowRectangle","Returntype":"","Args":"ArrowDirection direction,QWidget * parent=nullptr"},{"Uniquefunname":"    Q_PROPERTY(QColor borderColor READ borderColor WRITE setBorderColor)","Funname":"DArrowRectangle::Q_PROPERTY","Returntype":"","Args":"QColor borderColor READ borderColor WRITE setBorderColor"},{"Uniquefunname":"ArrowDirection DArrowRectangle::arrowDirection() cons)","Funname":"DArrowRectangle::arrowDirection","Returntype":"ArrowDirection","Args":") cons"},{"Uniquefunname":"int DArrowRectangle::arrowHeight() cons)","Funname":"DArrowRectangle::arrowHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DArrowRectangle::arrowWidth() cons)","Funname":"DArrowRectangle::arrowWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DArrowRectangle::arrowX() cons)","Funname":"DArrowRectangle::arrowX","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DArrowRectangle::arrowY() cons)","Funname":"DArrowRectangle::arrowY","Returntype":"int","Args":") cons"},{"Uniquefunname":"QColor DArrowRectangle::backgroundColor() cons)","Funname":"DArrowRectangle::backgroundColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QColor DArrowRectangle::borderColor() cons)","Funname":"DArrowRectangle::borderColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"int DArrowRectangle::borderWidth() cons)","Funname":"DArrowRectangle::borderWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool DArrowRectangle::event(QEvent * e)","Funname":"DArrowRectangle::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QWidget * DArrowRectangle::getContent() cons)","Funname":"DArrowRectangle::getContent","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"QSize DArrowRectangle::getFixedSize()","Funname":"DArrowRectangle::getFixedSize","Returntype":"QSize","Args":""},{"Uniquefunname":"int DArrowRectangle::margin() cons)","Funname":"DArrowRectangle::margin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DArrowRectangle::move(int x,int y)","Funname":"DArrowRectangle::move","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void DArrowRectangle::paintEvent(QPaintEvent *)","Funname":"DArrowRectangle::paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void DArrowRectangle::resizeEvent(QResizeEvent * e)","Funname":"DArrowRectangle::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DArrowRectangle::resizeWithContent()","Funname":"DArrowRectangle::resizeWithContent","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowRectangle::setArrowDirection(ArrowDirection value)","Funname":"DArrowRectangle::setArrowDirection","Returntype":"void","Args":"ArrowDirection value"},{"Uniquefunname":"void DArrowRectangle::setArrowHeight(int value)","Funname":"DArrowRectangle::setArrowHeight","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setArrowWidth(int value)","Funname":"DArrowRectangle::setArrowWidth","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setArrowX(int value)","Funname":"DArrowRectangle::setArrowX","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setArrowY(int value)","Funname":"DArrowRectangle::setArrowY","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setBackgroundColor(DBlurEffectWidget::MaskColorType type)","Funname":"DArrowRectangle::setBackgroundColor","Returntype":"void","Args":"DBlurEffectWidget::MaskColorType type"},{"Uniquefunname":"void DArrowRectangle::setBackgroundColor(const QColor \u0026 backgroundColor)","Funname":"DArrowRectangle::setBackgroundColor","Returntype":"void","Args":"const QColor \u0026 backgroundColor"},{"Uniquefunname":"void DArrowRectangle::setBorderColor(const QColor \u0026 borderColor)","Funname":"DArrowRectangle::setBorderColor","Returntype":"void","Args":"const QColor \u0026 borderColor"},{"Uniquefunname":"void DArrowRectangle::setBorderWidth(int borderWidth)","Funname":"DArrowRectangle::setBorderWidth","Returntype":"void","Args":"int borderWidth"},{"Uniquefunname":"void DArrowRectangle::setContent(QWidget * content)","Funname":"DArrowRectangle::setContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DArrowRectangle::setHeight(int value)","Funname":"DArrowRectangle::setHeight","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setLeftRightRadius(bool enable)","Funname":"DArrowRectangle::setLeftRightRadius","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DArrowRectangle::setMargin(int value)","Funname":"DArrowRectangle::setMargin","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setRadius(int value)","Funname":"DArrowRectangle::setRadius","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DArrowRectangle::setRadiusArrowStyleEnable(bool enable)","Funname":"DArrowRectangle::setRadiusArrowStyleEnable","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DArrowRectangle::setShadowBlurRadius(const qreal \u0026 shadowBlurRadius)","Funname":"DArrowRectangle::setShadowBlurRadius","Returntype":"void","Args":"const qreal \u0026 shadowBlurRadius"},{"Uniquefunname":"void DArrowRectangle::setShadowXOffset(const qreal \u0026 shadowXOffset)","Funname":"DArrowRectangle::setShadowXOffset","Returntype":"void","Args":"const qreal \u0026 shadowXOffset"},{"Uniquefunname":"void DArrowRectangle::setShadowYOffset(const qreal \u0026 shadowYOffset)","Funname":"DArrowRectangle::setShadowYOffset","Returntype":"void","Args":"const qreal \u0026 shadowYOffset"},{"Uniquefunname":"void DArrowRectangle::setWidth(int value)","Funname":"DArrowRectangle::setWidth","Returntype":"void","Args":"int value"},{"Uniquefunname":"qreal DArrowRectangle::shadowBlurRadius() cons)","Funname":"DArrowRectangle::shadowBlurRadius","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal DArrowRectangle::shadowXOffset() cons)","Funname":"DArrowRectangle::shadowXOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal DArrowRectangle::shadowYOffset() cons)","Funname":"DArrowRectangle::shadowYOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void DArrowRectangle::show(int x,int y)","Funname":"DArrowRectangle::show","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"    Q_PROPERTY(QColor borderColor READ borderColor WRITE setBorderColor)","Funname":"Q_PROPERTY","Returntype":"","Args":"QColor borderColor READ borderColor WRITE setBorderColor"},{"Uniquefunname":"ArrowDirection arrowDirection() cons)","Funname":"arrowDirection","Returntype":"ArrowDirection","Args":") cons"},{"Uniquefunname":"int arrowHeight() cons)","Funname":"arrowHeight","Returntype":"int","Args":") cons"},{"Uniquefunname":"int arrowWidth() cons)","Funname":"arrowWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"int arrowX() cons)","Funname":"arrowX","Returntype":"int","Args":") cons"},{"Uniquefunname":"int arrowY() cons)","Funname":"arrowY","Returntype":"int","Args":") cons"},{"Uniquefunname":"QColor backgroundColor() cons)","Funname":"backgroundColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QColor borderColor() cons)","Funname":"borderColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"int borderWidth() cons)","Funname":"borderWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QWidget * getContent() cons)","Funname":"getContent","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"QSize getFixedSize()","Funname":"getFixedSize","Returntype":"QSize","Args":""},{"Uniquefunname":"int margin() cons)","Funname":"margin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void move(int x,int y)","Funname":"move","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void paintEvent(QPaintEvent *)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void resizeWithContent()","Funname":"resizeWithContent","Returntype":"void","Args":""},{"Uniquefunname":"void setArrowDirection(ArrowDirection value)","Funname":"setArrowDirection","Returntype":"void","Args":"ArrowDirection value"},{"Uniquefunname":"void setArrowHeight(int value)","Funname":"setArrowHeight","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setArrowWidth(int value)","Funname":"setArrowWidth","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setArrowX(int value)","Funname":"setArrowX","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setArrowY(int value)","Funname":"setArrowY","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setBackgroundColor(DBlurEffectWidget::MaskColorType type)","Funname":"setBackgroundColor","Returntype":"void","Args":"DBlurEffectWidget::MaskColorType type"},{"Uniquefunname":"void setBackgroundColor(const QColor \u0026 backgroundColor)","Funname":"setBackgroundColor","Returntype":"void","Args":"const QColor \u0026 backgroundColor"},{"Uniquefunname":"void setBorderColor(const QColor \u0026 borderColor)","Funname":"setBorderColor","Returntype":"void","Args":"const QColor \u0026 borderColor"},{"Uniquefunname":"void setBorderWidth(int borderWidth)","Funname":"setBorderWidth","Returntype":"void","Args":"int borderWidth"},{"Uniquefunname":"void setContent(QWidget * content)","Funname":"setContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void setHeight(int value)","Funname":"setHeight","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setLeftRightRadius(bool enable)","Funname":"setLeftRightRadius","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setMargin(int value)","Funname":"setMargin","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setRadius(int value)","Funname":"setRadius","Returntype":"void","Args":"int value"},{"Uniquefunname":"void setRadiusArrowStyleEnable(bool enable)","Funname":"setRadiusArrowStyleEnable","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setShadowBlurRadius(const qreal \u0026 shadowBlurRadius)","Funname":"setShadowBlurRadius","Returntype":"void","Args":"const qreal \u0026 shadowBlurRadius"},{"Uniquefunname":"void setShadowXOffset(const qreal \u0026 shadowXOffset)","Funname":"setShadowXOffset","Returntype":"void","Args":"const qreal \u0026 shadowXOffset"},{"Uniquefunname":"void setShadowYOffset(const qreal \u0026 shadowYOffset)","Funname":"setShadowYOffset","Returntype":"void","Args":"const qreal \u0026 shadowYOffset"},{"Uniquefunname":"void setWidth(int value)","Funname":"setWidth","Returntype":"void","Args":"int value"},{"Uniquefunname":"qreal shadowBlurRadius() cons)","Funname":"shadowBlurRadius","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal shadowXOffset() cons)","Funname":"shadowXOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal shadowYOffset() cons)","Funname":"shadowYOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void show(int x,int y)","Funname":"show","Returntype":"void","Args":"int x,int y"}],"Records":[{"Name":"enum:DArrowRectangle::ArrowDirection","Fields":["ArrowBottom","ArrowLeft","ArrowRight","ArrowTop","DArrowRectangle::ArrowBottom","DArrowRectangle::ArrowLeft","DArrowRectangle::ArrowRight","DArrowRectangle::ArrowTop"]},{"Name":"macro","Fields":["DARROWRECTANGLE_H"]},{"Name":"enum:DArrowRectangle::FloatMode","Fields":["DArrowRectangle::FloatWidget","DArrowRectangle::FloatWindow","FloatWidget","FloatWindow"]}]}
{"Filepath":"src/widgets/dbackgroundgroup.h","Functions":[{"Uniquefunname":" DBackgroundGroup(QLayout * layout=nullptr,QWidget * parent=nullptr)","Funname":"DBackgroundGroup","Returntype":"","Args":"QLayout * layout=nullptr,QWidget * parent=nullptr"},{"Uniquefunname":" DBackgroundGroup::DBackgroundGroup(QLayout * layout=nullptr,QWidget * parent=nullptr)","Funname":"DBackgroundGroup::DBackgroundGroup","Returntype":"","Args":"QLayout * layout=nullptr,QWidget * parent=nullptr"},{"Uniquefunname":"QPalette DBackgroundGroup::backgroundRole() cons)","Funname":"DBackgroundGroup::backgroundRole","Returntype":"QPalette","Args":") cons"},{"Uniquefunname":"bool DBackgroundGroup::event(QEvent * event)","Funname":"DBackgroundGroup::event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"QMargins DBackgroundGroup::itemMargins() cons)","Funname":"DBackgroundGroup::itemMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void DBackgroundGroup::paintEvent(QPaintEvent * event)","Funname":"DBackgroundGroup::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DBackgroundGroup::setBackgroundRole(QPalette::ColorRole role)","Funname":"DBackgroundGroup::setBackgroundRole","Returntype":"void","Args":"QPalette::ColorRole role"},{"Uniquefunname":"void DBackgroundGroup::setItemMargins(QMargins itemMargins)","Funname":"DBackgroundGroup::setItemMargins","Returntype":"void","Args":"QMargins itemMargins"},{"Uniquefunname":"void DBackgroundGroup::setItemSpacing(int spacing)","Funname":"DBackgroundGroup::setItemSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void DBackgroundGroup::setLayout(QLayout * layout)","Funname":"DBackgroundGroup::setLayout","Returntype":"void","Args":"QLayout * layout"},{"Uniquefunname":"void DBackgroundGroup::setUseWidgetBackground(bool useWidgetBackground)","Funname":"DBackgroundGroup::setUseWidgetBackground","Returntype":"void","Args":"bool useWidgetBackground"},{"Uniquefunname":"bool DBackgroundGroup::useWidgetBackground() cons)","Funname":"DBackgroundGroup::useWidgetBackground","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QPalette backgroundRole() cons)","Funname":"backgroundRole","Returntype":"QPalette","Args":") cons"},{"Uniquefunname":"bool event(QEvent * event)","Funname":"event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"QMargins itemMargins() cons)","Funname":"itemMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setBackgroundRole(QPalette::ColorRole role)","Funname":"setBackgroundRole","Returntype":"void","Args":"QPalette::ColorRole role"},{"Uniquefunname":"void setItemMargins(QMargins itemMargins)","Funname":"setItemMargins","Returntype":"void","Args":"QMargins itemMargins"},{"Uniquefunname":"void setItemSpacing(int spacing)","Funname":"setItemSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void setLayout(QLayout * layout)","Funname":"setLayout","Returntype":"void","Args":"QLayout * layout"},{"Uniquefunname":"void setUseWidgetBackground(bool useWidgetBackground)","Funname":"setUseWidgetBackground","Returntype":"void","Args":"bool useWidgetBackground"},{"Uniquefunname":"bool useWidgetBackground() cons)","Funname":"useWidgetBackground","Returntype":"bool","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DBACKGROUNDGROUP_H"]}]}
{"Filepath":"src/widgets/dbaseexpand.h","Functions":[{"Uniquefunname":" ContentLoader(QWidget * parent=nullptr)","Funname":"ContentLoader","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" ContentLoader::ContentLoader(QWidget * parent=nullptr)","Funname":"ContentLoader::ContentLoader","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DBaseExpand(QWidget * parent=nullptr)","Funname":"DBaseExpand","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DBaseExpand::DBaseExpand(QWidget * parent=nullptr)","Funname":"DBaseExpand::DBaseExpand","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool DBaseExpand::expand() cons)","Funname":"DBaseExpand::expand","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QWidget * DBaseExpand::getContent() cons)","Funname":"DBaseExpand::getContent","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void DBaseExpand::resizeEvent(QResizeEvent * e)","Funname":"DBaseExpand::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DBaseExpand::setAnimationDuration(int duration)","Funname":"DBaseExpand::setAnimationDuration","Returntype":"void","Args":"int duration"},{"Uniquefunname":"void DBaseExpand::setAnimationEasingCurve(QEasingCurve curve)","Funname":"DBaseExpand::setAnimationEasingCurve","Returntype":"void","Args":"QEasingCurve curve"},{"Uniquefunname":"void DBaseExpand::setContent(QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter)","Funname":"DBaseExpand::setContent","Returntype":"void","Args":"QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter"},{"Uniquefunname":"void DBaseExpand::setExpand(bool value)","Funname":"DBaseExpand::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBaseExpand::setExpandedSeparatorVisible(bool arg)","Funname":"DBaseExpand::setExpandedSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void DBaseExpand::setHeader(QWidget * header)","Funname":"DBaseExpand::setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void DBaseExpand::setHeaderHeight(int height)","Funname":"DBaseExpand::setHeaderHeight","Returntype":"void","Args":"int height"},{"Uniquefunname":"void DBaseExpand::setSeparatorVisible(bool arg)","Funname":"DBaseExpand::setSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void DBaseExpand::sizeChanged(QSize s)","Funname":"DBaseExpand::sizeChanged","Returntype":"void","Args":"QSize s"},{"Uniquefunname":"bool expand() cons)","Funname":"expand","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QWidget * getContent() cons)","Funname":"getContent","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void setAnimationDuration(int duration)","Funname":"setAnimationDuration","Returntype":"void","Args":"int duration"},{"Uniquefunname":"void setAnimationEasingCurve(QEasingCurve curve)","Funname":"setAnimationEasingCurve","Returntype":"void","Args":"QEasingCurve curve"},{"Uniquefunname":"void setContent(QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter)","Funname":"setContent","Returntype":"void","Args":"QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter"},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setExpandedSeparatorVisible(bool arg)","Funname":"setExpandedSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void setHeader(QWidget * header)","Funname":"setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void setHeaderHeight(int height)","Funname":"setHeaderHeight","Returntype":"void","Args":"int height"},{"Uniquefunname":"void setSeparatorVisible(bool arg)","Funname":"setSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void sizeChanged(QSize s)","Funname":"sizeChanged","Returntype":"void","Args":"QSize s"}],"Records":[{"Name":"macro","Fields":["DBASEEXPAND_H"]},{"Name":"class:DBaseExpand","Fields":["QScopedPointer\u003cDBaseExpandPrivate\u003e DBaseExpand::d_private"]}]}
{"Filepath":"src/widgets/dbaseline.h","Functions":[{"Uniquefunname":" DBaseLine(QWidget * parent=0)","Funname":"DBaseLine","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DBaseLine::DBaseLine(QWidget * parent=0)","Funname":"DBaseLine::DBaseLine","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"QBoxLayout * DBaseLine::leftLayout()","Funname":"DBaseLine::leftLayout","Returntype":"QBoxLayout *","Args":""},{"Uniquefunname":"int DBaseLine::leftMargin() cons)","Funname":"DBaseLine::leftMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"QBoxLayout * DBaseLine::rightLayout()","Funname":"DBaseLine::rightLayout","Returntype":"QBoxLayout *","Args":""},{"Uniquefunname":"int DBaseLine::rightMargin() cons)","Funname":"DBaseLine::rightMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DBaseLine::setLeftContent(QWidget * content)","Funname":"DBaseLine::setLeftContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DBaseLine::setLeftMargin(int margin)","Funname":"DBaseLine::setLeftMargin","Returntype":"void","Args":"int margin"},{"Uniquefunname":"void DBaseLine::setRightContent(QWidget * content)","Funname":"DBaseLine::setRightContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DBaseLine::setRightMargin(int margin)","Funname":"DBaseLine::setRightMargin","Returntype":"void","Args":"int margin"},{"Uniquefunname":"QBoxLayout * leftLayout()","Funname":"leftLayout","Returntype":"QBoxLayout *","Args":""},{"Uniquefunname":"int leftMargin() cons)","Funname":"leftMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"QBoxLayout * rightLayout()","Funname":"rightLayout","Returntype":"QBoxLayout *","Args":""},{"Uniquefunname":"int rightMargin() cons)","Funname":"rightMargin","Returntype":"int","Args":") cons"},{"Uniquefunname":"void setLeftContent(QWidget * content)","Funname":"setLeftContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void setLeftMargin(int margin)","Funname":"setLeftMargin","Returntype":"void","Args":"int margin"},{"Uniquefunname":"void setRightContent(QWidget * content)","Funname":"setRightContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void setRightMargin(int margin)","Funname":"setRightMargin","Returntype":"void","Args":"int margin"}],"Records":[{"Name":"macro","Fields":["DBASELINE_H"]},{"Name":"class:DBaseLine","Fields":["QHBoxLayout * DBaseLine::m_leftLayout","int DBaseLine::m_leftMargin","QHBoxLayout * DBaseLine::m_mainLayout","QHBoxLayout * DBaseLine::m_rightLayout","int DBaseLine::m_rightMargin"]}]}
{"Filepath":"src/widgets/dblureffectwidget.h","Functions":[{"Uniquefunname":" DBlurEffectGroup()","Funname":"DBlurEffectGroup","Returntype":"","Args":""},{"Uniquefunname":" DBlurEffectGroup::DBlurEffectGroup()","Funname":"DBlurEffectGroup::DBlurEffectGroup","Returntype":"","Args":""},{"Uniquefunname":"void DBlurEffectGroup::addWidget(DBlurEffectWidget * widget,const QPoint \u0026 offset=QPoint (0,0))","Funname":"DBlurEffectGroup::addWidget","Returntype":"void","Args":"DBlurEffectWidget * widget,const QPoint \u0026 offset=QPoint (0,0)"},{"Uniquefunname":"void DBlurEffectGroup::paint(QPainter * pa,DBlurEffectWidget * widget) cons)","Funname":"DBlurEffectGroup::paint","Returntype":"void","Args":"QPainter * pa,DBlurEffectWidget * widget) cons"},{"Uniquefunname":"void DBlurEffectGroup::removeWidget(DBlurEffectWidget * widget)","Funname":"DBlurEffectGroup::removeWidget","Returntype":"void","Args":"DBlurEffectWidget * widget"},{"Uniquefunname":"void DBlurEffectGroup::setSourceImage(QImage image,int blurRadius=35)","Funname":"DBlurEffectGroup::setSourceImage","Returntype":"void","Args":"QImage image,int blurRadius=35"},{"Uniquefunname":" DBlurEffectGroup::~DBlurEffectGroup()","Funname":"DBlurEffectGroup::~DBlurEffectGroup","Returntype":"","Args":""},{"Uniquefunname":" DBlurEffectWidget(DBlurEffectWidgetPrivate \u0026 dd,QWidget * parent=0)","Funname":"DBlurEffectWidget","Returntype":"","Args":"DBlurEffectWidgetPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":"MaskColorType DBlurEffectWidget(QWidget * parent=0)","Funname":"DBlurEffectWidget","Returntype":"MaskColorType","Args":"QWidget * parent=0"},{"Uniquefunname":" DBlurEffectWidget::DBlurEffectWidget(DBlurEffectWidgetPrivate \u0026 dd,QWidget * parent=0)","Funname":"DBlurEffectWidget::DBlurEffectWidget","Returntype":"","Args":"DBlurEffectWidgetPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":"MaskColorType DBlurEffectWidget::DBlurEffectWidget(QWidget * parent=0)","Funname":"DBlurEffectWidget::DBlurEffectWidget","Returntype":"MaskColorType","Args":"QWidget * parent=0"},{"Uniquefunname":"BlendMode DBlurEffectWidget::blendMode() cons)","Funname":"DBlurEffectWidget::blendMode","Returntype":"BlendMode","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::blendModeChanged(BlendMode blendMode)","Funname":"DBlurEffectWidget::blendModeChanged","Returntype":"void","Args":"BlendMode blendMode"},{"Uniquefunname":"bool DBlurEffectWidget::blurEnabled() cons)","Funname":"DBlurEffectWidget::blurEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::blurEnabledChanged(bool blurEnabled)","Funname":"DBlurEffectWidget::blurEnabledChanged","Returntype":"void","Args":"bool blurEnabled"},{"Uniquefunname":"int DBlurEffectWidget::blurRectXRadius() cons)","Funname":"DBlurEffectWidget::blurRectXRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::blurRectXRadiusChanged(int blurRectXRadius)","Funname":"DBlurEffectWidget::blurRectXRadiusChanged","Returntype":"void","Args":"int blurRectXRadius"},{"Uniquefunname":"int DBlurEffectWidget::blurRectYRadius() cons)","Funname":"DBlurEffectWidget::blurRectYRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::blurRectYRadiusChanged(int blurRectYRadius)","Funname":"DBlurEffectWidget::blurRectYRadiusChanged","Returntype":"void","Args":"int blurRectYRadius"},{"Uniquefunname":"void DBlurEffectWidget::blurSourceImageDirtied()","Funname":"DBlurEffectWidget::blurSourceImageDirtied","Returntype":"void","Args":""},{"Uniquefunname":"void DBlurEffectWidget::changeEvent(QEvent * event)","Funname":"DBlurEffectWidget::changeEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"bool DBlurEffectWidget::eventFilter(QObject * watched,QEvent * event)","Funname":"DBlurEffectWidget::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void DBlurEffectWidget::fullChanged(bool full)","Funname":"DBlurEffectWidget::fullChanged","Returntype":"void","Args":"bool full"},{"Uniquefunname":"void DBlurEffectWidget::hideEvent(QHideEvent * event)","Funname":"DBlurEffectWidget::hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"bool DBlurEffectWidget::isFull() cons)","Funname":"DBlurEffectWidget::isFull","Returntype":"bool","Args":") cons"},{"Uniquefunname":"quint8 DBlurEffectWidget::maskAlpha() cons)","Funname":"DBlurEffectWidget::maskAlpha","Returntype":"quint8","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::maskAlphaChanged(quint8 alpha)","Funname":"DBlurEffectWidget::maskAlphaChanged","Returntype":"void","Args":"quint8 alpha"},{"Uniquefunname":"QColor DBlurEffectWidget::maskColor() cons)","Funname":"DBlurEffectWidget::maskColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::maskColorChanged(QColor maskColor)","Funname":"DBlurEffectWidget::maskColorChanged","Returntype":"void","Args":"QColor maskColor"},{"Uniquefunname":"BlurMode DBlurEffectWidget::mode() cons)","Funname":"DBlurEffectWidget::mode","Returntype":"BlurMode","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::modeChanged(BlurMode mode)","Funname":"DBlurEffectWidget::modeChanged","Returntype":"void","Args":"BlurMode mode"},{"Uniquefunname":"void DBlurEffectWidget::moveEvent(QMoveEvent * event)","Funname":"DBlurEffectWidget::moveEvent","Returntype":"void","Args":"QMoveEvent * event"},{"Uniquefunname":"void DBlurEffectWidget::paintEvent(QPaintEvent * event)","Funname":"DBlurEffectWidget::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"int DBlurEffectWidget::radius() cons)","Funname":"DBlurEffectWidget::radius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidget::resizeEvent(QResizeEvent * event)","Funname":"DBlurEffectWidget::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DBlurEffectWidget::setBlendMode(BlendMode blendMode)","Funname":"DBlurEffectWidget::setBlendMode","Returntype":"void","Args":"BlendMode blendMode"},{"Uniquefunname":"void DBlurEffectWidget::setBlurEnabled(bool blurEnabled)","Funname":"DBlurEffectWidget::setBlurEnabled","Returntype":"void","Args":"bool blurEnabled"},{"Uniquefunname":"void DBlurEffectWidget::setBlurRectXRadius(int blurRectXRadius)","Funname":"DBlurEffectWidget::setBlurRectXRadius","Returntype":"void","Args":"int blurRectXRadius"},{"Uniquefunname":"void DBlurEffectWidget::setBlurRectYRadius(int blurRectYRadius)","Funname":"DBlurEffectWidget::setBlurRectYRadius","Returntype":"void","Args":"int blurRectYRadius"},{"Uniquefunname":"void DBlurEffectWidget::setFull(bool full)","Funname":"DBlurEffectWidget::setFull","Returntype":"void","Args":"bool full"},{"Uniquefunname":"void DBlurEffectWidget::setMaskAlpha(quint8 alpha)","Funname":"DBlurEffectWidget::setMaskAlpha","Returntype":"void","Args":"quint8 alpha"},{"Uniquefunname":"void DBlurEffectWidget::setMaskColor(MaskColorType type)","Funname":"DBlurEffectWidget::setMaskColor","Returntype":"void","Args":"MaskColorType type"},{"Uniquefunname":"void DBlurEffectWidget::setMaskColor(QColor maskColor)","Funname":"DBlurEffectWidget::setMaskColor","Returntype":"void","Args":"QColor maskColor"},{"Uniquefunname":"void DBlurEffectWidget::setMaskPath(const QPainterPath \u0026 path)","Funname":"DBlurEffectWidget::setMaskPath","Returntype":"void","Args":"const QPainterPath \u0026 path"},{"Uniquefunname":"void DBlurEffectWidget::setMode(BlurMode mode)","Funname":"DBlurEffectWidget::setMode","Returntype":"void","Args":"BlurMode mode"},{"Uniquefunname":"void DBlurEffectWidget::setRadius(int radius)","Funname":"DBlurEffectWidget::setRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void DBlurEffectWidget::setSourceImage(const QImage \u0026 image,bool autoScale=true)","Funname":"DBlurEffectWidget::setSourceImage","Returntype":"void","Args":"const QImage \u0026 image,bool autoScale=true"},{"Uniquefunname":"void DBlurEffectWidget::showEvent(QShowEvent * event)","Funname":"DBlurEffectWidget::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"void DBlurEffectWidget::updateBlurSourceImage(const QRegion \u0026 ren)","Funname":"DBlurEffectWidget::updateBlurSourceImage","Returntype":"void","Args":"const QRegion \u0026 ren"},{"Uniquefunname":" DBlurEffectWidget::~DBlurEffectWidget()","Funname":"DBlurEffectWidget::~DBlurEffectWidget","Returntype":"","Args":""},{"Uniquefunname":"void addWidget(DBlurEffectWidget * widget,const QPoint \u0026 offset=QPoint (0,0))","Funname":"addWidget","Returntype":"void","Args":"DBlurEffectWidget * widget,const QPoint \u0026 offset=QPoint (0,0)"},{"Uniquefunname":"BlendMode blendMode() cons)","Funname":"blendMode","Returntype":"BlendMode","Args":") cons"},{"Uniquefunname":"void blendModeChanged(BlendMode blendMode)","Funname":"blendModeChanged","Returntype":"void","Args":"BlendMode blendMode"},{"Uniquefunname":"bool blurEnabled() cons)","Funname":"blurEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void blurEnabledChanged(bool blurEnabled)","Funname":"blurEnabledChanged","Returntype":"void","Args":"bool blurEnabled"},{"Uniquefunname":"int blurRectXRadius() cons)","Funname":"blurRectXRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void blurRectXRadiusChanged(int blurRectXRadius)","Funname":"blurRectXRadiusChanged","Returntype":"void","Args":"int blurRectXRadius"},{"Uniquefunname":"int blurRectYRadius() cons)","Funname":"blurRectYRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void blurRectYRadiusChanged(int blurRectYRadius)","Funname":"blurRectYRadiusChanged","Returntype":"void","Args":"int blurRectYRadius"},{"Uniquefunname":"void blurSourceImageDirtied()","Funname":"blurSourceImageDirtied","Returntype":"void","Args":""},{"Uniquefunname":"void changeEvent(QEvent * event)","Funname":"changeEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void fullChanged(bool full)","Funname":"fullChanged","Returntype":"void","Args":"bool full"},{"Uniquefunname":"void hideEvent(QHideEvent * event)","Funname":"hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"bool isFull() cons)","Funname":"isFull","Returntype":"bool","Args":") cons"},{"Uniquefunname":"quint8 maskAlpha() cons)","Funname":"maskAlpha","Returntype":"quint8","Args":") cons"},{"Uniquefunname":"void maskAlphaChanged(quint8 alpha)","Funname":"maskAlphaChanged","Returntype":"void","Args":"quint8 alpha"},{"Uniquefunname":"QColor maskColor() cons)","Funname":"maskColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"void maskColorChanged(QColor maskColor)","Funname":"maskColorChanged","Returntype":"void","Args":"QColor maskColor"},{"Uniquefunname":"BlurMode mode() cons)","Funname":"mode","Returntype":"BlurMode","Args":") cons"},{"Uniquefunname":"void modeChanged(BlurMode mode)","Funname":"modeChanged","Returntype":"void","Args":"BlurMode mode"},{"Uniquefunname":"void moveEvent(QMoveEvent * event)","Funname":"moveEvent","Returntype":"void","Args":"QMoveEvent * event"},{"Uniquefunname":"void paint(QPainter * pa,DBlurEffectWidget * widget) cons)","Funname":"paint","Returntype":"void","Args":"QPainter * pa,DBlurEffectWidget * widget) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"int radius() cons)","Funname":"radius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void removeWidget(DBlurEffectWidget * widget)","Funname":"removeWidget","Returntype":"void","Args":"DBlurEffectWidget * widget"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void setBlendMode(BlendMode blendMode)","Funname":"setBlendMode","Returntype":"void","Args":"BlendMode blendMode"},{"Uniquefunname":"void setBlurEnabled(bool blurEnabled)","Funname":"setBlurEnabled","Returntype":"void","Args":"bool blurEnabled"},{"Uniquefunname":"void setBlurRectXRadius(int blurRectXRadius)","Funname":"setBlurRectXRadius","Returntype":"void","Args":"int blurRectXRadius"},{"Uniquefunname":"void setBlurRectYRadius(int blurRectYRadius)","Funname":"setBlurRectYRadius","Returntype":"void","Args":"int blurRectYRadius"},{"Uniquefunname":"void setFull(bool full)","Funname":"setFull","Returntype":"void","Args":"bool full"},{"Uniquefunname":"void setMaskAlpha(quint8 alpha)","Funname":"setMaskAlpha","Returntype":"void","Args":"quint8 alpha"},{"Uniquefunname":"void setMaskColor(MaskColorType type)","Funname":"setMaskColor","Returntype":"void","Args":"MaskColorType type"},{"Uniquefunname":"void setMaskColor(QColor maskColor)","Funname":"setMaskColor","Returntype":"void","Args":"QColor maskColor"},{"Uniquefunname":"void setMaskPath(const QPainterPath \u0026 path)","Funname":"setMaskPath","Returntype":"void","Args":"const QPainterPath \u0026 path"},{"Uniquefunname":"void setMode(BlurMode mode)","Funname":"setMode","Returntype":"void","Args":"BlurMode mode"},{"Uniquefunname":"void setRadius(int radius)","Funname":"setRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void setSourceImage(QImage image,int blurRadius=35)","Funname":"setSourceImage","Returntype":"void","Args":"QImage image,int blurRadius=35"},{"Uniquefunname":"void setSourceImage(const QImage \u0026 image,bool autoScale=true)","Funname":"setSourceImage","Returntype":"void","Args":"const QImage \u0026 image,bool autoScale=true"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"void updateBlurSourceImage(const QRegion \u0026 ren)","Funname":"updateBlurSourceImage","Returntype":"void","Args":"const QRegion \u0026 ren"},{"Uniquefunname":" ~DBlurEffectGroup()","Funname":"~DBlurEffectGroup","Returntype":"","Args":""},{"Uniquefunname":" ~DBlurEffectWidget()","Funname":"~DBlurEffectWidget","Returntype":"","Args":""}],"Records":[{"Name":"enum:DBlurEffectWidget::MaskColorType","Fields":["AutoColor","CustomColor","DBlurEffectWidget::AutoColor","DBlurEffectWidget::CustomColor","DBlurEffectWidget::DarkColor","DBlurEffectWidget::LightColor","DarkColor","LightColor"]},{"Name":"enum:DBlurEffectWidget::BlendMode","Fields":["BehindWindowBlend","DBlurEffectWidget::BehindWindowBlend","DBlurEffectWidget::InWidgetBlend","DBlurEffectWidget::InWindowBlend","InWidgetBlend","InWindowBlend"]},{"Name":"macro","Fields":["DBLUREFFECTWIDGET_H"]},{"Name":"enum:DBlurEffectWidget::BlurMode","Fields":["DBlurEffectWidget::GaussianBlur","GaussianBlur"]}]}
{"Filepath":"src/widgets/dboxwidget.h","Functions":[{"Uniquefunname":" DBoxWidget(QBoxLayout::Direction direction,QWidget * parent=0)","Funname":"DBoxWidget","Returntype":"","Args":"QBoxLayout::Direction direction,QWidget * parent=0"},{"Uniquefunname":" DBoxWidget::DBoxWidget(QBoxLayout::Direction direction,QWidget * parent=0)","Funname":"DBoxWidget::DBoxWidget","Returntype":"","Args":"QBoxLayout::Direction direction,QWidget * parent=0"},{"Uniquefunname":"void DBoxWidget::addWidget(QWidget * widget)","Funname":"DBoxWidget::addWidget","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"QBoxLayout DBoxWidget::direction() cons)","Funname":"DBoxWidget::direction","Returntype":"QBoxLayout","Args":") cons"},{"Uniquefunname":"void DBoxWidget::directionChanged(QBoxLayout::Direction direction)","Funname":"DBoxWidget::directionChanged","Returntype":"void","Args":"QBoxLayout::Direction direction"},{"Uniquefunname":"bool DBoxWidget::event(QEvent * ee)","Funname":"DBoxWidget::event","Returntype":"bool","Args":"QEvent * ee"},{"Uniquefunname":"QBoxLayout * DBoxWidget::layout() cons)","Funname":"DBoxWidget::layout","Returntype":"QBoxLayout *","Args":") cons"},{"Uniquefunname":"void DBoxWidget::setDirection(QBoxLayout::Direction direction)","Funname":"DBoxWidget::setDirection","Returntype":"void","Args":"QBoxLayout::Direction direction"},{"Uniquefunname":"QSize DBoxWidget::sizeHint() cons)","Funname":"DBoxWidget::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DBoxWidget::updateSize(const QSize \u0026 size)","Funname":"DBoxWidget::updateSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":" DHBoxWidget(QWidget * parent=0)","Funname":"DHBoxWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DHBoxWidget::DHBoxWidget(QWidget * parent=0)","Funname":"DHBoxWidget::DHBoxWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DVBoxWidget(QWidget * parent=0)","Funname":"DVBoxWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DVBoxWidget::DVBoxWidget(QWidget * parent=0)","Funname":"DVBoxWidget::DVBoxWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void addWidget(QWidget * widget)","Funname":"addWidget","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"QBoxLayout direction() cons)","Funname":"direction","Returntype":"QBoxLayout","Args":") cons"},{"Uniquefunname":"void directionChanged(QBoxLayout::Direction direction)","Funname":"directionChanged","Returntype":"void","Args":"QBoxLayout::Direction direction"},{"Uniquefunname":"bool event(QEvent * ee)","Funname":"event","Returntype":"bool","Args":"QEvent * ee"},{"Uniquefunname":"QBoxLayout * layout() cons)","Funname":"layout","Returntype":"QBoxLayout *","Args":") cons"},{"Uniquefunname":"void setDirection(QBoxLayout::Direction direction)","Funname":"setDirection","Returntype":"void","Args":"QBoxLayout::Direction direction"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void updateSize(const QSize \u0026 size)","Funname":"updateSize","Returntype":"void","Args":"const QSize \u0026 size"}],"Records":[{"Name":"macro","Fields":["DBOXWIDGET_H"]}]}
{"Filepath":"src/widgets/dbuttonbox.h","Functions":[{"Uniquefunname":" DButtonBox(QWidget * parent=nullptr)","Funname":"DButtonBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBox::DButtonBox(QWidget * parent=nullptr)","Funname":"DButtonBox::DButtonBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QAbstractButton * DButtonBox::button(int id) cons)","Funname":"DButtonBox::button","Returntype":"QAbstractButton *","Args":"int id) cons"},{"Uniquefunname":"QList\u003cQAbstractButton * \u003e DButtonBox::buttonList() cons)","Funname":"DButtonBox::buttonList","Returntype":"QList\u003cQAbstractButton * \u003e","Args":") cons"},{"Uniquefunname":"void DButtonBox::buttonPressed(QAbstractButton *)","Funname":"DButtonBox::buttonPressed","Returntype":"void","Args":"QAbstractButton *"},{"Uniquefunname":"void DButtonBox::buttonReleased(QAbstractButton *)","Funname":"DButtonBox::buttonReleased","Returntype":"void","Args":"QAbstractButton *"},{"Uniquefunname":"void DButtonBox::buttonToggled(QAbstractButton *,bool)","Funname":"DButtonBox::buttonToggled","Returntype":"void","Args":"QAbstractButton *,bool"},{"Uniquefunname":"QAbstractButton * DButtonBox::checkedButton() cons)","Funname":"DButtonBox::checkedButton","Returntype":"QAbstractButton *","Args":") cons"},{"Uniquefunname":"int DButtonBox::checkedId() cons)","Funname":"DButtonBox::checkedId","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DButtonBox::id(QAbstractButton * button) cons)","Funname":"DButtonBox::id","Returntype":"int","Args":"QAbstractButton * button) cons"},{"Uniquefunname":"Qt DButtonBox::orientation() cons)","Funname":"DButtonBox::orientation","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DButtonBox::paintEvent(QPaintEvent * e)","Funname":"DButtonBox::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void DButtonBox::setButtonList(const QList\u003cDButtonBoxButton * \u003e \u0026 list,bool checkable)","Funname":"DButtonBox::setButtonList","Returntype":"void","Args":"const QList\u003cDButtonBoxButton * \u003e \u0026 list,bool checkable"},{"Uniquefunname":"void DButtonBox::setId(QAbstractButton * button,int id)","Funname":"DButtonBox::setId","Returntype":"void","Args":"QAbstractButton * button,int id"},{"Uniquefunname":"void DButtonBox::setOrientation(Qt::Orientation orientation)","Funname":"DButtonBox::setOrientation","Returntype":"void","Args":"Qt::Orientation orientation"},{"Uniquefunname":" DButtonBoxButton(DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DButtonBoxButton","Returntype":"","Args":"DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton(QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DButtonBoxButton","Returntype":"","Args":"QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton(const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DButtonBoxButton","Returntype":"","Args":"const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DButtonBoxButton","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton::DButtonBoxButton(DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DButtonBoxButton::DButtonBoxButton","Returntype":"","Args":"DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton::DButtonBoxButton(QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DButtonBoxButton::DButtonBoxButton","Returntype":"","Args":"QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton::DButtonBoxButton(const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DButtonBoxButton::DButtonBoxButton","Returntype":"","Args":"const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DButtonBoxButton::DButtonBoxButton(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DButtonBoxButton::DButtonBoxButton","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":"bool DButtonBoxButton::event(QEvent * e)","Funname":"DButtonBoxButton::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QSize DButtonBoxButton::iconSize() cons)","Funname":"DButtonBoxButton::iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DButtonBoxButton::initStyleOption(DStyleOptionButtonBoxButton * option) cons)","Funname":"DButtonBoxButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButtonBoxButton * option) cons"},{"Uniquefunname":"void DButtonBoxButton::keyPressEvent(QKeyEvent * event)","Funname":"DButtonBoxButton::keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QSize DButtonBoxButton::minimumSizeHint() cons)","Funname":"DButtonBoxButton::minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DButtonBoxButton::paintEvent(QPaintEvent * e)","Funname":"DButtonBoxButton::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void DButtonBoxButton::setIcon(DStyle::StandardPixmap iconType)","Funname":"DButtonBoxButton::setIcon","Returntype":"void","Args":"DStyle::StandardPixmap iconType"},{"Uniquefunname":"void DButtonBoxButton::setIcon(QStyle::StandardPixmap iconType)","Funname":"DButtonBoxButton::setIcon","Returntype":"void","Args":"QStyle::StandardPixmap iconType"},{"Uniquefunname":"void DButtonBoxButton::setIcon(const QIcon \u0026 icon)","Funname":"DButtonBoxButton::setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"QSize DButtonBoxButton::sizeHint() cons)","Funname":"DButtonBoxButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QAbstractButton * button(int id) cons)","Funname":"button","Returntype":"QAbstractButton *","Args":"int id) cons"},{"Uniquefunname":"QList\u003cQAbstractButton * \u003e buttonList() cons)","Funname":"buttonList","Returntype":"QList\u003cQAbstractButton * \u003e","Args":") cons"},{"Uniquefunname":"void buttonPressed(QAbstractButton *)","Funname":"buttonPressed","Returntype":"void","Args":"QAbstractButton *"},{"Uniquefunname":"void buttonReleased(QAbstractButton *)","Funname":"buttonReleased","Returntype":"void","Args":"QAbstractButton *"},{"Uniquefunname":"void buttonToggled(QAbstractButton *,bool)","Funname":"buttonToggled","Returntype":"void","Args":"QAbstractButton *,bool"},{"Uniquefunname":"QAbstractButton * checkedButton() cons)","Funname":"checkedButton","Returntype":"QAbstractButton *","Args":") cons"},{"Uniquefunname":"int checkedId() cons)","Funname":"checkedId","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QSize iconSize() cons)","Funname":"iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"int id(QAbstractButton * button) cons)","Funname":"id","Returntype":"int","Args":"QAbstractButton * button) cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButtonBoxButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButtonBoxButton * option) cons"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * event)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QSize minimumSizeHint() cons)","Funname":"minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"Qt orientation() cons)","Funname":"orientation","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void setButtonList(const QList\u003cDButtonBoxButton * \u003e \u0026 list,bool checkable)","Funname":"setButtonList","Returntype":"void","Args":"const QList\u003cDButtonBoxButton * \u003e \u0026 list,bool checkable"},{"Uniquefunname":"void setIcon(DStyle::StandardPixmap iconType)","Funname":"setIcon","Returntype":"void","Args":"DStyle::StandardPixmap iconType"},{"Uniquefunname":"void setIcon(QStyle::StandardPixmap iconType)","Funname":"setIcon","Returntype":"void","Args":"QStyle::StandardPixmap iconType"},{"Uniquefunname":"void setIcon(const QIcon \u0026 icon)","Funname":"setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void setId(QAbstractButton * button,int id)","Funname":"setId","Returntype":"void","Args":"QAbstractButton * button,int id"},{"Uniquefunname":"void setOrientation(Qt::Orientation orientation)","Funname":"setOrientation","Returntype":"void","Args":"Qt::Orientation orientation"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DBUTTONBOX_H"]}]}
{"Filepath":"src/widgets/dcircleprogress.h","Functions":[{"Uniquefunname":" DCircleProgress(QWidget * parent=0)","Funname":"DCircleProgress","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DCircleProgress::DCircleProgress(QWidget * parent=0)","Funname":"DCircleProgress::DCircleProgress","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"Q_OBJECT DCircleProgress::Q_PROPERTY(QColor backgroundColor READ backgroundColor WRITE setBackgroundColor DESIGNABLE true)","Funname":"DCircleProgress::Q_PROPERTY","Returntype":"Q_OBJECT","Args":"QColor backgroundColor READ backgroundColor WRITE setBackgroundColor DESIGNABLE true"},{"Uniquefunname":"const QColor DCircleProgress::backgroundColor() cons)","Funname":"DCircleProgress::backgroundColor","Returntype":"const QColor","Args":") cons"},{"Uniquefunname":"QLabel * DCircleProgress::bottomLabel()","Funname":"DCircleProgress::bottomLabel","Returntype":"QLabel *","Args":""},{"Uniquefunname":"const QColor DCircleProgress::chunkColor() cons)","Funname":"DCircleProgress::chunkColor","Returntype":"const QColor","Args":") cons"},{"Uniquefunname":"void DCircleProgress::enterEvent(QEvent * e)","Funname":"DCircleProgress::enterEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"void DCircleProgress::leaveEvent(QEvent * e)","Funname":"DCircleProgress::leaveEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"int DCircleProgress::lineWidth() cons)","Funname":"DCircleProgress::lineWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DCircleProgress::mouseEntered()","Funname":"DCircleProgress::mouseEntered","Returntype":"void","Args":""},{"Uniquefunname":"void DCircleProgress::mouseLeaved()","Funname":"DCircleProgress::mouseLeaved","Returntype":"void","Args":""},{"Uniquefunname":"void DCircleProgress::mouseReleaseEvent(QMouseEvent * e)","Funname":"DCircleProgress::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * e"},{"Uniquefunname":"void DCircleProgress::paintEvent(QPaintEvent * e)","Funname":"DCircleProgress::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void DCircleProgress::setBackgroundColor(const QColor \u0026 color)","Funname":"DCircleProgress::setBackgroundColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void DCircleProgress::setChunkColor(const QColor \u0026 color)","Funname":"DCircleProgress::setChunkColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void DCircleProgress::setLineWidth(const int width)","Funname":"DCircleProgress::setLineWidth","Returntype":"void","Args":"const int width"},{"Uniquefunname":"void DCircleProgress::setText(const QString \u0026 text)","Funname":"DCircleProgress::setText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DCircleProgress::setValue(int value)","Funname":"DCircleProgress::setValue","Returntype":"void","Args":"int value"},{"Uniquefunname":"const QString DCircleProgress::text() cons)","Funname":"DCircleProgress::text","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"QLabel * DCircleProgress::topLabel()","Funname":"DCircleProgress::topLabel","Returntype":"QLabel *","Args":""},{"Uniquefunname":"int DCircleProgress::value() cons)","Funname":"DCircleProgress::value","Returntype":"int","Args":") cons"},{"Uniquefunname":"Q_OBJECT Q_PROPERTY(QColor backgroundColor READ backgroundColor WRITE setBackgroundColor DESIGNABLE true)","Funname":"Q_PROPERTY","Returntype":"Q_OBJECT","Args":"QColor backgroundColor READ backgroundColor WRITE setBackgroundColor DESIGNABLE true"},{"Uniquefunname":"const QColor backgroundColor() cons)","Funname":"backgroundColor","Returntype":"const QColor","Args":") cons"},{"Uniquefunname":"QLabel * bottomLabel()","Funname":"bottomLabel","Returntype":"QLabel *","Args":""},{"Uniquefunname":"const QColor chunkColor() cons)","Funname":"chunkColor","Returntype":"const QColor","Args":") cons"},{"Uniquefunname":"void enterEvent(QEvent * e)","Funname":"enterEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"void leaveEvent(QEvent * e)","Funname":"leaveEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"int lineWidth() cons)","Funname":"lineWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"void mouseEntered()","Funname":"mouseEntered","Returntype":"void","Args":""},{"Uniquefunname":"void mouseLeaved()","Funname":"mouseLeaved","Returntype":"void","Args":""},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * e)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * e"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void setBackgroundColor(const QColor \u0026 color)","Funname":"setBackgroundColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void setChunkColor(const QColor \u0026 color)","Funname":"setChunkColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void setLineWidth(const int width)","Funname":"setLineWidth","Returntype":"void","Args":"const int width"},{"Uniquefunname":"void setText(const QString \u0026 text)","Funname":"setText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void setValue(int value)","Funname":"setValue","Returntype":"void","Args":"int value"},{"Uniquefunname":"const QString text() cons)","Funname":"text","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"QLabel * topLabel()","Funname":"topLabel","Returntype":"QLabel *","Args":""},{"Uniquefunname":"int value() cons)","Funname":"value","Returntype":"int","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DCIRCLEPROGRESS_H"]}]}
{"Filepath":"src/widgets/dclipeffectwidget.h","Functions":[{"Uniquefunname":" DClipEffectWidget(QWidget * parent)","Funname":"DClipEffectWidget","Returntype":"","Args":"QWidget * parent"},{"Uniquefunname":" DClipEffectWidget::DClipEffectWidget(QWidget * parent)","Funname":"DClipEffectWidget::DClipEffectWidget","Returntype":"","Args":"QWidget * parent"},{"Uniquefunname":"QPainterPath DClipEffectWidget::clipPath() cons)","Funname":"DClipEffectWidget::clipPath","Returntype":"QPainterPath","Args":") cons"},{"Uniquefunname":"void DClipEffectWidget::clipPathChanged(QPainterPath clipPath)","Funname":"DClipEffectWidget::clipPathChanged","Returntype":"void","Args":"QPainterPath clipPath"},{"Uniquefunname":"bool DClipEffectWidget::eventFilter(QObject * watched,QEvent * event)","Funname":"DClipEffectWidget::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void DClipEffectWidget::hideEvent(QHideEvent * event)","Funname":"DClipEffectWidget::hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"QMargins DClipEffectWidget::margins() cons)","Funname":"DClipEffectWidget::margins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void DClipEffectWidget::paintEvent(QPaintEvent * event)","Funname":"DClipEffectWidget::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DClipEffectWidget::resizeEvent(QResizeEvent * event)","Funname":"DClipEffectWidget::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DClipEffectWidget::setClipPath(const QPainterPath \u0026 path)","Funname":"DClipEffectWidget::setClipPath","Returntype":"void","Args":"const QPainterPath \u0026 path"},{"Uniquefunname":"void DClipEffectWidget::setMargins(QMargins margins)","Funname":"DClipEffectWidget::setMargins","Returntype":"void","Args":"QMargins margins"},{"Uniquefunname":"void DClipEffectWidget::showEvent(QShowEvent * event)","Funname":"DClipEffectWidget::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QPainterPath clipPath() cons)","Funname":"clipPath","Returntype":"QPainterPath","Args":") cons"},{"Uniquefunname":"void clipPathChanged(QPainterPath clipPath)","Funname":"clipPathChanged","Returntype":"void","Args":"QPainterPath clipPath"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void hideEvent(QHideEvent * event)","Funname":"hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"QMargins margins() cons)","Funname":"margins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void setClipPath(const QPainterPath \u0026 path)","Funname":"setClipPath","Returntype":"void","Args":"const QPainterPath \u0026 path"},{"Uniquefunname":"void setMargins(QMargins margins)","Funname":"setMargins","Returntype":"void","Args":"QMargins margins"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"}],"Records":[{"Name":"macro","Fields":["DCLIPEFFECTWIDGET_H"]}]}
{"Filepath":"src/widgets/dcoloredprogressbar.h","Functions":[{"Uniquefunname":" DColoredProgressBar(QWidget * parent=nullptr)","Funname":"DColoredProgressBar","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DColoredProgressBar::DColoredProgressBar(QWidget * parent=nullptr)","Funname":"DColoredProgressBar::DColoredProgressBar","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DColoredProgressBar::addThreshold(int threshold,QBrush brush)","Funname":"DColoredProgressBar::addThreshold","Returntype":"void","Args":"int threshold,QBrush brush"},{"Uniquefunname":"void DColoredProgressBar::paintEvent(QPaintEvent *)","Funname":"DColoredProgressBar::paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void DColoredProgressBar::removeThreshold(int threshold)","Funname":"DColoredProgressBar::removeThreshold","Returntype":"void","Args":"int threshold"},{"Uniquefunname":"QList\u003cint\u003e DColoredProgressBar::thresholds() cons)","Funname":"DColoredProgressBar::thresholds","Returntype":"QList\u003cint\u003e","Args":") cons"},{"Uniquefunname":"void addThreshold(int threshold,QBrush brush)","Funname":"addThreshold","Returntype":"void","Args":"int threshold,QBrush brush"},{"Uniquefunname":"void paintEvent(QPaintEvent *)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void removeThreshold(int threshold)","Funname":"removeThreshold","Returntype":"void","Args":"int threshold"},{"Uniquefunname":"QList\u003cint\u003e thresholds() cons)","Funname":"thresholds","Returntype":"QList\u003cint\u003e","Args":") cons"}],"Records":null}
{"Filepath":"src/widgets/dcommandlinkbutton.h","Functions":[{"Uniquefunname":" DCommandLinkButton(const QString text,QWidget * parent=nullptr)","Funname":"DCommandLinkButton","Returntype":"","Args":"const QString text,QWidget * parent=nullptr"},{"Uniquefunname":" DCommandLinkButton::DCommandLinkButton(const QString text,QWidget * parent=nullptr)","Funname":"DCommandLinkButton::DCommandLinkButton","Returntype":"","Args":"const QString text,QWidget * parent=nullptr"},{"Uniquefunname":"void DCommandLinkButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DCommandLinkButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"void DCommandLinkButton::paintEvent(QPaintEvent * e)","Funname":"DCommandLinkButton::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"QSize DCommandLinkButton::sizeHint() cons)","Funname":"DCommandLinkButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DCOMMANDLINKBUTTON_H"]}]}
{"Filepath":"src/widgets/dconstants.h","Functions":null,"Records":[{"Name":"macro","Fields":["DCONSTANTS_H"]}]}
{"Filepath":"src/widgets/dcrumbedit.h","Functions":[{"Uniquefunname":" DCrumbEdit(QWidget * parent=0)","Funname":"DCrumbEdit","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DCrumbEdit::DCrumbEdit(QWidget * parent=0)","Funname":"DCrumbEdit::DCrumbEdit","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"bool DCrumbEdit::appendCrumb(const DCrumbTextFormat \u0026 format)","Funname":"DCrumbEdit::appendCrumb","Returntype":"bool","Args":"const DCrumbTextFormat \u0026 format"},{"Uniquefunname":"bool DCrumbEdit::appendCrumb(const QString \u0026 text)","Funname":"DCrumbEdit::appendCrumb","Returntype":"bool","Args":"const QString \u0026 text"},{"Uniquefunname":"bool DCrumbEdit::canInsertFromMimeData(const QMimeData * source) cons)","Funname":"DCrumbEdit::canInsertFromMimeData","Returntype":"bool","Args":"const QMimeData * source) cons"},{"Uniquefunname":"bool DCrumbEdit::containCrumb(const QString \u0026 text) cons)","Funname":"DCrumbEdit::containCrumb","Returntype":"bool","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"QMimeData * DCrumbEdit::createMimeDataFromSelection() cons)","Funname":"DCrumbEdit::createMimeDataFromSelection","Returntype":"QMimeData *","Args":") cons"},{"Uniquefunname":"QStringList DCrumbEdit::crumbList() cons)","Funname":"DCrumbEdit::crumbList","Returntype":"QStringList","Args":") cons"},{"Uniquefunname":"void DCrumbEdit::crumbListChanged()","Funname":"DCrumbEdit::crumbListChanged","Returntype":"void","Args":""},{"Uniquefunname":"int DCrumbEdit::crumbRadius() cons)","Funname":"DCrumbEdit::crumbRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool DCrumbEdit::crumbReadOnly() cons)","Funname":"DCrumbEdit::crumbReadOnly","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DCrumbEdit::crumbRemoved(const QString \u0026 text)","Funname":"DCrumbEdit::crumbRemoved","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"DCrumbTextFormat DCrumbEdit::crumbTextFormat(const QString \u0026 text) cons)","Funname":"DCrumbEdit::crumbTextFormat","Returntype":"DCrumbTextFormat","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"bool DCrumbEdit::dualClickMakeCrumb() cons)","Funname":"DCrumbEdit::dualClickMakeCrumb","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DCrumbEdit::event(QEvent * e)","Funname":"DCrumbEdit::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"void DCrumbEdit::focusOutEvent(QFocusEvent * event)","Funname":"DCrumbEdit::focusOutEvent","Returntype":"void","Args":"QFocusEvent * event"},{"Uniquefunname":"bool DCrumbEdit::insertCrumb(const DCrumbTextFormat \u0026 format,int pos=-1)","Funname":"DCrumbEdit::insertCrumb","Returntype":"bool","Args":"const DCrumbTextFormat \u0026 format,int pos=-1"},{"Uniquefunname":"bool DCrumbEdit::insertCrumb(const QString \u0026 text,int pos=-1)","Funname":"DCrumbEdit::insertCrumb","Returntype":"bool","Args":"const QString \u0026 text,int pos=-1"},{"Uniquefunname":"void DCrumbEdit::insertFromMimeData(const QMimeData * source)","Funname":"DCrumbEdit::insertFromMimeData","Returntype":"void","Args":"const QMimeData * source"},{"Uniquefunname":"void DCrumbEdit::keyPressEvent(QKeyEvent * event)","Funname":"DCrumbEdit::keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"DCrumbTextFormat DCrumbEdit::makeTextFormat() cons)","Funname":"DCrumbEdit::makeTextFormat","Returntype":"DCrumbTextFormat","Args":") cons"},{"Uniquefunname":"DCrumbTextFormat DCrumbEdit::makeTextFormat(CrumbType type) cons)","Funname":"DCrumbEdit::makeTextFormat","Returntype":"DCrumbTextFormat","Args":"CrumbType type) cons"},{"Uniquefunname":"void DCrumbEdit::mouseDoubleClickEvent(QMouseEvent * event)","Funname":"DCrumbEdit::mouseDoubleClickEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DCrumbEdit::paintEvent(QPaintEvent * event)","Funname":"DCrumbEdit::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DCrumbEdit::setCrumbRadius(int crumbRadius)","Funname":"DCrumbEdit::setCrumbRadius","Returntype":"void","Args":"int crumbRadius"},{"Uniquefunname":"void DCrumbEdit::setCrumbReadOnly(bool crumbReadOnly)","Funname":"DCrumbEdit::setCrumbReadOnly","Returntype":"void","Args":"bool crumbReadOnly"},{"Uniquefunname":"void DCrumbEdit::setDualClickMakeCrumb(bool flag)","Funname":"DCrumbEdit::setDualClickMakeCrumb","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void DCrumbEdit::setSplitter(const QString \u0026 splitter)","Funname":"DCrumbEdit::setSplitter","Returntype":"void","Args":"const QString \u0026 splitter"},{"Uniquefunname":"QString DCrumbEdit::splitter() cons)","Funname":"DCrumbEdit::splitter","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DCrumbTextFormat()","Funname":"DCrumbTextFormat","Returntype":"","Args":""},{"Uniquefunname":" DCrumbTextFormat(int objectType)","Funname":"DCrumbTextFormat","Returntype":"","Args":"int objectType"},{"Uniquefunname":" DCrumbTextFormat(const QTextFormat \u0026 fmt)","Funname":"DCrumbTextFormat","Returntype":"","Args":"const QTextFormat \u0026 fmt"},{"Uniquefunname":" DCrumbTextFormat::DCrumbTextFormat()","Funname":"DCrumbTextFormat::DCrumbTextFormat","Returntype":"","Args":""},{"Uniquefunname":" DCrumbTextFormat::DCrumbTextFormat(int objectType)","Funname":"DCrumbTextFormat::DCrumbTextFormat","Returntype":"","Args":"int objectType"},{"Uniquefunname":" DCrumbTextFormat::DCrumbTextFormat(const QTextFormat \u0026 fmt)","Funname":"DCrumbTextFormat::DCrumbTextFormat","Returntype":"","Args":"const QTextFormat \u0026 fmt"},{"Uniquefunname":"QBrush DCrumbTextFormat::background() cons)","Funname":"DCrumbTextFormat::background","Returntype":"QBrush","Args":") cons"},{"Uniquefunname":"int DCrumbTextFormat::backgroundRadius() cons)","Funname":"DCrumbTextFormat::backgroundRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DCrumbTextFormat::setBackground(const QBrush \u0026 background)","Funname":"DCrumbTextFormat::setBackground","Returntype":"void","Args":"const QBrush \u0026 background"},{"Uniquefunname":"void DCrumbTextFormat::setBackgroundRadius(int radius)","Funname":"DCrumbTextFormat::setBackgroundRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void DCrumbTextFormat::setTagColor(const QColor \u0026 color)","Funname":"DCrumbTextFormat::setTagColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void DCrumbTextFormat::setText(const QString \u0026 text)","Funname":"DCrumbTextFormat::setText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DCrumbTextFormat::setTextColor(const QColor \u0026 color)","Funname":"DCrumbTextFormat::setTextColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"QColor DCrumbTextFormat::tagColor() cons)","Funname":"DCrumbTextFormat::tagColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QString DCrumbTextFormat::text() cons)","Funname":"DCrumbTextFormat::text","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QColor DCrumbTextFormat::textColor() cons)","Funname":"DCrumbTextFormat::textColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"bool appendCrumb(const DCrumbTextFormat \u0026 format)","Funname":"appendCrumb","Returntype":"bool","Args":"const DCrumbTextFormat \u0026 format"},{"Uniquefunname":"bool appendCrumb(const QString \u0026 text)","Funname":"appendCrumb","Returntype":"bool","Args":"const QString \u0026 text"},{"Uniquefunname":"QBrush background() cons)","Funname":"background","Returntype":"QBrush","Args":") cons"},{"Uniquefunname":"int backgroundRadius() cons)","Funname":"backgroundRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool canInsertFromMimeData(const QMimeData * source) cons)","Funname":"canInsertFromMimeData","Returntype":"bool","Args":"const QMimeData * source) cons"},{"Uniquefunname":"bool containCrumb(const QString \u0026 text) cons)","Funname":"containCrumb","Returntype":"bool","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"QMimeData * createMimeDataFromSelection() cons)","Funname":"createMimeDataFromSelection","Returntype":"QMimeData *","Args":") cons"},{"Uniquefunname":"QStringList crumbList() cons)","Funname":"crumbList","Returntype":"QStringList","Args":") cons"},{"Uniquefunname":"void crumbListChanged()","Funname":"crumbListChanged","Returntype":"void","Args":""},{"Uniquefunname":"int crumbRadius() cons)","Funname":"crumbRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool crumbReadOnly() cons)","Funname":"crumbReadOnly","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void crumbRemoved(const QString \u0026 text)","Funname":"crumbRemoved","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"DCrumbTextFormat crumbTextFormat(const QString \u0026 text) cons)","Funname":"crumbTextFormat","Returntype":"DCrumbTextFormat","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"bool dualClickMakeCrumb() cons)","Funname":"dualClickMakeCrumb","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"void focusOutEvent(QFocusEvent * event)","Funname":"focusOutEvent","Returntype":"void","Args":"QFocusEvent * event"},{"Uniquefunname":"bool insertCrumb(const DCrumbTextFormat \u0026 format,int pos=-1)","Funname":"insertCrumb","Returntype":"bool","Args":"const DCrumbTextFormat \u0026 format,int pos=-1"},{"Uniquefunname":"bool insertCrumb(const QString \u0026 text,int pos=-1)","Funname":"insertCrumb","Returntype":"bool","Args":"const QString \u0026 text,int pos=-1"},{"Uniquefunname":"void insertFromMimeData(const QMimeData * source)","Funname":"insertFromMimeData","Returntype":"void","Args":"const QMimeData * source"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * event)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"DCrumbTextFormat makeTextFormat() cons)","Funname":"makeTextFormat","Returntype":"DCrumbTextFormat","Args":") cons"},{"Uniquefunname":"DCrumbTextFormat makeTextFormat(CrumbType type) cons)","Funname":"makeTextFormat","Returntype":"DCrumbTextFormat","Args":"CrumbType type) cons"},{"Uniquefunname":"void mouseDoubleClickEvent(QMouseEvent * event)","Funname":"mouseDoubleClickEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setBackground(const QBrush \u0026 background)","Funname":"setBackground","Returntype":"void","Args":"const QBrush \u0026 background"},{"Uniquefunname":"void setBackgroundRadius(int radius)","Funname":"setBackgroundRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void setCrumbRadius(int crumbRadius)","Funname":"setCrumbRadius","Returntype":"void","Args":"int crumbRadius"},{"Uniquefunname":"void setCrumbReadOnly(bool crumbReadOnly)","Funname":"setCrumbReadOnly","Returntype":"void","Args":"bool crumbReadOnly"},{"Uniquefunname":"void setDualClickMakeCrumb(bool flag)","Funname":"setDualClickMakeCrumb","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void setSplitter(const QString \u0026 splitter)","Funname":"setSplitter","Returntype":"void","Args":"const QString \u0026 splitter"},{"Uniquefunname":"void setTagColor(const QColor \u0026 color)","Funname":"setTagColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void setText(const QString \u0026 text)","Funname":"setText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void setTextColor(const QColor \u0026 color)","Funname":"setTextColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"QString splitter() cons)","Funname":"splitter","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QColor tagColor() cons)","Funname":"tagColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QString text() cons)","Funname":"text","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QColor textColor() cons)","Funname":"textColor","Returntype":"QColor","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DCRUMBEDIT_H"]},{"Name":"enum:DCrumbEdit::CrumbType","Fields":["DCrumbEdit::black","DCrumbEdit::blue","DCrumbEdit::cyan","DCrumbEdit::darkBlue","DCrumbEdit::darkCyan","DCrumbEdit::darkGray","DCrumbEdit::darkGreen","DCrumbEdit::darkMagenta","DCrumbEdit::darkRed","DCrumbEdit::darkYellow","DCrumbEdit::gray","DCrumbEdit::green","DCrumbEdit::lightGray","DCrumbEdit::magenta","DCrumbEdit::red","DCrumbEdit::white","DCrumbEdit::yellow","black","blue","cyan","darkBlue","darkCyan","darkGray","darkGreen","darkMagenta","darkRed","darkYellow","gray","green","lightGray","magenta","red","white","yellow"]}]}
{"Filepath":"src/widgets/ddialog.h","Functions":[{"Uniquefunname":" DDialog(DDialogPrivate \u0026 dd,QWidget * parent=0)","Funname":"DDialog","Returntype":"","Args":"DDialogPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":" DDialog(QWidget * parent=nullptr)","Funname":"DDialog","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DDialog(const QString \u0026 title,const QString \u0026 message,QWidget * parent=0)","Funname":"DDialog","Returntype":"","Args":"const QString \u0026 title,const QString \u0026 message,QWidget * parent=0"},{"Uniquefunname":" DDialog::DDialog(DDialogPrivate \u0026 dd,QWidget * parent=0)","Funname":"DDialog::DDialog","Returntype":"","Args":"DDialogPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":" DDialog::DDialog(QWidget * parent=nullptr)","Funname":"DDialog::DDialog","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DDialog::DDialog(const QString \u0026 title,const QString \u0026 message,QWidget * parent=0)","Funname":"DDialog::DDialog","Returntype":"","Args":"const QString \u0026 title,const QString \u0026 message,QWidget * parent=0"},{"Uniquefunname":"int DDialog::addButton(const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal)","Funname":"DDialog::addButton","Returntype":"int","Args":"const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal"},{"Uniquefunname":"int DDialog::addButtons(const QStringList \u0026 text)","Funname":"DDialog::addButtons","Returntype":"int","Args":"const QStringList \u0026 text"},{"Uniquefunname":"void DDialog::addContent(QWidget * widget,Qt::Alignment alignment={})","Funname":"DDialog::addContent","Returntype":"void","Args":"QWidget * widget,Qt::Alignment alignment={}"},{"Uniquefunname":"void DDialog::addSpacing(int spacing)","Funname":"DDialog::addSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void DDialog::buttonClicked(int index,const QString \u0026 text)","Funname":"DDialog::buttonClicked","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"int DDialog::buttonCount() cons)","Funname":"DDialog::buttonCount","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DDialog::childEvent(QChildEvent * event)","Funname":"DDialog::childEvent","Returntype":"void","Args":"QChildEvent * event"},{"Uniquefunname":"void DDialog::clearButtons()","Funname":"DDialog::clearButtons","Returntype":"void","Args":""},{"Uniquefunname":"void DDialog::clearContents(bool isDelete=true)","Funname":"DDialog::clearContents","Returntype":"void","Args":"bool isDelete=true"},{"Uniquefunname":"void DDialog::clearSpacing()","Funname":"DDialog::clearSpacing","Returntype":"void","Args":""},{"Uniquefunname":"bool DDialog::closeButtonVisible() cons)","Funname":"DDialog::closeButtonVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DDialog::closeEvent(QCloseEvent * event)","Funname":"DDialog::closeEvent","Returntype":"void","Args":"QCloseEvent * event"},{"Uniquefunname":"void DDialog::closed()","Funname":"DDialog::closed","Returntype":"void","Args":""},{"Uniquefunname":"int DDialog::contentCount() cons)","Funname":"DDialog::contentCount","Returntype":"int","Args":") cons"},{"Uniquefunname":"QMargins DDialog::contentLayoutContentsMargins() cons)","Funname":"DDialog::contentLayoutContentsMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"bool DDialog::eventFilter(QObject * watched,QEvent * event)","Funname":"DDialog::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"int DDialog::exec()","Funname":"DDialog::exec","Returntype":"int","Args":""},{"Uniquefunname":"QAbstractButton * DDialog::getButton(int index) cons)","Funname":"DDialog::getButton","Returntype":"QAbstractButton *","Args":"int index) cons"},{"Uniquefunname":"int DDialog::getButtonIndexByText(const QString \u0026 text) cons)","Funname":"DDialog::getButtonIndexByText","Returntype":"int","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"QList\u003cQAbstractButton * \u003e DDialog::getButtons() cons)","Funname":"DDialog::getButtons","Returntype":"QList\u003cQAbstractButton * \u003e","Args":") cons"},{"Uniquefunname":"QWidget * DDialog::getContent(int index) cons)","Funname":"DDialog::getContent","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"QList\u003cQWidget * \u003e DDialog::getContents() cons)","Funname":"DDialog::getContents","Returntype":"QList\u003cQWidget * \u003e","Args":") cons"},{"Uniquefunname":"void DDialog::hideEvent(QHideEvent * event)","Funname":"DDialog::hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"QIcon DDialog::icon() cons)","Funname":"DDialog::icon","Returntype":"QIcon","Args":") cons"},{"Uniquefunname":"D_DECL_DEPRECATED QPixmap DDialog::iconPixmap() cons)","Funname":"DDialog::iconPixmap","Returntype":"D_DECL_DEPRECATED QPixmap","Args":") cons"},{"Uniquefunname":"void DDialog::insertButton(int index,QAbstractButton * button,bool isDefault=false)","Funname":"DDialog::insertButton","Returntype":"void","Args":"int index,QAbstractButton * button,bool isDefault=false"},{"Uniquefunname":"void DDialog::insertButton(int index,const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal)","Funname":"DDialog::insertButton","Returntype":"void","Args":"int index,const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal"},{"Uniquefunname":"void DDialog::insertButtons(int index,const QStringList \u0026 text)","Funname":"DDialog::insertButtons","Returntype":"void","Args":"int index,const QStringList \u0026 text"},{"Uniquefunname":"void DDialog::insertContent(int index,QWidget * widget,Qt::Alignment alignment={})","Funname":"DDialog::insertContent","Returntype":"void","Args":"int index,QWidget * widget,Qt::Alignment alignment={}"},{"Uniquefunname":"void DDialog::insertSpacing(int index,int spacing)","Funname":"DDialog::insertSpacing","Returntype":"void","Args":"int index,int spacing"},{"Uniquefunname":"void DDialog::keyPressEvent(QKeyEvent * event)","Funname":"DDialog::keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QString DDialog::message() cons)","Funname":"DDialog::message","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DDialog::messageChanged(QString massage)","Funname":"DDialog::messageChanged","Returntype":"void","Args":"QString massage"},{"Uniquefunname":"bool DDialog::onButtonClickedClose() cons)","Funname":"DDialog::onButtonClickedClose","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DDialog::removeButton(QAbstractButton * button)","Funname":"DDialog::removeButton","Returntype":"void","Args":"QAbstractButton * button"},{"Uniquefunname":"void DDialog::removeButton(int index)","Funname":"DDialog::removeButton","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DDialog::removeButtonByText(const QString \u0026 text)","Funname":"DDialog::removeButtonByText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DDialog::removeContent(QWidget * widget,bool isDelete=true)","Funname":"DDialog::removeContent","Returntype":"void","Args":"QWidget * widget,bool isDelete=true"},{"Uniquefunname":"void DDialog::resizeEvent(QResizeEvent * event)","Funname":"DDialog::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DDialog::setButtonIcon(int index,const QIcon \u0026 icon)","Funname":"DDialog::setButtonIcon","Returntype":"void","Args":"int index,const QIcon \u0026 icon"},{"Uniquefunname":"void DDialog::setButtonText(int index,const QString \u0026 text)","Funname":"DDialog::setButtonText","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"void DDialog::setCloseButtonVisible(bool closeButtonVisible)","Funname":"DDialog::setCloseButtonVisible","Returntype":"void","Args":"bool closeButtonVisible"},{"Uniquefunname":"void DDialog::setContentLayoutContentsMargins(const QMargins \u0026 margins)","Funname":"DDialog::setContentLayoutContentsMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"bool DDialog::setDefaultButton(const QString \u0026 str)","Funname":"DDialog::setDefaultButton","Returntype":"bool","Args":"const QString \u0026 str"},{"Uniquefunname":"bool DDialog::setDefaultButton(int index)","Funname":"DDialog::setDefaultButton","Returntype":"bool","Args":"int index"},{"Uniquefunname":"void DDialog::setDefaultButton(QAbstractButton * button)","Funname":"DDialog::setDefaultButton","Returntype":"void","Args":"QAbstractButton * button"},{"Uniquefunname":"D_DECL_DEPRECATED void DDialog::setIcon(const QIcon \u0026 icon,const QSize \u0026 expectedSize)","Funname":"DDialog::setIcon","Returntype":"D_DECL_DEPRECATED void","Args":"const QIcon \u0026 icon,const QSize \u0026 expectedSize"},{"Uniquefunname":"void DDialog::setIcon(const QIcon \u0026 icon)","Funname":"DDialog::setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"D_DECL_DEPRECATED void DDialog::setIconPixmap(const QPixmap \u0026 iconPixmap)","Funname":"DDialog::setIconPixmap","Returntype":"D_DECL_DEPRECATED void","Args":"const QPixmap \u0026 iconPixmap"},{"Uniquefunname":"void DDialog::setMessage(const QString \u0026 message)","Funname":"DDialog::setMessage","Returntype":"void","Args":"const QString \u0026 message"},{"Uniquefunname":"void DDialog::setOnButtonClickedClose(bool onButtonClickedClose)","Funname":"DDialog::setOnButtonClickedClose","Returntype":"void","Args":"bool onButtonClickedClose"},{"Uniquefunname":"void DDialog::setSpacing(int spacing)","Funname":"DDialog::setSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void DDialog::setTextFormat(Qt::TextFormat textFormat)","Funname":"DDialog::setTextFormat","Returntype":"void","Args":"Qt::TextFormat textFormat"},{"Uniquefunname":"void DDialog::setTitle(const QString \u0026 title)","Funname":"DDialog::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"void DDialog::setWordWrapMessage(bool wordWrap)","Funname":"DDialog::setWordWrapMessage","Returntype":"void","Args":"bool wordWrap"},{"Uniquefunname":"void DDialog::setWordWrapTitle(bool wordWrap)","Funname":"DDialog::setWordWrapTitle","Returntype":"void","Args":"bool wordWrap"},{"Uniquefunname":"void DDialog::showEvent(QShowEvent * event)","Funname":"DDialog::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"void DDialog::sizeChanged(QSize size)","Funname":"DDialog::sizeChanged","Returntype":"void","Args":"QSize size"},{"Uniquefunname":"Qt DDialog::textFormat() cons)","Funname":"DDialog::textFormat","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DDialog::textFormatChanged(Qt::TextFormat textFormat)","Funname":"DDialog::textFormatChanged","Returntype":"void","Args":"Qt::TextFormat textFormat"},{"Uniquefunname":"QString DDialog::title() cons)","Funname":"DDialog::title","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DDialog::titleChanged(QString title)","Funname":"DDialog::titleChanged","Returntype":"void","Args":"QString title"},{"Uniquefunname":"void DDialog::visibleChanged(bool visible)","Funname":"DDialog::visibleChanged","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"int addButton(const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal)","Funname":"addButton","Returntype":"int","Args":"const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal"},{"Uniquefunname":"int addButtons(const QStringList \u0026 text)","Funname":"addButtons","Returntype":"int","Args":"const QStringList \u0026 text"},{"Uniquefunname":"void addContent(QWidget * widget,Qt::Alignment alignment={})","Funname":"addContent","Returntype":"void","Args":"QWidget * widget,Qt::Alignment alignment={}"},{"Uniquefunname":"void addSpacing(int spacing)","Funname":"addSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void buttonClicked(int index,const QString \u0026 text)","Funname":"buttonClicked","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"int buttonCount() cons)","Funname":"buttonCount","Returntype":"int","Args":") cons"},{"Uniquefunname":"void childEvent(QChildEvent * event)","Funname":"childEvent","Returntype":"void","Args":"QChildEvent * event"},{"Uniquefunname":"void clearButtons()","Funname":"clearButtons","Returntype":"void","Args":""},{"Uniquefunname":"void clearContents(bool isDelete=true)","Funname":"clearContents","Returntype":"void","Args":"bool isDelete=true"},{"Uniquefunname":"void clearSpacing()","Funname":"clearSpacing","Returntype":"void","Args":""},{"Uniquefunname":"bool closeButtonVisible() cons)","Funname":"closeButtonVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void closeEvent(QCloseEvent * event)","Funname":"closeEvent","Returntype":"void","Args":"QCloseEvent * event"},{"Uniquefunname":"void closed()","Funname":"closed","Returntype":"void","Args":""},{"Uniquefunname":"int contentCount() cons)","Funname":"contentCount","Returntype":"int","Args":") cons"},{"Uniquefunname":"QMargins contentLayoutContentsMargins() cons)","Funname":"contentLayoutContentsMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"int exec()","Funname":"exec","Returntype":"int","Args":""},{"Uniquefunname":"QAbstractButton * getButton(int index) cons)","Funname":"getButton","Returntype":"QAbstractButton *","Args":"int index) cons"},{"Uniquefunname":"int getButtonIndexByText(const QString \u0026 text) cons)","Funname":"getButtonIndexByText","Returntype":"int","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"QList\u003cQAbstractButton * \u003e getButtons() cons)","Funname":"getButtons","Returntype":"QList\u003cQAbstractButton * \u003e","Args":") cons"},{"Uniquefunname":"QWidget * getContent(int index) cons)","Funname":"getContent","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"QList\u003cQWidget * \u003e getContents() cons)","Funname":"getContents","Returntype":"QList\u003cQWidget * \u003e","Args":") cons"},{"Uniquefunname":"void hideEvent(QHideEvent * event)","Funname":"hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"QIcon icon() cons)","Funname":"icon","Returntype":"QIcon","Args":") cons"},{"Uniquefunname":"D_DECL_DEPRECATED QPixmap iconPixmap() cons)","Funname":"iconPixmap","Returntype":"D_DECL_DEPRECATED QPixmap","Args":") cons"},{"Uniquefunname":"void insertButton(int index,QAbstractButton * button,bool isDefault=false)","Funname":"insertButton","Returntype":"void","Args":"int index,QAbstractButton * button,bool isDefault=false"},{"Uniquefunname":"void insertButton(int index,const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal)","Funname":"insertButton","Returntype":"void","Args":"int index,const QString \u0026 text,bool isDefault=false,ButtonType type=ButtonNormal"},{"Uniquefunname":"void insertButtons(int index,const QStringList \u0026 text)","Funname":"insertButtons","Returntype":"void","Args":"int index,const QStringList \u0026 text"},{"Uniquefunname":"void insertContent(int index,QWidget * widget,Qt::Alignment alignment={})","Funname":"insertContent","Returntype":"void","Args":"int index,QWidget * widget,Qt::Alignment alignment={}"},{"Uniquefunname":"void insertSpacing(int index,int spacing)","Funname":"insertSpacing","Returntype":"void","Args":"int index,int spacing"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * event)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QString message() cons)","Funname":"message","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void messageChanged(QString massage)","Funname":"messageChanged","Returntype":"void","Args":"QString massage"},{"Uniquefunname":"bool onButtonClickedClose() cons)","Funname":"onButtonClickedClose","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void removeButton(QAbstractButton * button)","Funname":"removeButton","Returntype":"void","Args":"QAbstractButton * button"},{"Uniquefunname":"void removeButton(int index)","Funname":"removeButton","Returntype":"void","Args":"int index"},{"Uniquefunname":"void removeButtonByText(const QString \u0026 text)","Funname":"removeButtonByText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void removeContent(QWidget * widget,bool isDelete=true)","Funname":"removeContent","Returntype":"void","Args":"QWidget * widget,bool isDelete=true"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void setButtonIcon(int index,const QIcon \u0026 icon)","Funname":"setButtonIcon","Returntype":"void","Args":"int index,const QIcon \u0026 icon"},{"Uniquefunname":"void setButtonText(int index,const QString \u0026 text)","Funname":"setButtonText","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"void setCloseButtonVisible(bool closeButtonVisible)","Funname":"setCloseButtonVisible","Returntype":"void","Args":"bool closeButtonVisible"},{"Uniquefunname":"void setContentLayoutContentsMargins(const QMargins \u0026 margins)","Funname":"setContentLayoutContentsMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"bool setDefaultButton(const QString \u0026 str)","Funname":"setDefaultButton","Returntype":"bool","Args":"const QString \u0026 str"},{"Uniquefunname":"bool setDefaultButton(int index)","Funname":"setDefaultButton","Returntype":"bool","Args":"int index"},{"Uniquefunname":"void setDefaultButton(QAbstractButton * button)","Funname":"setDefaultButton","Returntype":"void","Args":"QAbstractButton * button"},{"Uniquefunname":"D_DECL_DEPRECATED void setIcon(const QIcon \u0026 icon,const QSize \u0026 expectedSize)","Funname":"setIcon","Returntype":"D_DECL_DEPRECATED void","Args":"const QIcon \u0026 icon,const QSize \u0026 expectedSize"},{"Uniquefunname":"void setIcon(const QIcon \u0026 icon)","Funname":"setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"D_DECL_DEPRECATED void setIconPixmap(const QPixmap \u0026 iconPixmap)","Funname":"setIconPixmap","Returntype":"D_DECL_DEPRECATED void","Args":"const QPixmap \u0026 iconPixmap"},{"Uniquefunname":"void setMessage(const QString \u0026 message)","Funname":"setMessage","Returntype":"void","Args":"const QString \u0026 message"},{"Uniquefunname":"void setOnButtonClickedClose(bool onButtonClickedClose)","Funname":"setOnButtonClickedClose","Returntype":"void","Args":"bool onButtonClickedClose"},{"Uniquefunname":"void setSpacing(int spacing)","Funname":"setSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void setTextFormat(Qt::TextFormat textFormat)","Funname":"setTextFormat","Returntype":"void","Args":"Qt::TextFormat textFormat"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"void setWordWrapMessage(bool wordWrap)","Funname":"setWordWrapMessage","Returntype":"void","Args":"bool wordWrap"},{"Uniquefunname":"void setWordWrapTitle(bool wordWrap)","Funname":"setWordWrapTitle","Returntype":"void","Args":"bool wordWrap"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"void sizeChanged(QSize size)","Funname":"sizeChanged","Returntype":"void","Args":"QSize size"},{"Uniquefunname":"Qt textFormat() cons)","Funname":"textFormat","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void textFormatChanged(Qt::TextFormat textFormat)","Funname":"textFormatChanged","Returntype":"void","Args":"Qt::TextFormat textFormat"},{"Uniquefunname":"QString title() cons)","Funname":"title","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void titleChanged(QString title)","Funname":"titleChanged","Returntype":"void","Args":"QString title"},{"Uniquefunname":"void visibleChanged(bool visible)","Funname":"visibleChanged","Returntype":"void","Args":"bool visible"}],"Records":[{"Name":"enum:DDialog::ButtonType","Fields":["ButtonNormal","ButtonRecommend","ButtonWarning","DDialog::ButtonNormal","DDialog::ButtonRecommend","DDialog::ButtonWarning"]},{"Name":"macro","Fields":["DDIALOG_H"]}]}
{"Filepath":"src/widgets/ddialogclosebutton.h","Functions":[{"Uniquefunname":" DDialogCloseButton(QWidget * parent=nullptr)","Funname":"DDialogCloseButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DDialogCloseButton::DDialogCloseButton(QWidget * parent=nullptr)","Funname":"DDialogCloseButton::DDialogCloseButton","Returntype":"","Args":"QWidget * parent=nullptr"}],"Records":[{"Name":"macro","Fields":["DDIALOGCLOSEBUTTON_H"]}]}
{"Filepath":"src/widgets/ddrawer.h","Functions":[{"Uniquefunname":" DDrawer(DDrawerPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DDrawer","Returntype":"","Args":"DDrawerPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DDrawer(QWidget * parent=nullptr)","Funname":"DDrawer","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DDrawer::DDrawer(DDrawerPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DDrawer::DDrawer","Returntype":"","Args":"DDrawerPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DDrawer::DDrawer(QWidget * parent=nullptr)","Funname":"DDrawer::DDrawer","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool DDrawer::expand() cons)","Funname":"DDrawer::expand","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QWidget * DDrawer::getContent() cons)","Funname":"DDrawer::getContent","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void DDrawer::resizeEvent(QResizeEvent * e)","Funname":"DDrawer::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DDrawer::setAnimationDuration(int duration)","Funname":"DDrawer::setAnimationDuration","Returntype":"void","Args":"int duration"},{"Uniquefunname":"void DDrawer::setAnimationEasingCurve(QEasingCurve curve)","Funname":"DDrawer::setAnimationEasingCurve","Returntype":"void","Args":"QEasingCurve curve"},{"Uniquefunname":"void DDrawer::setContent(QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter)","Funname":"DDrawer::setContent","Returntype":"void","Args":"QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter"},{"Uniquefunname":"void DDrawer::setExpand(bool value)","Funname":"DDrawer::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DDrawer::setExpandedSeparatorVisible(bool arg)","Funname":"DDrawer::setExpandedSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void DDrawer::setHeader(QWidget * header)","Funname":"DDrawer::setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void DDrawer::setHeaderHeight(int height)","Funname":"DDrawer::setHeaderHeight","Returntype":"void","Args":"int height"},{"Uniquefunname":"void DDrawer::setSeparatorVisible(bool arg)","Funname":"DDrawer::setSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void DDrawer::sizeChanged(QSize s)","Funname":"DDrawer::sizeChanged","Returntype":"void","Args":"QSize s"},{"Uniquefunname":"bool expand() cons)","Funname":"expand","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QWidget * getContent() cons)","Funname":"getContent","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void setAnimationDuration(int duration)","Funname":"setAnimationDuration","Returntype":"void","Args":"int duration"},{"Uniquefunname":"void setAnimationEasingCurve(QEasingCurve curve)","Funname":"setAnimationEasingCurve","Returntype":"void","Args":"QEasingCurve curve"},{"Uniquefunname":"void setContent(QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter)","Funname":"setContent","Returntype":"void","Args":"QWidget * content,Qt::Alignment alignment=Qt::AlignHCenter"},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setExpandedSeparatorVisible(bool arg)","Funname":"setExpandedSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void setHeader(QWidget * header)","Funname":"setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void setHeaderHeight(int height)","Funname":"setHeaderHeight","Returntype":"void","Args":"int height"},{"Uniquefunname":"void setSeparatorVisible(bool arg)","Funname":"setSeparatorVisible","Returntype":"void","Args":"bool arg"},{"Uniquefunname":"void sizeChanged(QSize s)","Funname":"sizeChanged","Returntype":"void","Args":"QSize s"}],"Records":[{"Name":"macro","Fields":["DDRAWER_H"]}]}
{"Filepath":"src/widgets/ddrawergroup.h","Functions":[{"Uniquefunname":" DDrawerGroup(QObject * parent=0)","Funname":"DDrawerGroup","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DDrawerGroup::DDrawerGroup(QObject * parent=0)","Funname":"DDrawerGroup::DDrawerGroup","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"void DDrawerGroup::addExpand(DDrawer * expand,int id=-1)","Funname":"DDrawerGroup::addExpand","Returntype":"void","Args":"DDrawer * expand,int id=-1"},{"Uniquefunname":"DDrawer * DDrawerGroup::checkedExpand() cons)","Funname":"DDrawerGroup::checkedExpand","Returntype":"DDrawer *","Args":") cons"},{"Uniquefunname":"int DDrawerGroup::checkedId() cons)","Funname":"DDrawerGroup::checkedId","Returntype":"int","Args":") cons"},{"Uniquefunname":"DDrawer * DDrawerGroup::expand(int id) cons)","Funname":"DDrawerGroup::expand","Returntype":"DDrawer *","Args":"int id) cons"},{"Uniquefunname":"QList\u003cDDrawer * \u003e DDrawerGroup::expands() cons)","Funname":"DDrawerGroup::expands","Returntype":"QList\u003cDDrawer * \u003e","Args":") cons"},{"Uniquefunname":"int DDrawerGroup::id(DDrawer * expand) cons)","Funname":"DDrawerGroup::id","Returntype":"int","Args":"DDrawer * expand) cons"},{"Uniquefunname":"void DDrawerGroup::onExpandChanged(bool v)","Funname":"DDrawerGroup::onExpandChanged","Returntype":"void","Args":"bool v"},{"Uniquefunname":"void DDrawerGroup::removeExpand(DDrawer * expand)","Funname":"DDrawerGroup::removeExpand","Returntype":"void","Args":"DDrawer * expand"},{"Uniquefunname":"void DDrawerGroup::setId(DDrawer * expand,int id)","Funname":"DDrawerGroup::setId","Returntype":"void","Args":"DDrawer * expand,int id"},{"Uniquefunname":"void addExpand(DDrawer * expand,int id=-1)","Funname":"addExpand","Returntype":"void","Args":"DDrawer * expand,int id=-1"},{"Uniquefunname":"DDrawer * checkedExpand() cons)","Funname":"checkedExpand","Returntype":"DDrawer *","Args":") cons"},{"Uniquefunname":"int checkedId() cons)","Funname":"checkedId","Returntype":"int","Args":") cons"},{"Uniquefunname":"DDrawer * expand(int id) cons)","Funname":"expand","Returntype":"DDrawer *","Args":"int id) cons"},{"Uniquefunname":"QList\u003cDDrawer * \u003e expands() cons)","Funname":"expands","Returntype":"QList\u003cDDrawer * \u003e","Args":") cons"},{"Uniquefunname":"int id(DDrawer * expand) cons)","Funname":"id","Returntype":"int","Args":"DDrawer * expand) cons"},{"Uniquefunname":"void onExpandChanged(bool v)","Funname":"onExpandChanged","Returntype":"void","Args":"bool v"},{"Uniquefunname":"void removeExpand(DDrawer * expand)","Funname":"removeExpand","Returntype":"void","Args":"DDrawer * expand"},{"Uniquefunname":"void setId(DDrawer * expand,int id)","Funname":"setId","Returntype":"void","Args":"DDrawer * expand,int id"}],"Records":[{"Name":"macro","Fields":["DDRAWERGROUP_H"]}]}
{"Filepath":"src/widgets/denhancedwidget.h","Functions":[{"Uniquefunname":" DEnhancedWidget(DEnhancedWidgetPrivate * dd,QWidget * w,QObject * parent=0)","Funname":"DEnhancedWidget","Returntype":"","Args":"DEnhancedWidgetPrivate * dd,QWidget * w,QObject * parent=0"},{"Uniquefunname":" DEnhancedWidget(QWidget * target,QObject * parent=0)","Funname":"DEnhancedWidget","Returntype":"","Args":"QWidget * target,QObject * parent=0"},{"Uniquefunname":" DEnhancedWidget::DEnhancedWidget(DEnhancedWidgetPrivate * dd,QWidget * w,QObject * parent=0)","Funname":"DEnhancedWidget::DEnhancedWidget","Returntype":"","Args":"DEnhancedWidgetPrivate * dd,QWidget * w,QObject * parent=0"},{"Uniquefunname":" DEnhancedWidget::DEnhancedWidget(QWidget * target,QObject * parent=0)","Funname":"DEnhancedWidget::DEnhancedWidget","Returntype":"","Args":"QWidget * target,QObject * parent=0"},{"Uniquefunname":"bool DEnhancedWidget::enabled() cons)","Funname":"DEnhancedWidget::enabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DEnhancedWidget::enabledChanged(bool enabled)","Funname":"DEnhancedWidget::enabledChanged","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"bool DEnhancedWidget::eventFilter(QObject * o,QEvent * e)","Funname":"DEnhancedWidget::eventFilter","Returntype":"bool","Args":"QObject * o,QEvent * e"},{"Uniquefunname":"void DEnhancedWidget::heightChanged(int height)","Funname":"DEnhancedWidget::heightChanged","Returntype":"void","Args":"int height"},{"Uniquefunname":"void DEnhancedWidget::positionChanged(const QPoint \u0026 point)","Funname":"DEnhancedWidget::positionChanged","Returntype":"void","Args":"const QPoint \u0026 point"},{"Uniquefunname":"void DEnhancedWidget::setEnabled(bool enabled)","Funname":"DEnhancedWidget::setEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void DEnhancedWidget::setTarget(QWidget * target)","Funname":"DEnhancedWidget::setTarget","Returntype":"void","Args":"QWidget * target"},{"Uniquefunname":"void DEnhancedWidget::showed()","Funname":"DEnhancedWidget::showed","Returntype":"void","Args":""},{"Uniquefunname":"void DEnhancedWidget::sizeChanged(const QSize \u0026 size)","Funname":"DEnhancedWidget::sizeChanged","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"QWidget * DEnhancedWidget::target() cons)","Funname":"DEnhancedWidget::target","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void DEnhancedWidget::targetChanged(QWidget * target)","Funname":"DEnhancedWidget::targetChanged","Returntype":"void","Args":"QWidget * target"},{"Uniquefunname":"void DEnhancedWidget::widthChanged(int width)","Funname":"DEnhancedWidget::widthChanged","Returntype":"void","Args":"int width"},{"Uniquefunname":"void DEnhancedWidget::yChanged(int y)","Funname":"DEnhancedWidget::yChanged","Returntype":"void","Args":"int y"},{"Uniquefunname":" DEnhancedWidget::~DEnhancedWidget()","Funname":"DEnhancedWidget::~DEnhancedWidget","Returntype":"","Args":""},{"Uniquefunname":"bool enabled() cons)","Funname":"enabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void enabledChanged(bool enabled)","Funname":"enabledChanged","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"bool eventFilter(QObject * o,QEvent * e)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * o,QEvent * e"},{"Uniquefunname":"void heightChanged(int height)","Funname":"heightChanged","Returntype":"void","Args":"int height"},{"Uniquefunname":"void positionChanged(const QPoint \u0026 point)","Funname":"positionChanged","Returntype":"void","Args":"const QPoint \u0026 point"},{"Uniquefunname":"void setEnabled(bool enabled)","Funname":"setEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setTarget(QWidget * target)","Funname":"setTarget","Returntype":"void","Args":"QWidget * target"},{"Uniquefunname":"void showed()","Funname":"showed","Returntype":"void","Args":""},{"Uniquefunname":"void sizeChanged(const QSize \u0026 size)","Funname":"sizeChanged","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"QWidget * target() cons)","Funname":"target","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void targetChanged(QWidget * target)","Funname":"targetChanged","Returntype":"void","Args":"QWidget * target"},{"Uniquefunname":"void widthChanged(int width)","Funname":"widthChanged","Returntype":"void","Args":"int width"},{"Uniquefunname":"void yChanged(int y)","Funname":"yChanged","Returntype":"void","Args":"int y"},{"Uniquefunname":" ~DEnhancedWidget()","Funname":"~DEnhancedWidget","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DENHANCEDWIDGET_H"]},{"Name":"class:DEnhancedWidget","Fields":["DEnhancedWidgetPrivate * DEnhancedWidget::d_ptr"]}]}
{"Filepath":"src/widgets/dexpandgroup.h","Functions":[{"Uniquefunname":" DExpandGroup(QObject * parent=0)","Funname":"DExpandGroup","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DExpandGroup::DExpandGroup(QObject * parent=0)","Funname":"DExpandGroup::DExpandGroup","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"void DExpandGroup::addExpand(DBaseExpand * expand,int id=-1)","Funname":"DExpandGroup::addExpand","Returntype":"void","Args":"DBaseExpand * expand,int id=-1"},{"Uniquefunname":"DBaseExpand * DExpandGroup::checkedExpand() cons)","Funname":"DExpandGroup::checkedExpand","Returntype":"DBaseExpand *","Args":") cons"},{"Uniquefunname":"int DExpandGroup::checkedId() cons)","Funname":"DExpandGroup::checkedId","Returntype":"int","Args":") cons"},{"Uniquefunname":"DBaseExpand * DExpandGroup::expand(int id) cons)","Funname":"DExpandGroup::expand","Returntype":"DBaseExpand *","Args":"int id) cons"},{"Uniquefunname":"QList\u003cDBaseExpand * \u003e DExpandGroup::expands() cons)","Funname":"DExpandGroup::expands","Returntype":"QList\u003cDBaseExpand * \u003e","Args":") cons"},{"Uniquefunname":"int DExpandGroup::id(DBaseExpand * expand) cons)","Funname":"DExpandGroup::id","Returntype":"int","Args":"DBaseExpand * expand) cons"},{"Uniquefunname":"void DExpandGroup::onExpandChanged(bool v)","Funname":"DExpandGroup::onExpandChanged","Returntype":"void","Args":"bool v"},{"Uniquefunname":"void DExpandGroup::removeExpand(DBaseExpand * expand)","Funname":"DExpandGroup::removeExpand","Returntype":"void","Args":"DBaseExpand * expand"},{"Uniquefunname":"void DExpandGroup::setId(DBaseExpand * expand,int id)","Funname":"DExpandGroup::setId","Returntype":"void","Args":"DBaseExpand * expand,int id"},{"Uniquefunname":"void addExpand(DBaseExpand * expand,int id=-1)","Funname":"addExpand","Returntype":"void","Args":"DBaseExpand * expand,int id=-1"},{"Uniquefunname":"DBaseExpand * checkedExpand() cons)","Funname":"checkedExpand","Returntype":"DBaseExpand *","Args":") cons"},{"Uniquefunname":"int checkedId() cons)","Funname":"checkedId","Returntype":"int","Args":") cons"},{"Uniquefunname":"DBaseExpand * expand(int id) cons)","Funname":"expand","Returntype":"DBaseExpand *","Args":"int id) cons"},{"Uniquefunname":"QList\u003cDBaseExpand * \u003e expands() cons)","Funname":"expands","Returntype":"QList\u003cDBaseExpand * \u003e","Args":") cons"},{"Uniquefunname":"int id(DBaseExpand * expand) cons)","Funname":"id","Returntype":"int","Args":"DBaseExpand * expand) cons"},{"Uniquefunname":"void onExpandChanged(bool v)","Funname":"onExpandChanged","Returntype":"void","Args":"bool v"},{"Uniquefunname":"void removeExpand(DBaseExpand * expand)","Funname":"removeExpand","Returntype":"void","Args":"DBaseExpand * expand"},{"Uniquefunname":"void setId(DBaseExpand * expand,int id)","Funname":"setId","Returntype":"void","Args":"DBaseExpand * expand,int id"}],"Records":[{"Name":"class:DExpandGroup","Fields":["QMap\u003cint,DBaseExpand * \u003e DExpandGroup::m_checkedMap","QMap\u003cint,DBaseExpand * \u003e DExpandGroup::m_expandMap"]},{"Name":"macro","Fields":["EXPANDGROUP_H"]}]}
{"Filepath":"src/widgets/dfilechooseredit.h","Functions":[{"Uniquefunname":" DFileChooserEdit(QWidget * parent=nullptr)","Funname":"DFileChooserEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFileChooserEdit::DFileChooserEdit(QWidget * parent=nullptr)","Funname":"DFileChooserEdit::DFileChooserEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DFileChooserEdit::dialogClosed(int code)","Funname":"DFileChooserEdit::dialogClosed","Returntype":"void","Args":"int code"},{"Uniquefunname":"DFileChooserEdit DFileChooserEdit::dialogDisplayPosition() cons)","Funname":"DFileChooserEdit::dialogDisplayPosition","Returntype":"DFileChooserEdit","Args":") cons"},{"Uniquefunname":"void DFileChooserEdit::dialogOpened()","Funname":"DFileChooserEdit::dialogOpened","Returntype":"void","Args":""},{"Uniquefunname":"QUrl DFileChooserEdit::directoryUrl()","Funname":"DFileChooserEdit::directoryUrl","Returntype":"QUrl","Args":""},{"Uniquefunname":"QFileDialog * DFileChooserEdit::fileDialog() cons)","Funname":"DFileChooserEdit::fileDialog","Returntype":"QFileDialog *","Args":") cons"},{"Uniquefunname":"QFileDialog DFileChooserEdit::fileMode() cons)","Funname":"DFileChooserEdit::fileMode","Returntype":"QFileDialog","Args":") cons"},{"Uniquefunname":"void DFileChooserEdit::initDialog()","Funname":"DFileChooserEdit::initDialog","Returntype":"void","Args":""},{"Uniquefunname":"QStringList DFileChooserEdit::nameFilters() cons)","Funname":"DFileChooserEdit::nameFilters","Returntype":"QStringList","Args":") cons"},{"Uniquefunname":"void DFileChooserEdit::setDialogDisplayPosition(DialogDisplayPosition dialogDisplayPosition)","Funname":"DFileChooserEdit::setDialogDisplayPosition","Returntype":"void","Args":"DialogDisplayPosition dialogDisplayPosition"},{"Uniquefunname":"void DFileChooserEdit::setDirectoryUrl(const QUrl \u0026 directory)","Funname":"DFileChooserEdit::setDirectoryUrl","Returntype":"void","Args":"const QUrl \u0026 directory"},{"Uniquefunname":"void DFileChooserEdit::setFileDialog(QFileDialog * fileDialog)","Funname":"DFileChooserEdit::setFileDialog","Returntype":"void","Args":"QFileDialog * fileDialog"},{"Uniquefunname":"void DFileChooserEdit::setFileMode(QFileDialog::FileMode mode)","Funname":"DFileChooserEdit::setFileMode","Returntype":"void","Args":"QFileDialog::FileMode mode"},{"Uniquefunname":"void DFileChooserEdit::setNameFilters(const QStringList \u0026 filters)","Funname":"DFileChooserEdit::setNameFilters","Returntype":"void","Args":"const QStringList \u0026 filters"},{"Uniquefunname":"void dialogClosed(int code)","Funname":"dialogClosed","Returntype":"void","Args":"int code"},{"Uniquefunname":"DFileChooserEdit dialogDisplayPosition() cons)","Funname":"dialogDisplayPosition","Returntype":"DFileChooserEdit","Args":") cons"},{"Uniquefunname":"void dialogOpened()","Funname":"dialogOpened","Returntype":"void","Args":""},{"Uniquefunname":"QUrl directoryUrl()","Funname":"directoryUrl","Returntype":"QUrl","Args":""},{"Uniquefunname":"QFileDialog * fileDialog() cons)","Funname":"fileDialog","Returntype":"QFileDialog *","Args":") cons"},{"Uniquefunname":"QFileDialog fileMode() cons)","Funname":"fileMode","Returntype":"QFileDialog","Args":") cons"},{"Uniquefunname":"void initDialog()","Funname":"initDialog","Returntype":"void","Args":""},{"Uniquefunname":"QStringList nameFilters() cons)","Funname":"nameFilters","Returntype":"QStringList","Args":") cons"},{"Uniquefunname":"void setDialogDisplayPosition(DialogDisplayPosition dialogDisplayPosition)","Funname":"setDialogDisplayPosition","Returntype":"void","Args":"DialogDisplayPosition dialogDisplayPosition"},{"Uniquefunname":"void setDirectoryUrl(const QUrl \u0026 directory)","Funname":"setDirectoryUrl","Returntype":"void","Args":"const QUrl \u0026 directory"},{"Uniquefunname":"void setFileDialog(QFileDialog * fileDialog)","Funname":"setFileDialog","Returntype":"void","Args":"QFileDialog * fileDialog"},{"Uniquefunname":"void setFileMode(QFileDialog::FileMode mode)","Funname":"setFileMode","Returntype":"void","Args":"QFileDialog::FileMode mode"},{"Uniquefunname":"void setNameFilters(const QStringList \u0026 filters)","Funname":"setNameFilters","Returntype":"void","Args":"const QStringList \u0026 filters"}],"Records":[{"Name":"enum:DFileChooserEdit::DialogDisplayPosition","Fields":["CurrentMonitorCenter","DFileChooserEdit::CurrentMonitorCenter","DFileChooserEdit::FollowParentWindow","FollowParentWindow"]},{"Name":"macro","Fields":["DFILECHOOSEREDIT_H"]}]}
{"Filepath":"src/widgets/dfiledialog.h","Functions":[{"Uniquefunname":" DFileDialog(QWidget * parent,Qt::WindowFlags f)","Funname":"DFileDialog","Returntype":"","Args":"QWidget * parent,Qt::WindowFlags f"},{"Uniquefunname":" DFileDialog(QWidget * parent=Q_NULLPTR,const QString \u0026 caption=QString (),const QString \u0026 directory=QString (),const QString \u0026 filter=QString ())","Funname":"DFileDialog","Returntype":"","Args":"QWidget * parent=Q_NULLPTR,const QString \u0026 caption=QString (),const QString \u0026 directory=QString (),const QString \u0026 filter=QString ()"},{"Uniquefunname":" DFileDialog::DFileDialog(QWidget * parent,Qt::WindowFlags f)","Funname":"DFileDialog::DFileDialog","Returntype":"","Args":"QWidget * parent,Qt::WindowFlags f"},{"Uniquefunname":" DFileDialog::DFileDialog(QWidget * parent=Q_NULLPTR,const QString \u0026 caption=QString (),const QString \u0026 directory=QString (),const QString \u0026 filter=QString ())","Funname":"DFileDialog::DFileDialog","Returntype":"","Args":"QWidget * parent=Q_NULLPTR,const QString \u0026 caption=QString (),const QString \u0026 directory=QString (),const QString \u0026 filter=QString ()"},{"Uniquefunname":"void DFileDialog::addComboBox(const QString \u0026 text,const DComboBoxOptions \u0026 options)","Funname":"DFileDialog::addComboBox","Returntype":"void","Args":"const QString \u0026 text,const DComboBoxOptions \u0026 options"},{"Uniquefunname":"void DFileDialog::addComboBox(const QString \u0026 text,const QStringList \u0026 data)","Funname":"DFileDialog::addComboBox","Returntype":"void","Args":"const QString \u0026 text,const QStringList \u0026 data"},{"Uniquefunname":"void DFileDialog::addLineEdit(const QString \u0026 text)","Funname":"DFileDialog::addLineEdit","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DFileDialog::addLineEdit(const QString \u0026 text,const DLineEditOptions \u0026 options)","Funname":"DFileDialog::addLineEdit","Returntype":"void","Args":"const QString \u0026 text,const DLineEditOptions \u0026 options"},{"Uniquefunname":"QString DFileDialog::getComboBoxValue(const QString \u0026 text) cons)","Funname":"DFileDialog::getComboBoxValue","Returntype":"QString","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"QString DFileDialog::getLineEditValue(const QString \u0026 text) cons)","Funname":"DFileDialog::getLineEditValue","Returntype":"QString","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"void DFileDialog::setAllowMixedSelection(bool on)","Funname":"DFileDialog::setAllowMixedSelection","Returntype":"void","Args":"bool on"},{"Uniquefunname":"void DFileDialog::setVisible(bool visible)","Funname":"DFileDialog::setVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void addComboBox(const QString \u0026 text,const DComboBoxOptions \u0026 options)","Funname":"addComboBox","Returntype":"void","Args":"const QString \u0026 text,const DComboBoxOptions \u0026 options"},{"Uniquefunname":"void addComboBox(const QString \u0026 text,const QStringList \u0026 data)","Funname":"addComboBox","Returntype":"void","Args":"const QString \u0026 text,const QStringList \u0026 data"},{"Uniquefunname":"void addLineEdit(const QString \u0026 text)","Funname":"addLineEdit","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void addLineEdit(const QString \u0026 text,const DLineEditOptions \u0026 options)","Funname":"addLineEdit","Returntype":"void","Args":"const QString \u0026 text,const DLineEditOptions \u0026 options"},{"Uniquefunname":"QString getComboBoxValue(const QString \u0026 text) cons)","Funname":"getComboBoxValue","Returntype":"QString","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"QString getLineEditValue(const QString \u0026 text) cons)","Funname":"getLineEditValue","Returntype":"QString","Args":"const QString \u0026 text) cons"},{"Uniquefunname":"void setAllowMixedSelection(bool on)","Funname":"setAllowMixedSelection","Returntype":"void","Args":"bool on"},{"Uniquefunname":"void setVisible(bool visible)","Funname":"setVisible","Returntype":"void","Args":"bool visible"}],"Records":[{"Name":"macro","Fields":["DFILEDIALOG_H"]},{"Name":"struct:DFileDialog::DComboBoxOptions","Fields":["QStringList DFileDialog::DComboBoxOptions::data","QString DFileDialog::DComboBoxOptions::defaultValue","bool DFileDialog::DComboBoxOptions::editable"]},{"Name":"struct:DFileDialog::DLineEditOptions","Fields":["QString DFileDialog::DLineEditOptions::defaultValue","QLineEdit::EchoMode DFileDialog::DLineEditOptions::echoMode","QString DFileDialog::DLineEditOptions::inputMask","int DFileDialog::DLineEditOptions::maxLength","QString DFileDialog::DLineEditOptions::placeholderText"]}]}
{"Filepath":"src/widgets/dfloatingbutton.h","Functions":[{"Uniquefunname":" DFloatingButton(const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DFloatingButton","Returntype":"","Args":"const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton(DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DFloatingButton","Returntype":"","Args":"DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton(QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DFloatingButton","Returntype":"","Args":"QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton(QWidget * parent=nullptr)","Funname":"DFloatingButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DFloatingButton","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton::DFloatingButton(const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DFloatingButton::DFloatingButton","Returntype":"","Args":"const QIcon \u0026 icon,const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton::DFloatingButton(DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DFloatingButton::DFloatingButton","Returntype":"","Args":"DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton::DFloatingButton(QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DFloatingButton::DFloatingButton","Returntype":"","Args":"QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton::DFloatingButton(QWidget * parent=nullptr)","Funname":"DFloatingButton::DFloatingButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingButton::DFloatingButton(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DFloatingButton::DFloatingButton","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":"DStyleOptionButton DFloatingButton::baseStyleOption() cons)","Funname":"DFloatingButton::baseStyleOption","Returntype":"DStyleOptionButton","Args":") cons"},{"Uniquefunname":"void DFloatingButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DFloatingButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"DStyleOptionButton baseStyleOption() cons)","Funname":"baseStyleOption","Returntype":"DStyleOptionButton","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"}],"Records":[{"Name":"macro","Fields":["DFLOATINGBUTTON_H"]}]}
{"Filepath":"src/widgets/dfloatingmessage.h","Functions":[{"Uniquefunname":" DFloatingMessage(MessageType notifyType=MessageType::TransientType,QWidget * parent=nullptr)","Funname":"DFloatingMessage","Returntype":"","Args":"MessageType notifyType=MessageType::TransientType,QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingMessage::DFloatingMessage(MessageType notifyType=MessageType::TransientType,QWidget * parent=nullptr)","Funname":"DFloatingMessage::DFloatingMessage","Returntype":"","Args":"MessageType notifyType=MessageType::TransientType,QWidget * parent=nullptr"},{"Uniquefunname":"MessageType DFloatingMessage::messageType() cons)","Funname":"DFloatingMessage::messageType","Returntype":"MessageType","Args":") cons"},{"Uniquefunname":"void DFloatingMessage::setDuration(int msec)","Funname":"DFloatingMessage::setDuration","Returntype":"void","Args":"int msec"},{"Uniquefunname":"void DFloatingMessage::setIcon(const QIcon \u0026 ico)","Funname":"DFloatingMessage::setIcon","Returntype":"void","Args":"const QIcon \u0026 ico"},{"Uniquefunname":"void DFloatingMessage::setMessage(const QString \u0026 str)","Funname":"DFloatingMessage::setMessage","Returntype":"void","Args":"const QString \u0026 str"},{"Uniquefunname":"void DFloatingMessage::setWidget(QWidget * w)","Funname":"DFloatingMessage::setWidget","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"void DFloatingMessage::showEvent(QShowEvent * event)","Funname":"DFloatingMessage::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QSize DFloatingMessage::sizeHint() cons)","Funname":"DFloatingMessage::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"MessageType messageType() cons)","Funname":"messageType","Returntype":"MessageType","Args":") cons"},{"Uniquefunname":"void setDuration(int msec)","Funname":"setDuration","Returntype":"void","Args":"int msec"},{"Uniquefunname":"void setIcon(const QIcon \u0026 ico)","Funname":"setIcon","Returntype":"void","Args":"const QIcon \u0026 ico"},{"Uniquefunname":"void setMessage(const QString \u0026 str)","Funname":"setMessage","Returntype":"void","Args":"const QString \u0026 str"},{"Uniquefunname":"void setWidget(QWidget * w)","Funname":"setWidget","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DFLOATINGMESSAGE_H"]},{"Name":"enum:DFloatingMessage::MessageType","Fields":["DFloatingMessage::ResidentType","DFloatingMessage::TransientType","ResidentType","TransientType"]}]}
{"Filepath":"src/widgets/dfloatingwidget.h","Functions":[{"Uniquefunname":" DFloatingWidget(DFloatingWidgetPrivate \u0026 dd,QWidget * parent)","Funname":"DFloatingWidget","Returntype":"","Args":"DFloatingWidgetPrivate \u0026 dd,QWidget * parent"},{"Uniquefunname":" DFloatingWidget(QWidget * parent=nullptr)","Funname":"DFloatingWidget","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFloatingWidget::DFloatingWidget(DFloatingWidgetPrivate \u0026 dd,QWidget * parent)","Funname":"DFloatingWidget::DFloatingWidget","Returntype":"","Args":"DFloatingWidgetPrivate \u0026 dd,QWidget * parent"},{"Uniquefunname":" DFloatingWidget::DFloatingWidget(QWidget * parent=nullptr)","Funname":"DFloatingWidget::DFloatingWidget","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"DBlurEffectWidget * DFloatingWidget::blurBackground() cons)","Funname":"DFloatingWidget::blurBackground","Returntype":"DBlurEffectWidget *","Args":") cons"},{"Uniquefunname":"bool DFloatingWidget::blurBackgroundIsEnabled() cons)","Funname":"DFloatingWidget::blurBackgroundIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DFloatingWidget::event(QEvent * event)","Funname":"DFloatingWidget::event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"void DFloatingWidget::initStyleOption(DStyleOptionFloatingWidget * option) cons)","Funname":"DFloatingWidget::initStyleOption","Returntype":"void","Args":"DStyleOptionFloatingWidget * option) cons"},{"Uniquefunname":"void DFloatingWidget::paintEvent(QPaintEvent * e)","Funname":"DFloatingWidget::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void DFloatingWidget::setBlurBackgroundEnabled(bool blurBackgroundEnabled)","Funname":"DFloatingWidget::setBlurBackgroundEnabled","Returntype":"void","Args":"bool blurBackgroundEnabled"},{"Uniquefunname":"void DFloatingWidget::setFramRadius(int radius)","Funname":"DFloatingWidget::setFramRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void DFloatingWidget::setWidget(QWidget * widget)","Funname":"DFloatingWidget::setWidget","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"QSize DFloatingWidget::sizeHint() cons)","Funname":"DFloatingWidget::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"DBlurEffectWidget * blurBackground() cons)","Funname":"blurBackground","Returntype":"DBlurEffectWidget *","Args":") cons"},{"Uniquefunname":"bool blurBackgroundIsEnabled() cons)","Funname":"blurBackgroundIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool event(QEvent * event)","Funname":"event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"void initStyleOption(DStyleOptionFloatingWidget * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionFloatingWidget * option) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void setBlurBackgroundEnabled(bool blurBackgroundEnabled)","Funname":"setBlurBackgroundEnabled","Returntype":"void","Args":"bool blurBackgroundEnabled"},{"Uniquefunname":"void setFramRadius(int radius)","Funname":"setFramRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void setWidget(QWidget * widget)","Funname":"setWidget","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DFLOATINGWIDGET_H"]}]}
{"Filepath":"src/widgets/dflowlayout.h","Functions":[{"Uniquefunname":" DFlowLayout()","Funname":"DFlowLayout","Returntype":"","Args":""},{"Uniquefunname":"Flow DFlowLayout(QWidget * parent)","Funname":"DFlowLayout","Returntype":"Flow","Args":"QWidget * parent"},{"Uniquefunname":" DFlowLayout::DFlowLayout()","Funname":"DFlowLayout::DFlowLayout","Returntype":"","Args":""},{"Uniquefunname":"Flow DFlowLayout::DFlowLayout(QWidget * parent)","Funname":"DFlowLayout::DFlowLayout","Returntype":"Flow","Args":"QWidget * parent"},{"Uniquefunname":"void DFlowLayout::addItem(QLayoutItem * item)","Funname":"DFlowLayout::addItem","Returntype":"void","Args":"QLayoutItem * item"},{"Uniquefunname":"void DFlowLayout::addSpacerItem(QSpacerItem * spacerItem)","Funname":"DFlowLayout::addSpacerItem","Returntype":"void","Args":"QSpacerItem * spacerItem"},{"Uniquefunname":"void DFlowLayout::addSpacing(int size)","Funname":"DFlowLayout::addSpacing","Returntype":"void","Args":"int size"},{"Uniquefunname":"void DFlowLayout::addStretch(int stretch=0)","Funname":"DFlowLayout::addStretch","Returntype":"void","Args":"int stretch=0"},{"Uniquefunname":"int DFlowLayout::count() cons)","Funname":"DFlowLayout::count","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DFlowLayout::countChanged(int count)","Funname":"DFlowLayout::countChanged","Returntype":"void","Args":"int count"},{"Uniquefunname":"Qt DFlowLayout::expandingDirections() cons)","Funname":"DFlowLayout::expandingDirections","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"Flow DFlowLayout::flow() cons)","Funname":"DFlowLayout::flow","Returntype":"Flow","Args":") cons"},{"Uniquefunname":"void DFlowLayout::flowChanged(Flow flow)","Funname":"DFlowLayout::flowChanged","Returntype":"void","Args":"Flow flow"},{"Uniquefunname":"bool DFlowLayout::hasHeightForWidth() cons)","Funname":"DFlowLayout::hasHeightForWidth","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int DFlowLayout::heightForWidth(int) cons)","Funname":"DFlowLayout::heightForWidth","Returntype":"int","Args":"int) cons"},{"Uniquefunname":"int DFlowLayout::horizontalSpacing() cons)","Funname":"DFlowLayout::horizontalSpacing","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DFlowLayout::insertItem(int index,QLayoutItem * item)","Funname":"DFlowLayout::insertItem","Returntype":"void","Args":"int index,QLayoutItem * item"},{"Uniquefunname":"void DFlowLayout::insertLayout(int index,QLayout * layout)","Funname":"DFlowLayout::insertLayout","Returntype":"void","Args":"int index,QLayout * layout"},{"Uniquefunname":"void DFlowLayout::insertSpacerItem(int index,QSpacerItem * spacerItem)","Funname":"DFlowLayout::insertSpacerItem","Returntype":"void","Args":"int index,QSpacerItem * spacerItem"},{"Uniquefunname":"void DFlowLayout::insertSpacing(int index,int size)","Funname":"DFlowLayout::insertSpacing","Returntype":"void","Args":"int index,int size"},{"Uniquefunname":"void DFlowLayout::insertStretch(int index,int stretch=0)","Funname":"DFlowLayout::insertStretch","Returntype":"void","Args":"int index,int stretch=0"},{"Uniquefunname":"void DFlowLayout::insertWidget(int index,QWidget * widget)","Funname":"DFlowLayout::insertWidget","Returntype":"void","Args":"int index,QWidget * widget"},{"Uniquefunname":"QLayoutItem * DFlowLayout::itemAt(int index) cons)","Funname":"DFlowLayout::itemAt","Returntype":"QLayoutItem *","Args":"int index) cons"},{"Uniquefunname":"QSize DFlowLayout::minimumSize() cons)","Funname":"DFlowLayout::minimumSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DFlowLayout::setFlow(Flow flow)","Funname":"DFlowLayout::setFlow","Returntype":"void","Args":"Flow flow"},{"Uniquefunname":"void DFlowLayout::setGeometry(const QRect \u0026 rect)","Funname":"DFlowLayout::setGeometry","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void DFlowLayout::setHorizontalSpacing(int horizontalSpacing)","Funname":"DFlowLayout::setHorizontalSpacing","Returntype":"void","Args":"int horizontalSpacing"},{"Uniquefunname":"void DFlowLayout::setSpacing(int spacing)","Funname":"DFlowLayout::setSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void DFlowLayout::setVerticalSpacing(int verticalSpacing)","Funname":"DFlowLayout::setVerticalSpacing","Returntype":"void","Args":"int verticalSpacing"},{"Uniquefunname":"QSize DFlowLayout::sizeHint() cons)","Funname":"DFlowLayout::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DFlowLayout::sizeHintChanged(QSize sizeHint) cons)","Funname":"DFlowLayout::sizeHintChanged","Returntype":"void","Args":"QSize sizeHint) cons"},{"Uniquefunname":"QLayoutItem * DFlowLayout::takeAt(int index)","Funname":"DFlowLayout::takeAt","Returntype":"QLayoutItem *","Args":"int index"},{"Uniquefunname":"int DFlowLayout::verticalSpacing() cons)","Funname":"DFlowLayout::verticalSpacing","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DFlowLayout::verticalSpacingChanged(int verticalSpacing)","Funname":"DFlowLayout::verticalSpacingChanged","Returntype":"void","Args":"int verticalSpacing"},{"Uniquefunname":" DFlowLayout::~DFlowLayout()","Funname":"DFlowLayout::~DFlowLayout","Returntype":"","Args":""},{"Uniquefunname":"void addItem(QLayoutItem * item)","Funname":"addItem","Returntype":"void","Args":"QLayoutItem * item"},{"Uniquefunname":"void addSpacerItem(QSpacerItem * spacerItem)","Funname":"addSpacerItem","Returntype":"void","Args":"QSpacerItem * spacerItem"},{"Uniquefunname":"void addSpacing(int size)","Funname":"addSpacing","Returntype":"void","Args":"int size"},{"Uniquefunname":"void addStretch(int stretch=0)","Funname":"addStretch","Returntype":"void","Args":"int stretch=0"},{"Uniquefunname":"int count() cons)","Funname":"count","Returntype":"int","Args":") cons"},{"Uniquefunname":"void countChanged(int count)","Funname":"countChanged","Returntype":"void","Args":"int count"},{"Uniquefunname":"Qt expandingDirections() cons)","Funname":"expandingDirections","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"Flow flow() cons)","Funname":"flow","Returntype":"Flow","Args":") cons"},{"Uniquefunname":"void flowChanged(Flow flow)","Funname":"flowChanged","Returntype":"void","Args":"Flow flow"},{"Uniquefunname":"bool hasHeightForWidth() cons)","Funname":"hasHeightForWidth","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int heightForWidth(int) cons)","Funname":"heightForWidth","Returntype":"int","Args":"int) cons"},{"Uniquefunname":"int horizontalSpacing() cons)","Funname":"horizontalSpacing","Returntype":"int","Args":") cons"},{"Uniquefunname":"void insertItem(int index,QLayoutItem * item)","Funname":"insertItem","Returntype":"void","Args":"int index,QLayoutItem * item"},{"Uniquefunname":"void insertLayout(int index,QLayout * layout)","Funname":"insertLayout","Returntype":"void","Args":"int index,QLayout * layout"},{"Uniquefunname":"void insertSpacerItem(int index,QSpacerItem * spacerItem)","Funname":"insertSpacerItem","Returntype":"void","Args":"int index,QSpacerItem * spacerItem"},{"Uniquefunname":"void insertSpacing(int index,int size)","Funname":"insertSpacing","Returntype":"void","Args":"int index,int size"},{"Uniquefunname":"void insertStretch(int index,int stretch=0)","Funname":"insertStretch","Returntype":"void","Args":"int index,int stretch=0"},{"Uniquefunname":"void insertWidget(int index,QWidget * widget)","Funname":"insertWidget","Returntype":"void","Args":"int index,QWidget * widget"},{"Uniquefunname":"QLayoutItem * itemAt(int index) cons)","Funname":"itemAt","Returntype":"QLayoutItem *","Args":"int index) cons"},{"Uniquefunname":"QSize minimumSize() cons)","Funname":"minimumSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void setFlow(Flow flow)","Funname":"setFlow","Returntype":"void","Args":"Flow flow"},{"Uniquefunname":"void setGeometry(const QRect \u0026 rect)","Funname":"setGeometry","Returntype":"void","Args":"const QRect \u0026 rect"},{"Uniquefunname":"void setHorizontalSpacing(int horizontalSpacing)","Funname":"setHorizontalSpacing","Returntype":"void","Args":"int horizontalSpacing"},{"Uniquefunname":"void setSpacing(int spacing)","Funname":"setSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void setVerticalSpacing(int verticalSpacing)","Funname":"setVerticalSpacing","Returntype":"void","Args":"int verticalSpacing"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void sizeHintChanged(QSize sizeHint) cons)","Funname":"sizeHintChanged","Returntype":"void","Args":"QSize sizeHint) cons"},{"Uniquefunname":"QLayoutItem * takeAt(int index)","Funname":"takeAt","Returntype":"QLayoutItem *","Args":"int index"},{"Uniquefunname":"int verticalSpacing() cons)","Funname":"verticalSpacing","Returntype":"int","Args":") cons"},{"Uniquefunname":"void verticalSpacingChanged(int verticalSpacing)","Funname":"verticalSpacingChanged","Returntype":"void","Args":"int verticalSpacing"},{"Uniquefunname":" ~DFlowLayout()","Funname":"~DFlowLayout","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DFLOWLAYOUT_H"]}]}
{"Filepath":"src/widgets/dframe.h","Functions":[{"Uniquefunname":" DFrame(DFramePrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DFrame","Returntype":"","Args":"DFramePrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DFrame(QWidget * parent=nullptr)","Funname":"DFrame","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DFrame::DFrame(DFramePrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DFrame::DFrame","Returntype":"","Args":"DFramePrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DFrame::DFrame(QWidget * parent=nullptr)","Funname":"DFrame::DFrame","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DFrame::paintEvent(QPaintEvent * event)","Funname":"DFrame::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DFrame::setBackgroundRole(DGUI_NAMESPACE::DPalette::ColorType type)","Funname":"DFrame::setBackgroundRole","Returntype":"void","Args":"DGUI_NAMESPACE::DPalette::ColorType type"},{"Uniquefunname":"void DFrame::setFrameRounded(bool on)","Funname":"DFrame::setFrameRounded","Returntype":"void","Args":"bool on"},{"Uniquefunname":"    explicit DHorizontalLine(QWidget* parent = nullptr, Qt::WindowFlags f = Qt::WindowFlags())","Funname":"DHorizontalLine","Returntype":"","Args":"QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ()"},{"Uniquefunname":"    explicit DHorizontalLine(QWidget* parent = nullptr, Qt::WindowFlags f = Qt::WindowFlags())","Funname":"DHorizontalLine::DHorizontalLine","Returntype":"","Args":"QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ()"},{"Uniquefunname":"    explicit DVerticalLine(QWidget* parent = nullptr, Qt::WindowFlags f = Qt::WindowFlags())","Funname":"DVerticalLine","Returntype":"","Args":"QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ()"},{"Uniquefunname":"    explicit DVerticalLine(QWidget* parent = nullptr, Qt::WindowFlags f = Qt::WindowFlags())","Funname":"DVerticalLine::DVerticalLine","Returntype":"","Args":"QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ()"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setBackgroundRole(DGUI_NAMESPACE::DPalette::ColorType type)","Funname":"setBackgroundRole","Returntype":"void","Args":"DGUI_NAMESPACE::DPalette::ColorType type"},{"Uniquefunname":"void setFrameRounded(bool on)","Funname":"setFrameRounded","Returntype":"void","Args":"bool on"}],"Records":[{"Name":"macro","Fields":["DFRAME_H"]}]}
{"Filepath":"src/widgets/dgraphicsclipeffect.h","Functions":[{"Uniquefunname":" DGraphicsClipEffect(QObject * parent=Q_NULLPTR)","Funname":"DGraphicsClipEffect","Returntype":"","Args":"QObject * parent=Q_NULLPTR"},{"Uniquefunname":" DGraphicsClipEffect::DGraphicsClipEffect(QObject * parent=Q_NULLPTR)","Funname":"DGraphicsClipEffect::DGraphicsClipEffect","Returntype":"","Args":"QObject * parent=Q_NULLPTR"},{"Uniquefunname":"QPainterPath DGraphicsClipEffect::clipPath() cons)","Funname":"DGraphicsClipEffect::clipPath","Returntype":"QPainterPath","Args":") cons"},{"Uniquefunname":"void DGraphicsClipEffect::clipPathChanged(QPainterPath clipPath)","Funname":"DGraphicsClipEffect::clipPathChanged","Returntype":"void","Args":"QPainterPath clipPath"},{"Uniquefunname":"void DGraphicsClipEffect::draw(QPainter * painter)","Funname":"DGraphicsClipEffect::draw","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"QMargins DGraphicsClipEffect::margins() cons)","Funname":"DGraphicsClipEffect::margins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void DGraphicsClipEffect::setClipPath(const QPainterPath \u0026 clipPath)","Funname":"DGraphicsClipEffect::setClipPath","Returntype":"void","Args":"const QPainterPath \u0026 clipPath"},{"Uniquefunname":"void DGraphicsClipEffect::setMargins(const QMargins \u0026 margins)","Funname":"DGraphicsClipEffect::setMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"QPainterPath clipPath() cons)","Funname":"clipPath","Returntype":"QPainterPath","Args":") cons"},{"Uniquefunname":"void clipPathChanged(QPainterPath clipPath)","Funname":"clipPathChanged","Returntype":"void","Args":"QPainterPath clipPath"},{"Uniquefunname":"void draw(QPainter * painter)","Funname":"draw","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"QMargins margins() cons)","Funname":"margins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void setClipPath(const QPainterPath \u0026 clipPath)","Funname":"setClipPath","Returntype":"void","Args":"const QPainterPath \u0026 clipPath"},{"Uniquefunname":"void setMargins(const QMargins \u0026 margins)","Funname":"setMargins","Returntype":"void","Args":"const QMargins \u0026 margins"}],"Records":[{"Name":"macro","Fields":["DGRAPHICSCLIPEFFECT_H"]}]}
{"Filepath":"src/widgets/dgraphicsgloweffect.h","Functions":[{"Uniquefunname":" DGraphicsGlowEffect(QObject * parent=nullptr)","Funname":"DGraphicsGlowEffect","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":" DGraphicsGlowEffect::DGraphicsGlowEffect(QObject * parent=nullptr)","Funname":"DGraphicsGlowEffect::DGraphicsGlowEffect","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":"qreal DGraphicsGlowEffect::blurRadius() cons)","Funname":"DGraphicsGlowEffect::blurRadius","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"QRectF DGraphicsGlowEffect::boundingRectFor(const QRectF \u0026 rect) cons)","Funname":"DGraphicsGlowEffect::boundingRectFor","Returntype":"QRectF","Args":"const QRectF \u0026 rect) cons"},{"Uniquefunname":"QColor DGraphicsGlowEffect::color() cons)","Funname":"DGraphicsGlowEffect::color","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"qreal DGraphicsGlowEffect::distance() cons)","Funname":"DGraphicsGlowEffect::distance","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void DGraphicsGlowEffect::draw(QPainter * painter)","Funname":"DGraphicsGlowEffect::draw","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"qreal DGraphicsGlowEffect::opacity() cons)","Funname":"DGraphicsGlowEffect::opacity","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void DGraphicsGlowEffect::setBlurRadius(qreal blurRadius)","Funname":"DGraphicsGlowEffect::setBlurRadius","Returntype":"void","Args":"qreal blurRadius"},{"Uniquefunname":"void DGraphicsGlowEffect::setColor(const QColor \u0026 color)","Funname":"DGraphicsGlowEffect::setColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void DGraphicsGlowEffect::setDistance(qreal distance)","Funname":"DGraphicsGlowEffect::setDistance","Returntype":"void","Args":"qreal distance"},{"Uniquefunname":"void DGraphicsGlowEffect::setOffset(qreal dx,qreal dy)","Funname":"DGraphicsGlowEffect::setOffset","Returntype":"void","Args":"qreal dx,qreal dy"},{"Uniquefunname":"void DGraphicsGlowEffect::setOpacity(qreal opacity)","Funname":"DGraphicsGlowEffect::setOpacity","Returntype":"void","Args":"qreal opacity"},{"Uniquefunname":"void DGraphicsGlowEffect::setXOffset(qreal dx)","Funname":"DGraphicsGlowEffect::setXOffset","Returntype":"void","Args":"qreal dx"},{"Uniquefunname":"void DGraphicsGlowEffect::setYOffset(qreal dy)","Funname":"DGraphicsGlowEffect::setYOffset","Returntype":"void","Args":"qreal dy"},{"Uniquefunname":"qreal DGraphicsGlowEffect::xOffset() cons)","Funname":"DGraphicsGlowEffect::xOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal DGraphicsGlowEffect::yOffset() cons)","Funname":"DGraphicsGlowEffect::yOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal blurRadius() cons)","Funname":"blurRadius","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"QRectF boundingRectFor(const QRectF \u0026 rect) cons)","Funname":"boundingRectFor","Returntype":"QRectF","Args":"const QRectF \u0026 rect) cons"},{"Uniquefunname":"QColor color() cons)","Funname":"color","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"qreal distance() cons)","Funname":"distance","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void draw(QPainter * painter)","Funname":"draw","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"qreal opacity() cons)","Funname":"opacity","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void setBlurRadius(qreal blurRadius)","Funname":"setBlurRadius","Returntype":"void","Args":"qreal blurRadius"},{"Uniquefunname":"void setColor(const QColor \u0026 color)","Funname":"setColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void setDistance(qreal distance)","Funname":"setDistance","Returntype":"void","Args":"qreal distance"},{"Uniquefunname":"void setOffset(qreal dx,qreal dy)","Funname":"setOffset","Returntype":"void","Args":"qreal dx,qreal dy"},{"Uniquefunname":"void setOpacity(qreal opacity)","Funname":"setOpacity","Returntype":"void","Args":"qreal opacity"},{"Uniquefunname":"void setXOffset(qreal dx)","Funname":"setXOffset","Returntype":"void","Args":"qreal dx"},{"Uniquefunname":"void setYOffset(qreal dy)","Funname":"setYOffset","Returntype":"void","Args":"qreal dy"},{"Uniquefunname":"qreal xOffset() cons)","Funname":"xOffset","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"qreal yOffset() cons)","Funname":"yOffset","Returntype":"qreal","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DGRAPHICSGLOWEFFECT_H"]},{"Name":"class:DGraphicsGlowEffect","Fields":["qreal DGraphicsGlowEffect::m_blurRadius","QColor DGraphicsGlowEffect::m_color","qreal DGraphicsGlowEffect::m_distance","qreal DGraphicsGlowEffect::m_opacity","qreal DGraphicsGlowEffect::m_xOffset","qreal DGraphicsGlowEffect::m_yOffset"]}]}
{"Filepath":"src/widgets/dheaderline.h","Functions":[{"Uniquefunname":" DHeaderLine(QWidget * parent=0)","Funname":"DHeaderLine","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DHeaderLine::DHeaderLine(QWidget * parent=0)","Funname":"DHeaderLine::DHeaderLine","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DHeaderLine::setContent(QWidget * content)","Funname":"DHeaderLine::setContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DHeaderLine::setLeftContent(QWidget * content)","Funname":"DHeaderLine::setLeftContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DHeaderLine::setRightContent(QWidget * content)","Funname":"DHeaderLine::setRightContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DHeaderLine::setTitle(const QString \u0026 title)","Funname":"DHeaderLine::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"QString DHeaderLine::title() cons)","Funname":"DHeaderLine::title","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void setContent(QWidget * content)","Funname":"setContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void setLeftContent(QWidget * content)","Funname":"setLeftContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void setRightContent(QWidget * content)","Funname":"setRightContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"QString title() cons)","Funname":"title","Returntype":"QString","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DHEADERLINE_H"]},{"Name":"class:DHeaderLine","Fields":["QLabel * DHeaderLine::m_titleLabel"]}]}
{"Filepath":"src/widgets/dialog_constants.h","Functions":null,"Records":[{"Name":"macro","Fields":["BUTTON_CONSTANTS_H"]},{"Name":"namespace","Fields":["DIALOG"]}]}
{"Filepath":"src/widgets/diconbutton.h","Functions":[{"Uniquefunname":" DIconButton(DIconButtonPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DIconButton","Returntype":"","Args":"DIconButtonPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton(DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DIconButton","Returntype":"","Args":"DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton(QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DIconButton","Returntype":"","Args":"QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton(QWidget * parent=nullptr)","Funname":"DIconButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton::DIconButton(DIconButtonPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DIconButton::DIconButton","Returntype":"","Args":"DIconButtonPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton::DIconButton(DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DIconButton::DIconButton","Returntype":"","Args":"DStyle::StandardPixmap iconType=static_cast\u003cDStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton::DIconButton(QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr)","Funname":"DIconButton::DIconButton","Returntype":"","Args":"QStyle::StandardPixmap iconType=static_cast\u003cQStyle::StandardPixmap\u003e (-1),QWidget * parent=nullptr"},{"Uniquefunname":" DIconButton::DIconButton(QWidget * parent=nullptr)","Funname":"DIconButton::DIconButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"DStyleOptionButton DIconButton::baseStyleOption() cons)","Funname":"DIconButton::baseStyleOption","Returntype":"DStyleOptionButton","Args":") cons"},{"Uniquefunname":"bool DIconButton::enabledCircle() cons)","Funname":"DIconButton::enabledCircle","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DIconButton::event(QEvent * e)","Funname":"DIconButton::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QSize DIconButton::iconSize() cons)","Funname":"DIconButton::iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DIconButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DIconButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"bool DIconButton::isFlat() cons)","Funname":"DIconButton::isFlat","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DIconButton::keyPressEvent(QKeyEvent * event)","Funname":"DIconButton::keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QSize DIconButton::minimumSizeHint() cons)","Funname":"DIconButton::minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DIconButton::paintEvent(QPaintEvent * event)","Funname":"DIconButton::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DIconButton::setEnabledCircle(bool status)","Funname":"DIconButton::setEnabledCircle","Returntype":"void","Args":"bool status"},{"Uniquefunname":"void DIconButton::setFlat(bool flat)","Funname":"DIconButton::setFlat","Returntype":"void","Args":"bool flat"},{"Uniquefunname":"void DIconButton::setIcon(DStyle::StandardPixmap iconType)","Funname":"DIconButton::setIcon","Returntype":"void","Args":"DStyle::StandardPixmap iconType"},{"Uniquefunname":"void DIconButton::setIcon(QStyle::StandardPixmap iconType)","Funname":"DIconButton::setIcon","Returntype":"void","Args":"QStyle::StandardPixmap iconType"},{"Uniquefunname":"void DIconButton::setIcon(const QIcon \u0026 icon)","Funname":"DIconButton::setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void DIconButton::setNewNotification(const bool set_new)","Funname":"DIconButton::setNewNotification","Returntype":"void","Args":"const bool set_new"},{"Uniquefunname":"QSize DIconButton::sizeHint() cons)","Funname":"DIconButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"DStyleOptionButton baseStyleOption() cons)","Funname":"baseStyleOption","Returntype":"DStyleOptionButton","Args":") cons"},{"Uniquefunname":"bool enabledCircle() cons)","Funname":"enabledCircle","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QSize iconSize() cons)","Funname":"iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"bool isFlat() cons)","Funname":"isFlat","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * event)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QSize minimumSizeHint() cons)","Funname":"minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setEnabledCircle(bool status)","Funname":"setEnabledCircle","Returntype":"void","Args":"bool status"},{"Uniquefunname":"void setFlat(bool flat)","Funname":"setFlat","Returntype":"void","Args":"bool flat"},{"Uniquefunname":"void setIcon(DStyle::StandardPixmap iconType)","Funname":"setIcon","Returntype":"void","Args":"DStyle::StandardPixmap iconType"},{"Uniquefunname":"void setIcon(QStyle::StandardPixmap iconType)","Funname":"setIcon","Returntype":"void","Args":"QStyle::StandardPixmap iconType"},{"Uniquefunname":"void setIcon(const QIcon \u0026 icon)","Funname":"setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void setNewNotification(const bool set_new)","Funname":"setNewNotification","Returntype":"void","Args":"const bool set_new"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DICONBUTTON_H"]}]}
{"Filepath":"src/widgets/dimagebutton.h","Functions":[{"Uniquefunname":" DImageButton(DImageButtonPrivate \u0026 q,QWidget * parent)","Funname":"DImageButton","Returntype":"","Args":"DImageButtonPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DImageButton(QWidget * parent=0)","Funname":"DImageButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DImageButton(const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,QWidget * parent=0)","Funname":"DImageButton","Returntype":"","Args":"const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,QWidget * parent=0"},{"Uniquefunname":" DImageButton(const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,const QString \u0026 checkedPic,QWidget * parent=0)","Funname":"DImageButton","Returntype":"","Args":"const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,const QString \u0026 checkedPic,QWidget * parent=0"},{"Uniquefunname":" DImageButton::DImageButton(DImageButtonPrivate \u0026 q,QWidget * parent)","Funname":"DImageButton::DImageButton","Returntype":"","Args":"DImageButtonPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DImageButton::DImageButton(QWidget * parent=0)","Funname":"DImageButton::DImageButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DImageButton::DImageButton(const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,QWidget * parent=0)","Funname":"DImageButton::DImageButton","Returntype":"","Args":"const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,QWidget * parent=0"},{"Uniquefunname":" DImageButton::DImageButton(const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,const QString \u0026 checkedPic,QWidget * parent=0)","Funname":"DImageButton::DImageButton","Returntype":"","Args":"const QString \u0026 normalPic,const QString \u0026 hoverPic,const QString \u0026 pressPic,const QString \u0026 checkedPic,QWidget * parent=0"},{"Uniquefunname":"void DImageButton::checkedChanged(bool checked)","Funname":"DImageButton::checkedChanged","Returntype":"void","Args":"bool checked"},{"Uniquefunname":"void DImageButton::enterEvent(QEvent * event)","Funname":"DImageButton::enterEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"const QString DImageButton::getCheckedPic() cons)","Funname":"DImageButton::getCheckedPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString DImageButton::getDisabledPic() cons)","Funname":"DImageButton::getDisabledPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString DImageButton::getHoverPic() cons)","Funname":"DImageButton::getHoverPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString DImageButton::getNormalPic() cons)","Funname":"DImageButton::getNormalPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString DImageButton::getPressPic() cons)","Funname":"DImageButton::getPressPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"State DImageButton::getState() cons)","Funname":"DImageButton::getState","Returntype":"State","Args":") cons"},{"Uniquefunname":"bool DImageButton::isCheckable() cons)","Funname":"DImageButton::isCheckable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DImageButton::isChecked() cons)","Funname":"DImageButton::isChecked","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DImageButton::leaveEvent(QEvent * event)","Funname":"DImageButton::leaveEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"void DImageButton::mouseMoveEvent(QMouseEvent * event)","Funname":"DImageButton::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DImageButton::mousePressEvent(QMouseEvent * event)","Funname":"DImageButton::mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DImageButton::mouseReleaseEvent(QMouseEvent * event)","Funname":"DImageButton::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DImageButton::setCheckable(bool flag)","Funname":"DImageButton::setCheckable","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void DImageButton::setChecked(bool flag)","Funname":"DImageButton::setChecked","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void DImageButton::setCheckedPic(const QString \u0026 checkedPic)","Funname":"DImageButton::setCheckedPic","Returntype":"void","Args":"const QString \u0026 checkedPic"},{"Uniquefunname":"void DImageButton::setDisabled(bool disabled)","Funname":"DImageButton::setDisabled","Returntype":"void","Args":"bool disabled"},{"Uniquefunname":"void DImageButton::setDisabledPic(const QString \u0026 disabledPic)","Funname":"DImageButton::setDisabledPic","Returntype":"void","Args":"const QString \u0026 disabledPic"},{"Uniquefunname":"void DImageButton::setEnabled(bool enabled)","Funname":"DImageButton::setEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void DImageButton::setHoverPic(const QString \u0026 hoverPic)","Funname":"DImageButton::setHoverPic","Returntype":"void","Args":"const QString \u0026 hoverPic"},{"Uniquefunname":"void DImageButton::setNormalPic(const QString \u0026 normalPic)","Funname":"DImageButton::setNormalPic","Returntype":"void","Args":"const QString \u0026 normalPic"},{"Uniquefunname":"void DImageButton::setPressPic(const QString \u0026 pressPic)","Funname":"DImageButton::setPressPic","Returntype":"void","Args":"const QString \u0026 pressPic"},{"Uniquefunname":"void DImageButton::setState(State state)","Funname":"DImageButton::setState","Returntype":"void","Args":"State state"},{"Uniquefunname":"void DImageButton::stateChanged()","Funname":"DImageButton::stateChanged","Returntype":"void","Args":""},{"Uniquefunname":" DImageButton::~DImageButton()","Funname":"DImageButton::~DImageButton","Returntype":"","Args":""},{"Uniquefunname":"void checkedChanged(bool checked)","Funname":"checkedChanged","Returntype":"void","Args":"bool checked"},{"Uniquefunname":"void enterEvent(QEvent * event)","Funname":"enterEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"const QString getCheckedPic() cons)","Funname":"getCheckedPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString getDisabledPic() cons)","Funname":"getDisabledPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString getHoverPic() cons)","Funname":"getHoverPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString getNormalPic() cons)","Funname":"getNormalPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"const QString getPressPic() cons)","Funname":"getPressPic","Returntype":"const QString","Args":") cons"},{"Uniquefunname":"State getState() cons)","Funname":"getState","Returntype":"State","Args":") cons"},{"Uniquefunname":"bool isCheckable() cons)","Funname":"isCheckable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isChecked() cons)","Funname":"isChecked","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void leaveEvent(QEvent * event)","Funname":"leaveEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * event)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void setCheckable(bool flag)","Funname":"setCheckable","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void setChecked(bool flag)","Funname":"setChecked","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void setCheckedPic(const QString \u0026 checkedPic)","Funname":"setCheckedPic","Returntype":"void","Args":"const QString \u0026 checkedPic"},{"Uniquefunname":"void setDisabled(bool disabled)","Funname":"setDisabled","Returntype":"void","Args":"bool disabled"},{"Uniquefunname":"void setDisabledPic(const QString \u0026 disabledPic)","Funname":"setDisabledPic","Returntype":"void","Args":"const QString \u0026 disabledPic"},{"Uniquefunname":"void setEnabled(bool enabled)","Funname":"setEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setHoverPic(const QString \u0026 hoverPic)","Funname":"setHoverPic","Returntype":"void","Args":"const QString \u0026 hoverPic"},{"Uniquefunname":"void setNormalPic(const QString \u0026 normalPic)","Funname":"setNormalPic","Returntype":"void","Args":"const QString \u0026 normalPic"},{"Uniquefunname":"void setPressPic(const QString \u0026 pressPic)","Funname":"setPressPic","Returntype":"void","Args":"const QString \u0026 pressPic"},{"Uniquefunname":"void setState(State state)","Funname":"setState","Returntype":"void","Args":"State state"},{"Uniquefunname":"void stateChanged()","Funname":"stateChanged","Returntype":"void","Args":""},{"Uniquefunname":" ~DImageButton()","Funname":"~DImageButton","Returntype":"","Args":""}],"Records":[{"Name":"enum:DImageButton::State","Fields":["Checked","DImageButton::Checked","DImageButton::Disabled","DImageButton::Hover","DImageButton::Normal","DImageButton::Press","Disabled","Hover","Normal","Press"]},{"Name":"macro","Fields":["DIMAGEBUTTON_H"]}]}
{"Filepath":"src/widgets/dinputdialog.h","Functions":[{"Uniquefunname":" DInputDialog(QWidget * parent=0)","Funname":"DInputDialog","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DInputDialog::DInputDialog(QWidget * parent=0)","Funname":"DInputDialog::DInputDialog","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DInputDialog::cancelButtonClicked()","Funname":"DInputDialog::cancelButtonClicked","Returntype":"void","Args":""},{"Uniquefunname":"QString DInputDialog::cancelButtonText() cons)","Funname":"DInputDialog::cancelButtonText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int DInputDialog::comboBoxCurrentIndex() cons)","Funname":"DInputDialog::comboBoxCurrentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DInputDialog::comboBoxCurrentIndexChanged(int comboBoxCurrentIndex)","Funname":"DInputDialog::comboBoxCurrentIndexChanged","Returntype":"void","Args":"int comboBoxCurrentIndex"},{"Uniquefunname":"QStringList DInputDialog::comboBoxItems() cons)","Funname":"DInputDialog::comboBoxItems","Returntype":"QStringList","Args":") cons"},{"Uniquefunname":"int DInputDialog::doubleDecimals() cons)","Funname":"DInputDialog::doubleDecimals","Returntype":"int","Args":") cons"},{"Uniquefunname":"double DInputDialog::doubleMaximum() cons)","Funname":"DInputDialog::doubleMaximum","Returntype":"double","Args":") cons"},{"Uniquefunname":"double DInputDialog::doubleMinimum() cons)","Funname":"DInputDialog::doubleMinimum","Returntype":"double","Args":") cons"},{"Uniquefunname":"double DInputDialog::doubleValue() cons)","Funname":"DInputDialog::doubleValue","Returntype":"double","Args":") cons"},{"Uniquefunname":"void DInputDialog::doubleValueChanged(double value)","Funname":"DInputDialog::doubleValueChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"void DInputDialog::doubleValueSelected(double value)","Funname":"DInputDialog::doubleValueSelected","Returntype":"void","Args":"double value"},{"Uniquefunname":"double DInputDialog::getDouble(QWidget * parent,const QString \u0026 title,const QString \u0026 message,double value=0,double minValue=-2147483647,double maxValue=2147483647,int decimals=1,bool * ok=0,Qt::WindowFlags flags=0)","Funname":"DInputDialog::getDouble","Returntype":"double","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,double value=0,double minValue=-2147483647,double maxValue=2147483647,int decimals=1,bool * ok=0,Qt::WindowFlags flags=0"},{"Uniquefunname":"int DInputDialog::getInt(QWidget * parent,const QString \u0026 title,const QString \u0026 message,int value=0,int minValue=-2147483647,int maxValue=2147483647,int step=1,bool * ok=0,Qt::WindowFlags flags=0)","Funname":"DInputDialog::getInt","Returntype":"int","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,int value=0,int minValue=-2147483647,int maxValue=2147483647,int step=1,bool * ok=0,Qt::WindowFlags flags=0"},{"Uniquefunname":"QString DInputDialog::getItem(QWidget * parent,const QString \u0026 title,const QString \u0026 message,const QStringList \u0026 items,int current=0,bool editable=true,bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone)","Funname":"DInputDialog::getItem","Returntype":"QString","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,const QStringList \u0026 items,int current=0,bool editable=true,bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone"},{"Uniquefunname":"QString DInputDialog::getText(QWidget * parent,const QString \u0026 title,const QString \u0026 message,QLineEdit::EchoMode echo=QLineEdit::Normal,const QString \u0026 text=QString (),bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone)","Funname":"DInputDialog::getText","Returntype":"QString","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,QLineEdit::EchoMode echo=QLineEdit::Normal,const QString \u0026 text=QString (),bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone"},{"Uniquefunname":"InputMode DInputDialog::inputMode() cons)","Funname":"DInputDialog::inputMode","Returntype":"InputMode","Args":") cons"},{"Uniquefunname":"int DInputDialog::intMaximum() cons)","Funname":"DInputDialog::intMaximum","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DInputDialog::intMinimum() cons)","Funname":"DInputDialog::intMinimum","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DInputDialog::intStep() cons)","Funname":"DInputDialog::intStep","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DInputDialog::intValue() cons)","Funname":"DInputDialog::intValue","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DInputDialog::intValueChanged(int value)","Funname":"DInputDialog::intValueChanged","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DInputDialog::intValueSelected(int value)","Funname":"DInputDialog::intValueSelected","Returntype":"void","Args":"int value"},{"Uniquefunname":"bool DInputDialog::isComboBoxEditable() cons)","Funname":"DInputDialog::isComboBoxEditable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DInputDialog::isTextAlert() cons)","Funname":"DInputDialog::isTextAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DInputDialog::okButtonClicked()","Funname":"DInputDialog::okButtonClicked","Returntype":"void","Args":""},{"Uniquefunname":"bool DInputDialog::okButtonIsEnabled() cons)","Funname":"DInputDialog::okButtonIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString DInputDialog::okButtonText() cons)","Funname":"DInputDialog::okButtonText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"Q_SLOT void DInputDialog::setCancelButtonText(const QString \u0026 text)","Funname":"DInputDialog::setCancelButtonText","Returntype":"Q_SLOT void","Args":"const QString \u0026 text"},{"Uniquefunname":"Q_SLOT void DInputDialog::setComboBoxCurrentIndex(int comboBoxCurrentIndex)","Funname":"DInputDialog::setComboBoxCurrentIndex","Returntype":"Q_SLOT void","Args":"int comboBoxCurrentIndex"},{"Uniquefunname":"Q_SLOT void DInputDialog::setComboBoxEditable(bool editable)","Funname":"DInputDialog::setComboBoxEditable","Returntype":"Q_SLOT void","Args":"bool editable"},{"Uniquefunname":"Q_SLOT void DInputDialog::setComboBoxItems(const QStringList \u0026 items)","Funname":"DInputDialog::setComboBoxItems","Returntype":"Q_SLOT void","Args":"const QStringList \u0026 items"},{"Uniquefunname":"Q_SLOT void DInputDialog::setDoubleDecimals(int decimals)","Funname":"DInputDialog::setDoubleDecimals","Returntype":"Q_SLOT void","Args":"int decimals"},{"Uniquefunname":"Q_SLOT void DInputDialog::setDoubleMaximum(double max)","Funname":"DInputDialog::setDoubleMaximum","Returntype":"Q_SLOT void","Args":"double max"},{"Uniquefunname":"Q_SLOT void DInputDialog::setDoubleMinimum(double min)","Funname":"DInputDialog::setDoubleMinimum","Returntype":"Q_SLOT void","Args":"double min"},{"Uniquefunname":"Q_SLOT void DInputDialog::setDoubleRange(double min,double max)","Funname":"DInputDialog::setDoubleRange","Returntype":"Q_SLOT void","Args":"double min,double max"},{"Uniquefunname":"Q_SLOT void DInputDialog::setDoubleValue(double value)","Funname":"DInputDialog::setDoubleValue","Returntype":"Q_SLOT void","Args":"double value"},{"Uniquefunname":"Q_SLOT void DInputDialog::setInputMode(InputMode mode)","Funname":"DInputDialog::setInputMode","Returntype":"Q_SLOT void","Args":"InputMode mode"},{"Uniquefunname":"Q_SLOT void DInputDialog::setIntMaximum(int max)","Funname":"DInputDialog::setIntMaximum","Returntype":"Q_SLOT void","Args":"int max"},{"Uniquefunname":"Q_SLOT void DInputDialog::setIntMinimum(int min)","Funname":"DInputDialog::setIntMinimum","Returntype":"Q_SLOT void","Args":"int min"},{"Uniquefunname":"Q_SLOT void DInputDialog::setIntRange(int min,int max)","Funname":"DInputDialog::setIntRange","Returntype":"Q_SLOT void","Args":"int min,int max"},{"Uniquefunname":"Q_SLOT void DInputDialog::setIntStep(int step)","Funname":"DInputDialog::setIntStep","Returntype":"Q_SLOT void","Args":"int step"},{"Uniquefunname":"Q_SLOT void DInputDialog::setIntValue(int value)","Funname":"DInputDialog::setIntValue","Returntype":"Q_SLOT void","Args":"int value"},{"Uniquefunname":"Q_SLOT void DInputDialog::setOkButtonEnabled(const bool enable)","Funname":"DInputDialog::setOkButtonEnabled","Returntype":"Q_SLOT void","Args":"const bool enable"},{"Uniquefunname":"Q_SLOT void DInputDialog::setOkButtonText(const QString \u0026 text)","Funname":"DInputDialog::setOkButtonText","Returntype":"Q_SLOT void","Args":"const QString \u0026 text"},{"Uniquefunname":"Q_SLOT void DInputDialog::setTextAlert(bool textAlert)","Funname":"DInputDialog::setTextAlert","Returntype":"Q_SLOT void","Args":"bool textAlert"},{"Uniquefunname":"Q_SLOT void DInputDialog::setTextEchoMode(QLineEdit::EchoMode mode)","Funname":"DInputDialog::setTextEchoMode","Returntype":"Q_SLOT void","Args":"QLineEdit::EchoMode mode"},{"Uniquefunname":"Q_SLOT void DInputDialog::setTextValue(const QString \u0026 text)","Funname":"DInputDialog::setTextValue","Returntype":"Q_SLOT void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DInputDialog::showEvent(QShowEvent * e)","Funname":"DInputDialog::showEvent","Returntype":"void","Args":"QShowEvent * e"},{"Uniquefunname":"void DInputDialog::textAlertChanged(bool textAlert)","Funname":"DInputDialog::textAlertChanged","Returntype":"void","Args":"bool textAlert"},{"Uniquefunname":"QLineEdit DInputDialog::textEchoMode() cons)","Funname":"DInputDialog::textEchoMode","Returntype":"QLineEdit","Args":") cons"},{"Uniquefunname":"QString DInputDialog::textValue() cons)","Funname":"DInputDialog::textValue","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DInputDialog::textValueSelected(const QString \u0026 text)","Funname":"DInputDialog::textValueSelected","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void cancelButtonClicked()","Funname":"cancelButtonClicked","Returntype":"void","Args":""},{"Uniquefunname":"QString cancelButtonText() cons)","Funname":"cancelButtonText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"int comboBoxCurrentIndex() cons)","Funname":"comboBoxCurrentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void comboBoxCurrentIndexChanged(int comboBoxCurrentIndex)","Funname":"comboBoxCurrentIndexChanged","Returntype":"void","Args":"int comboBoxCurrentIndex"},{"Uniquefunname":"QStringList comboBoxItems() cons)","Funname":"comboBoxItems","Returntype":"QStringList","Args":") cons"},{"Uniquefunname":"int doubleDecimals() cons)","Funname":"doubleDecimals","Returntype":"int","Args":") cons"},{"Uniquefunname":"double doubleMaximum() cons)","Funname":"doubleMaximum","Returntype":"double","Args":") cons"},{"Uniquefunname":"double doubleMinimum() cons)","Funname":"doubleMinimum","Returntype":"double","Args":") cons"},{"Uniquefunname":"double doubleValue() cons)","Funname":"doubleValue","Returntype":"double","Args":") cons"},{"Uniquefunname":"void doubleValueChanged(double value)","Funname":"doubleValueChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"void doubleValueSelected(double value)","Funname":"doubleValueSelected","Returntype":"void","Args":"double value"},{"Uniquefunname":"double getDouble(QWidget * parent,const QString \u0026 title,const QString \u0026 message,double value=0,double minValue=-2147483647,double maxValue=2147483647,int decimals=1,bool * ok=0,Qt::WindowFlags flags=0)","Funname":"getDouble","Returntype":"double","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,double value=0,double minValue=-2147483647,double maxValue=2147483647,int decimals=1,bool * ok=0,Qt::WindowFlags flags=0"},{"Uniquefunname":"int getInt(QWidget * parent,const QString \u0026 title,const QString \u0026 message,int value=0,int minValue=-2147483647,int maxValue=2147483647,int step=1,bool * ok=0,Qt::WindowFlags flags=0)","Funname":"getInt","Returntype":"int","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,int value=0,int minValue=-2147483647,int maxValue=2147483647,int step=1,bool * ok=0,Qt::WindowFlags flags=0"},{"Uniquefunname":"QString getItem(QWidget * parent,const QString \u0026 title,const QString \u0026 message,const QStringList \u0026 items,int current=0,bool editable=true,bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone)","Funname":"getItem","Returntype":"QString","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,const QStringList \u0026 items,int current=0,bool editable=true,bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone"},{"Uniquefunname":"QString getText(QWidget * parent,const QString \u0026 title,const QString \u0026 message,QLineEdit::EchoMode echo=QLineEdit::Normal,const QString \u0026 text=QString (),bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone)","Funname":"getText","Returntype":"QString","Args":"QWidget * parent,const QString \u0026 title,const QString \u0026 message,QLineEdit::EchoMode echo=QLineEdit::Normal,const QString \u0026 text=QString (),bool * ok=0,Qt::WindowFlags flags=0,Qt::InputMethodHints inputMethodHints=Qt::ImhNone"},{"Uniquefunname":"InputMode inputMode() cons)","Funname":"inputMode","Returntype":"InputMode","Args":") cons"},{"Uniquefunname":"int intMaximum() cons)","Funname":"intMaximum","Returntype":"int","Args":") cons"},{"Uniquefunname":"int intMinimum() cons)","Funname":"intMinimum","Returntype":"int","Args":") cons"},{"Uniquefunname":"int intStep() cons)","Funname":"intStep","Returntype":"int","Args":") cons"},{"Uniquefunname":"int intValue() cons)","Funname":"intValue","Returntype":"int","Args":") cons"},{"Uniquefunname":"void intValueChanged(int value)","Funname":"intValueChanged","Returntype":"void","Args":"int value"},{"Uniquefunname":"void intValueSelected(int value)","Funname":"intValueSelected","Returntype":"void","Args":"int value"},{"Uniquefunname":"bool isComboBoxEditable() cons)","Funname":"isComboBoxEditable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isTextAlert() cons)","Funname":"isTextAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void okButtonClicked()","Funname":"okButtonClicked","Returntype":"void","Args":""},{"Uniquefunname":"bool okButtonIsEnabled() cons)","Funname":"okButtonIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString okButtonText() cons)","Funname":"okButtonText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"Q_SLOT void setCancelButtonText(const QString \u0026 text)","Funname":"setCancelButtonText","Returntype":"Q_SLOT void","Args":"const QString \u0026 text"},{"Uniquefunname":"Q_SLOT void setComboBoxCurrentIndex(int comboBoxCurrentIndex)","Funname":"setComboBoxCurrentIndex","Returntype":"Q_SLOT void","Args":"int comboBoxCurrentIndex"},{"Uniquefunname":"Q_SLOT void setComboBoxEditable(bool editable)","Funname":"setComboBoxEditable","Returntype":"Q_SLOT void","Args":"bool editable"},{"Uniquefunname":"Q_SLOT void setComboBoxItems(const QStringList \u0026 items)","Funname":"setComboBoxItems","Returntype":"Q_SLOT void","Args":"const QStringList \u0026 items"},{"Uniquefunname":"Q_SLOT void setDoubleDecimals(int decimals)","Funname":"setDoubleDecimals","Returntype":"Q_SLOT void","Args":"int decimals"},{"Uniquefunname":"Q_SLOT void setDoubleMaximum(double max)","Funname":"setDoubleMaximum","Returntype":"Q_SLOT void","Args":"double max"},{"Uniquefunname":"Q_SLOT void setDoubleMinimum(double min)","Funname":"setDoubleMinimum","Returntype":"Q_SLOT void","Args":"double min"},{"Uniquefunname":"Q_SLOT void setDoubleRange(double min,double max)","Funname":"setDoubleRange","Returntype":"Q_SLOT void","Args":"double min,double max"},{"Uniquefunname":"Q_SLOT void setDoubleValue(double value)","Funname":"setDoubleValue","Returntype":"Q_SLOT void","Args":"double value"},{"Uniquefunname":"Q_SLOT void setInputMode(InputMode mode)","Funname":"setInputMode","Returntype":"Q_SLOT void","Args":"InputMode mode"},{"Uniquefunname":"Q_SLOT void setIntMaximum(int max)","Funname":"setIntMaximum","Returntype":"Q_SLOT void","Args":"int max"},{"Uniquefunname":"Q_SLOT void setIntMinimum(int min)","Funname":"setIntMinimum","Returntype":"Q_SLOT void","Args":"int min"},{"Uniquefunname":"Q_SLOT void setIntRange(int min,int max)","Funname":"setIntRange","Returntype":"Q_SLOT void","Args":"int min,int max"},{"Uniquefunname":"Q_SLOT void setIntStep(int step)","Funname":"setIntStep","Returntype":"Q_SLOT void","Args":"int step"},{"Uniquefunname":"Q_SLOT void setIntValue(int value)","Funname":"setIntValue","Returntype":"Q_SLOT void","Args":"int value"},{"Uniquefunname":"Q_SLOT void setOkButtonEnabled(const bool enable)","Funname":"setOkButtonEnabled","Returntype":"Q_SLOT void","Args":"const bool enable"},{"Uniquefunname":"Q_SLOT void setOkButtonText(const QString \u0026 text)","Funname":"setOkButtonText","Returntype":"Q_SLOT void","Args":"const QString \u0026 text"},{"Uniquefunname":"Q_SLOT void setTextAlert(bool textAlert)","Funname":"setTextAlert","Returntype":"Q_SLOT void","Args":"bool textAlert"},{"Uniquefunname":"Q_SLOT void setTextEchoMode(QLineEdit::EchoMode mode)","Funname":"setTextEchoMode","Returntype":"Q_SLOT void","Args":"QLineEdit::EchoMode mode"},{"Uniquefunname":"Q_SLOT void setTextValue(const QString \u0026 text)","Funname":"setTextValue","Returntype":"Q_SLOT void","Args":"const QString \u0026 text"},{"Uniquefunname":"void showEvent(QShowEvent * e)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * e"},{"Uniquefunname":"void textAlertChanged(bool textAlert)","Funname":"textAlertChanged","Returntype":"void","Args":"bool textAlert"},{"Uniquefunname":"QLineEdit textEchoMode() cons)","Funname":"textEchoMode","Returntype":"QLineEdit","Args":") cons"},{"Uniquefunname":"QString textValue() cons)","Funname":"textValue","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void textValueSelected(const QString \u0026 text)","Funname":"textValueSelected","Returntype":"void","Args":"const QString \u0026 text"}],"Records":[{"Name":"enum:DInputDialog::InputMode","Fields":["ComboBox","DInputDialog::ComboBox","DInputDialog::DoubleInput","DInputDialog::IntInput","DInputDialog::TextInput","DoubleInput","IntInput","TextInput"]},{"Name":"macro","Fields":["DINPUTDIALOG_H"]}]}
{"Filepath":"src/widgets/dinputdialog_p.h","Functions":null,"Records":[{"Name":"macro","Fields":["DINPUTDIALOG_P_H"]}]}
{"Filepath":"src/widgets/dipv4lineedit.h","Functions":[{"Uniquefunname":" DIpv4LineEdit(DIpv4LineEditPrivate \u0026 q,QWidget * parent)","Funname":"DIpv4LineEdit","Returntype":"","Args":"DIpv4LineEditPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DIpv4LineEdit(QWidget * parent=0)","Funname":"DIpv4LineEdit","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DIpv4LineEdit::DIpv4LineEdit(DIpv4LineEditPrivate \u0026 q,QWidget * parent)","Funname":"DIpv4LineEdit::DIpv4LineEdit","Returntype":"","Args":"DIpv4LineEditPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DIpv4LineEdit::DIpv4LineEdit(QWidget * parent=0)","Funname":"DIpv4LineEdit::DIpv4LineEdit","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"Qt DIpv4LineEdit::alignment() cons)","Funname":"DIpv4LineEdit::alignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"int DIpv4LineEdit::cursorPosition() cons)","Funname":"DIpv4LineEdit::cursorPosition","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString DIpv4LineEdit::displayText() cons)","Funname":"DIpv4LineEdit::displayText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool DIpv4LineEdit::eventFilter(QObject * obj,QEvent * e)","Funname":"DIpv4LineEdit::eventFilter","Returntype":"bool","Args":"QObject * obj,QEvent * e"},{"Uniquefunname":"bool DIpv4LineEdit::hasAcceptableInput() cons)","Funname":"DIpv4LineEdit::hasAcceptableInput","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DIpv4LineEdit::isReadOnly() cons)","Funname":"DIpv4LineEdit::isReadOnly","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DIpv4LineEdit::resizeEvent(QResizeEvent * event)","Funname":"DIpv4LineEdit::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DIpv4LineEdit::selectAll()","Funname":"DIpv4LineEdit::selectAll","Returntype":"void","Args":""},{"Uniquefunname":"void DIpv4LineEdit::setClearButtonEnabled(bool clearButtonEnabled)","Funname":"DIpv4LineEdit::setClearButtonEnabled","Returntype":"void","Args":"bool clearButtonEnabled"},{"Uniquefunname":"void DIpv4LineEdit::setCursorPosition(int cursorPosition)","Funname":"DIpv4LineEdit::setCursorPosition","Returntype":"void","Args":"int cursorPosition"},{"Uniquefunname":"void DIpv4LineEdit::setPlaceholderText(QString placeholderText)","Funname":"DIpv4LineEdit::setPlaceholderText","Returntype":"void","Args":"QString placeholderText"},{"Uniquefunname":"void DIpv4LineEdit::setReadOnly(bool readOnly)","Funname":"DIpv4LineEdit::setReadOnly","Returntype":"void","Args":"bool readOnly"},{"Uniquefunname":"void DIpv4LineEdit::setSelection(int start,int length)","Funname":"DIpv4LineEdit::setSelection","Returntype":"void","Args":"int start,int length"},{"Uniquefunname":"Qt alignment() cons)","Funname":"alignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"int cursorPosition() cons)","Funname":"cursorPosition","Returntype":"int","Args":") cons"},{"Uniquefunname":"QString displayText() cons)","Funname":"displayText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"bool eventFilter(QObject * obj,QEvent * e)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * obj,QEvent * e"},{"Uniquefunname":"bool hasAcceptableInput() cons)","Funname":"hasAcceptableInput","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isReadOnly() cons)","Funname":"isReadOnly","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void selectAll()","Funname":"selectAll","Returntype":"void","Args":""},{"Uniquefunname":"void setClearButtonEnabled(bool clearButtonEnabled)","Funname":"setClearButtonEnabled","Returntype":"void","Args":"bool clearButtonEnabled"},{"Uniquefunname":"void setCursorPosition(int cursorPosition)","Funname":"setCursorPosition","Returntype":"void","Args":"int cursorPosition"},{"Uniquefunname":"void setPlaceholderText(QString placeholderText)","Funname":"setPlaceholderText","Returntype":"void","Args":"QString placeholderText"},{"Uniquefunname":"void setReadOnly(bool readOnly)","Funname":"setReadOnly","Returntype":"void","Args":"bool readOnly"},{"Uniquefunname":"void setSelection(int start,int length)","Funname":"setSelection","Returntype":"void","Args":"int start,int length"}],"Records":[{"Name":"macro","Fields":["DIPV4LINEEDIT_H"]}]}
{"Filepath":"src/widgets/dkeysequenceedit.h","Functions":[{"Uniquefunname":" DKeySequenceEdit(QWidget * parent=nullptr)","Funname":"DKeySequenceEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DKeySequenceEdit::DKeySequenceEdit(QWidget * parent=nullptr)","Funname":"DKeySequenceEdit::DKeySequenceEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DKeySequenceEdit::ShortcutDirection(Qt::AlignmentFlag alig)","Funname":"DKeySequenceEdit::ShortcutDirection","Returntype":"void","Args":"Qt::AlignmentFlag alig"},{"Uniquefunname":"void DKeySequenceEdit::clear()","Funname":"DKeySequenceEdit::clear","Returntype":"void","Args":""},{"Uniquefunname":"bool DKeySequenceEdit::event(QEvent * e)","Funname":"DKeySequenceEdit::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QString DKeySequenceEdit::getKeySequence(QKeySequence sequence)","Funname":"DKeySequenceEdit::getKeySequence","Returntype":"QString","Args":"QKeySequence sequence"},{"Uniquefunname":"void DKeySequenceEdit::keyPressEvent(QKeyEvent * event)","Funname":"DKeySequenceEdit::keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QKeySequence DKeySequenceEdit::keySequence()","Funname":"DKeySequenceEdit::keySequence","Returntype":"QKeySequence","Args":""},{"Uniquefunname":"void DKeySequenceEdit::keySequenceChanged(const QKeySequence \u0026 keySequence)","Funname":"DKeySequenceEdit::keySequenceChanged","Returntype":"void","Args":"const QKeySequence \u0026 keySequence"},{"Uniquefunname":"bool DKeySequenceEdit::setKeySequence(const QKeySequence \u0026 keySequence)","Funname":"DKeySequenceEdit::setKeySequence","Returntype":"bool","Args":"const QKeySequence \u0026 keySequence"},{"Uniquefunname":"void ShortcutDirection(Qt::AlignmentFlag alig)","Funname":"ShortcutDirection","Returntype":"void","Args":"Qt::AlignmentFlag alig"},{"Uniquefunname":"void clear()","Funname":"clear","Returntype":"void","Args":""},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"QString getKeySequence(QKeySequence sequence)","Funname":"getKeySequence","Returntype":"QString","Args":"QKeySequence sequence"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * event)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * event"},{"Uniquefunname":"QKeySequence keySequence()","Funname":"keySequence","Returntype":"QKeySequence","Args":""},{"Uniquefunname":"void keySequenceChanged(const QKeySequence \u0026 keySequence)","Funname":"keySequenceChanged","Returntype":"void","Args":"const QKeySequence \u0026 keySequence"},{"Uniquefunname":"bool setKeySequence(const QKeySequence \u0026 keySequence)","Funname":"setKeySequence","Returntype":"bool","Args":"const QKeySequence \u0026 keySequence"}],"Records":[{"Name":"macro","Fields":["DKEYSEQUENCEEDIT_H"]}]}
{"Filepath":"src/widgets/dlabel.h","Functions":[{"Uniquefunname":" DLabel(DLabelPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DLabel","Returntype":"","Args":"DLabelPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DLabel(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DLabel","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":" DLabel(QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ())","Funname":"DLabel","Returntype":"","Args":"QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ()"},{"Uniquefunname":" DLabel::DLabel(DLabelPrivate \u0026 dd,QWidget * parent=nullptr)","Funname":"DLabel::DLabel","Returntype":"","Args":"DLabelPrivate \u0026 dd,QWidget * parent=nullptr"},{"Uniquefunname":" DLabel::DLabel(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DLabel::DLabel","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":" DLabel::DLabel(QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ())","Funname":"DLabel::DLabel","Returntype":"","Args":"QWidget * parent=nullptr,Qt::WindowFlags f=Qt::WindowFlags ()"},{"Uniquefunname":"Qt DLabel::elideMode() cons)","Funname":"DLabel::elideMode","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DLabel::initPainter(QPainter * painter) cons)","Funname":"DLabel::initPainter","Returntype":"void","Args":"QPainter * painter) cons"},{"Uniquefunname":"void DLabel::paintEvent(QPaintEvent * event)","Funname":"DLabel::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DLabel::setElideMode(Qt::TextElideMode elideMode)","Funname":"DLabel::setElideMode","Returntype":"void","Args":"Qt::TextElideMode elideMode"},{"Uniquefunname":"void DLabel::setForegroundRole(DPalette::ColorType color)","Funname":"DLabel::setForegroundRole","Returntype":"void","Args":"DPalette::ColorType color"},{"Uniquefunname":"void DLabel::setForegroundRole(QPalette::ColorRole role)","Funname":"DLabel::setForegroundRole","Returntype":"void","Args":"QPalette::ColorRole role"},{"Uniquefunname":" DLabel::~DLabel()","Funname":"DLabel::~DLabel","Returntype":"","Args":""},{"Uniquefunname":"Qt elideMode() cons)","Funname":"elideMode","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void initPainter(QPainter * painter) cons)","Funname":"initPainter","Returntype":"void","Args":"QPainter * painter) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setElideMode(Qt::TextElideMode elideMode)","Funname":"setElideMode","Returntype":"void","Args":"Qt::TextElideMode elideMode"},{"Uniquefunname":"void setForegroundRole(DPalette::ColorType color)","Funname":"setForegroundRole","Returntype":"void","Args":"DPalette::ColorType color"},{"Uniquefunname":"void setForegroundRole(QPalette::ColorRole role)","Funname":"setForegroundRole","Returntype":"void","Args":"QPalette::ColorRole role"},{"Uniquefunname":" ~DLabel()","Funname":"~DLabel","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DLABEL_H"]}]}
{"Filepath":"src/widgets/dlineedit.h","Functions":[{"Uniquefunname":" DLineEdit(DLineEditPrivate \u0026 q,QWidget * parent)","Funname":"DLineEdit","Returntype":"","Args":"DLineEditPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DLineEdit(QWidget * parent=nullptr)","Funname":"DLineEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DLineEdit::DLineEdit(DLineEditPrivate \u0026 q,QWidget * parent)","Funname":"DLineEdit::DLineEdit","Returntype":"","Args":"DLineEditPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DLineEdit::DLineEdit(QWidget * parent=nullptr)","Funname":"DLineEdit::DLineEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"Qt DLineEdit::alertMessageAlignment() cons)","Funname":"DLineEdit::alertMessageAlignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DLineEdit::clear()","Funname":"DLineEdit::clear","Returntype":"void","Args":""},{"Uniquefunname":"void DLineEdit::cursorPositionChanged(int,int)","Funname":"DLineEdit::cursorPositionChanged","Returntype":"void","Args":"int,int"},{"Uniquefunname":"QLineEdit DLineEdit::echoMode() cons)","Funname":"DLineEdit::echoMode","Returntype":"QLineEdit","Args":") cons"},{"Uniquefunname":"void DLineEdit::editingFinished()","Funname":"DLineEdit::editingFinished","Returntype":"void","Args":""},{"Uniquefunname":"bool DLineEdit::event(QEvent * event)","Funname":"DLineEdit::event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool DLineEdit::eventFilter(QObject * watched,QEvent * event)","Funname":"DLineEdit::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void DLineEdit::focusChanged(bool onFocus) cons)","Funname":"DLineEdit::focusChanged","Returntype":"void","Args":"bool onFocus) cons"},{"Uniquefunname":"void DLineEdit::hideAlertMessage()","Funname":"DLineEdit::hideAlertMessage","Returntype":"void","Args":""},{"Uniquefunname":"bool DLineEdit::isAlert() cons)","Funname":"DLineEdit::isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DLineEdit::isClearButtonEnabled() cons)","Funname":"DLineEdit::isClearButtonEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QLineEdit * DLineEdit::lineEdit() cons)","Funname":"DLineEdit::lineEdit","Returntype":"QLineEdit *","Args":") cons"},{"Uniquefunname":"void DLineEdit::returnPressed()","Funname":"DLineEdit::returnPressed","Returntype":"void","Args":""},{"Uniquefunname":"void DLineEdit::selectionChanged()","Funname":"DLineEdit::selectionChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DLineEdit::setAlert(bool isAlert)","Funname":"DLineEdit::setAlert","Returntype":"void","Args":"bool isAlert"},{"Uniquefunname":"void DLineEdit::setAlertMessageAlignment(Qt::Alignment alignment)","Funname":"DLineEdit::setAlertMessageAlignment","Returntype":"void","Args":"Qt::Alignment alignment"},{"Uniquefunname":"void DLineEdit::setClearButtonEnabled(bool enable)","Funname":"DLineEdit::setClearButtonEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DLineEdit::setContextMenuPolicy(Qt::ContextMenuPolicy policy)","Funname":"DLineEdit::setContextMenuPolicy","Returntype":"void","Args":"Qt::ContextMenuPolicy policy"},{"Uniquefunname":"void DLineEdit::setEchoMode(QLineEdit::EchoMode mode)","Funname":"DLineEdit::setEchoMode","Returntype":"void","Args":"QLineEdit::EchoMode mode"},{"Uniquefunname":"void DLineEdit::setLeftWidgets(const QList\u003cQWidget * \u003e \u0026 list)","Funname":"DLineEdit::setLeftWidgets","Returntype":"void","Args":"const QList\u003cQWidget * \u003e \u0026 list"},{"Uniquefunname":"void DLineEdit::setLeftWidgetsVisible(bool visible)","Funname":"DLineEdit::setLeftWidgetsVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DLineEdit::setPlaceholderText(const QString \u0026)","Funname":"DLineEdit::setPlaceholderText","Returntype":"void","Args":"const QString \u0026"},{"Uniquefunname":"void DLineEdit::setRightWidgets(const QList\u003cQWidget * \u003e \u0026 list)","Funname":"DLineEdit::setRightWidgets","Returntype":"void","Args":"const QList\u003cQWidget * \u003e \u0026 list"},{"Uniquefunname":"void DLineEdit::setRightWidgetsVisible(bool visible)","Funname":"DLineEdit::setRightWidgetsVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DLineEdit::setSpeechToTextEnabled(bool enable)","Funname":"DLineEdit::setSpeechToTextEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DLineEdit::setText(const QString \u0026 text)","Funname":"DLineEdit::setText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DLineEdit::setTextToSpeechEnabled(bool enable)","Funname":"DLineEdit::setTextToSpeechEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DLineEdit::setTextToTranslateEnabled(bool enable)","Funname":"DLineEdit::setTextToTranslateEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DLineEdit::showAlertMessage(const QString \u0026 text,QWidget * follower,int duration=3000)","Funname":"DLineEdit::showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,QWidget * follower,int duration=3000"},{"Uniquefunname":"void DLineEdit::showAlertMessage(const QString \u0026 text,int duration=3000)","Funname":"DLineEdit::showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,int duration=3000"},{"Uniquefunname":"bool DLineEdit::speechToTextIsEnabled() cons)","Funname":"DLineEdit::speechToTextIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString DLineEdit::text()","Funname":"DLineEdit::text","Returntype":"QString","Args":""},{"Uniquefunname":"void DLineEdit::textChanged(const QString \u0026)","Funname":"DLineEdit::textChanged","Returntype":"void","Args":"const QString \u0026"},{"Uniquefunname":"void DLineEdit::textEdited(const QString \u0026)","Funname":"DLineEdit::textEdited","Returntype":"void","Args":"const QString \u0026"},{"Uniquefunname":"bool DLineEdit::textToSpeechIsEnabled() cons)","Funname":"DLineEdit::textToSpeechIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DLineEdit::textToTranslateIsEnabled() cons)","Funname":"DLineEdit::textToTranslateIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"Qt alertMessageAlignment() cons)","Funname":"alertMessageAlignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void clear()","Funname":"clear","Returntype":"void","Args":""},{"Uniquefunname":"void cursorPositionChanged(int,int)","Funname":"cursorPositionChanged","Returntype":"void","Args":"int,int"},{"Uniquefunname":"QLineEdit echoMode() cons)","Funname":"echoMode","Returntype":"QLineEdit","Args":") cons"},{"Uniquefunname":"void editingFinished()","Funname":"editingFinished","Returntype":"void","Args":""},{"Uniquefunname":"bool event(QEvent * event)","Funname":"event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void focusChanged(bool onFocus) cons)","Funname":"focusChanged","Returntype":"void","Args":"bool onFocus) cons"},{"Uniquefunname":"void hideAlertMessage()","Funname":"hideAlertMessage","Returntype":"void","Args":""},{"Uniquefunname":"bool isAlert() cons)","Funname":"isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isClearButtonEnabled() cons)","Funname":"isClearButtonEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QLineEdit * lineEdit() cons)","Funname":"lineEdit","Returntype":"QLineEdit *","Args":") cons"},{"Uniquefunname":"void returnPressed()","Funname":"returnPressed","Returntype":"void","Args":""},{"Uniquefunname":"void selectionChanged()","Funname":"selectionChanged","Returntype":"void","Args":""},{"Uniquefunname":"void setAlert(bool isAlert)","Funname":"setAlert","Returntype":"void","Args":"bool isAlert"},{"Uniquefunname":"void setAlertMessageAlignment(Qt::Alignment alignment)","Funname":"setAlertMessageAlignment","Returntype":"void","Args":"Qt::Alignment alignment"},{"Uniquefunname":"void setClearButtonEnabled(bool enable)","Funname":"setClearButtonEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setContextMenuPolicy(Qt::ContextMenuPolicy policy)","Funname":"setContextMenuPolicy","Returntype":"void","Args":"Qt::ContextMenuPolicy policy"},{"Uniquefunname":"void setEchoMode(QLineEdit::EchoMode mode)","Funname":"setEchoMode","Returntype":"void","Args":"QLineEdit::EchoMode mode"},{"Uniquefunname":"void setLeftWidgets(const QList\u003cQWidget * \u003e \u0026 list)","Funname":"setLeftWidgets","Returntype":"void","Args":"const QList\u003cQWidget * \u003e \u0026 list"},{"Uniquefunname":"void setLeftWidgetsVisible(bool visible)","Funname":"setLeftWidgetsVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setPlaceholderText(const QString \u0026)","Funname":"setPlaceholderText","Returntype":"void","Args":"const QString \u0026"},{"Uniquefunname":"void setRightWidgets(const QList\u003cQWidget * \u003e \u0026 list)","Funname":"setRightWidgets","Returntype":"void","Args":"const QList\u003cQWidget * \u003e \u0026 list"},{"Uniquefunname":"void setRightWidgetsVisible(bool visible)","Funname":"setRightWidgetsVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setSpeechToTextEnabled(bool enable)","Funname":"setSpeechToTextEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setText(const QString \u0026 text)","Funname":"setText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void setTextToSpeechEnabled(bool enable)","Funname":"setTextToSpeechEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setTextToTranslateEnabled(bool enable)","Funname":"setTextToTranslateEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void showAlertMessage(const QString \u0026 text,QWidget * follower,int duration=3000)","Funname":"showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,QWidget * follower,int duration=3000"},{"Uniquefunname":"void showAlertMessage(const QString \u0026 text,int duration=3000)","Funname":"showAlertMessage","Returntype":"void","Args":"const QString \u0026 text,int duration=3000"},{"Uniquefunname":"bool speechToTextIsEnabled() cons)","Funname":"speechToTextIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString text()","Funname":"text","Returntype":"QString","Args":""},{"Uniquefunname":"void textChanged(const QString \u0026)","Funname":"textChanged","Returntype":"void","Args":"const QString \u0026"},{"Uniquefunname":"void textEdited(const QString \u0026)","Funname":"textEdited","Returntype":"void","Args":"const QString \u0026"},{"Uniquefunname":"bool textToSpeechIsEnabled() cons)","Funname":"textToSpeechIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool textToTranslateIsEnabled() cons)","Funname":"textToTranslateIsEnabled","Returntype":"bool","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DLINEEDIT_H"]}]}
{"Filepath":"src/widgets/dlistview.h","Functions":[{"Uniquefunname":" DListView(QWidget * parent=0)","Funname":"DListView","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DListView::DListView(QWidget * parent=0)","Funname":"DListView::DListView","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DListView::addFooterWidget(QWidget * widget)","Funname":"DListView::addFooterWidget","Returntype":"int","Args":"QWidget * widget"},{"Uniquefunname":"int DListView::addHeaderWidget(QWidget * widget)","Funname":"DListView::addHeaderWidget","Returntype":"int","Args":"QWidget * widget"},{"Uniquefunname":"bool DListView::addItem(const QVariant \u0026 data)","Funname":"DListView::addItem","Returntype":"bool","Args":"const QVariant \u0026 data"},{"Uniquefunname":"bool DListView::addItems(const QVariantList \u0026 datas)","Funname":"DListView::addItems","Returntype":"bool","Args":"const QVariantList \u0026 datas"},{"Uniquefunname":"DStyledItemDelegate DListView::backgroundType() cons)","Funname":"DListView::backgroundType","Returntype":"DStyledItemDelegate","Args":") cons"},{"Uniquefunname":"int DListView::count() cons)","Funname":"DListView::count","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DListView::currentChanged(const QModelIndex \u0026 current,const QModelIndex \u0026 previous)","Funname":"DListView::currentChanged","Returntype":"void","Args":"const QModelIndex \u0026 current,const QModelIndex \u0026 previous"},{"Uniquefunname":"void DListView::currentChanged(const QModelIndex \u0026 previous)","Funname":"DListView::currentChanged","Returntype":"void","Args":"const QModelIndex \u0026 previous"},{"Uniquefunname":"bool DListView::edit(const QModelIndex \u0026 index,EditTrigger trigger,QEvent * event)","Funname":"DListView::edit","Returntype":"bool","Args":"const QModelIndex \u0026 index,EditTrigger trigger,QEvent * event"},{"Uniquefunname":"void DListView::edit(const QModelIndex \u0026 index)","Funname":"DListView::edit","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QWidget * DListView::getFooterWidget(int index) cons)","Funname":"DListView::getFooterWidget","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"QWidget * DListView::getHeaderWidget(int index) cons)","Funname":"DListView::getHeaderWidget","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"int DListView::horizontalOffset() cons)","Funname":"DListView::horizontalOffset","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool DListView::insertItem(int index,const QVariant \u0026 data)","Funname":"DListView::insertItem","Returntype":"bool","Args":"int index,const QVariant \u0026 data"},{"Uniquefunname":"bool DListView::insertItems(int index,const QVariantList \u0026 datas)","Funname":"DListView::insertItems","Returntype":"bool","Args":"int index,const QVariantList \u0026 datas"},{"Uniquefunname":"bool DListView::isActiveRect(const QRect \u0026 rect) cons)","Funname":"DListView::isActiveRect","Returntype":"bool","Args":"const QRect \u0026 rect) cons"},{"Uniquefunname":"bool DListView::isVisualRect(const QRect \u0026 rect) cons)","Funname":"DListView::isVisualRect","Returntype":"bool","Args":"const QRect \u0026 rect) cons"},{"Uniquefunname":"QMargins DListView::itemMargins() cons)","Funname":"DListView::itemMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"QSize DListView::itemSize() cons)","Funname":"DListView::itemSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSize DListView::minimumSizeHint() cons)","Funname":"DListView::minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QModelIndex DListView::moveCursor(CursorAction cursorAction,Qt::KeyboardModifiers modifiers)","Funname":"DListView::moveCursor","Returntype":"QModelIndex","Args":"CursorAction cursorAction,Qt::KeyboardModifiers modifiers"},{"Uniquefunname":"Qt DListView::orientation() cons)","Funname":"DListView::orientation","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DListView::orientationChanged(Qt::Orientation orientation)","Funname":"DListView::orientationChanged","Returntype":"void","Args":"Qt::Orientation orientation"},{"Uniquefunname":"void DListView::removeFooterWidget(int index)","Funname":"DListView::removeFooterWidget","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DListView::removeHeaderWidget(int index)","Funname":"DListView::removeHeaderWidget","Returntype":"void","Args":"int index"},{"Uniquefunname":"bool DListView::removeItem(int index)","Funname":"DListView::removeItem","Returntype":"bool","Args":"int index"},{"Uniquefunname":"bool DListView::removeItems(int index,int count)","Funname":"DListView::removeItems","Returntype":"bool","Args":"int index,int count"},{"Uniquefunname":"void DListView::resizeEvent(QResizeEvent * event)","Funname":"DListView::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DListView::setBackgroundType(DStyledItemDelegate::BackgroundType backgroundType)","Funname":"DListView::setBackgroundType","Returntype":"void","Args":"DStyledItemDelegate::BackgroundType backgroundType"},{"Uniquefunname":"void DListView::setFlow(QListView::Flow flow)","Funname":"DListView::setFlow","Returntype":"void","Args":"QListView::Flow flow"},{"Uniquefunname":"void DListView::setItemMargins(const QMargins \u0026 itemMargins)","Funname":"DListView::setItemMargins","Returntype":"void","Args":"const QMargins \u0026 itemMargins"},{"Uniquefunname":"void DListView::setItemRadius(int radius)","Funname":"DListView::setItemRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void DListView::setItemSize(QSize itemSize)","Funname":"DListView::setItemSize","Returntype":"void","Args":"QSize itemSize"},{"Uniquefunname":"void DListView::setItemSpacing(int spacing)","Funname":"DListView::setItemSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void DListView::setModel(QAbstractItemModel * model)","Funname":"DListView::setModel","Returntype":"void","Args":"QAbstractItemModel * model"},{"Uniquefunname":"void DListView::setOrientation(QListView::Flow flow,bool wrapping)","Funname":"DListView::setOrientation","Returntype":"void","Args":"QListView::Flow flow,bool wrapping"},{"Uniquefunname":"void DListView::setViewportMargins(const QMargins \u0026 margins)","Funname":"DListView::setViewportMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"void DListView::setViewportMargins(int left,int top,int right,int bottom)","Funname":"DListView::setViewportMargins","Returntype":"void","Args":"int left,int top,int right,int bottom"},{"Uniquefunname":"void DListView::setWrapping(bool enable)","Funname":"DListView::setWrapping","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"State DListView::state() cons)","Funname":"DListView::state","Returntype":"State","Args":") cons"},{"Uniquefunname":"QWidget * DListView::takeFooterWidget(int index)","Funname":"DListView::takeFooterWidget","Returntype":"QWidget *","Args":"int index"},{"Uniquefunname":"QWidget * DListView::takeHeaderWidget(int index)","Funname":"DListView::takeHeaderWidget","Returntype":"QWidget *","Args":"int index"},{"Uniquefunname":"void DListView::triggerEdit(const QModelIndex \u0026 index)","Funname":"DListView::triggerEdit","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QStyleOptionViewItem DListView::viewOptions() cons)","Funname":"DListView::viewOptions","Returntype":"QStyleOptionViewItem","Args":") cons"},{"Uniquefunname":"QMargins DListView::viewportMargins() cons)","Funname":"DListView::viewportMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"QSize DListView::viewportSizeHint() cons)","Funname":"DListView::viewportSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":" DVariantListModel(QObject * parent=0)","Funname":"DVariantListModel","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DVariantListModel::DVariantListModel(QObject * parent=0)","Funname":"DVariantListModel::DVariantListModel","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"QVariant DVariantListModel::data(const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons)","Funname":"DVariantListModel::data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons"},{"Uniquefunname":"bool DVariantListModel::insertRows(int row,int count,const QModelIndex \u0026 parent=QModelIndex ())","Funname":"DVariantListModel::insertRows","Returntype":"bool","Args":"int row,int count,const QModelIndex \u0026 parent=QModelIndex ()"},{"Uniquefunname":"bool DVariantListModel::removeRows(int row,int count,const QModelIndex \u0026 parent=QModelIndex ())","Funname":"DVariantListModel::removeRows","Returntype":"bool","Args":"int row,int count,const QModelIndex \u0026 parent=QModelIndex ()"},{"Uniquefunname":"int DVariantListModel::rowCount(const QModelIndex \u0026 parent=QModelIndex ()) cons)","Funname":"DVariantListModel::rowCount","Returntype":"int","Args":"const QModelIndex \u0026 parent=QModelIndex ()) cons"},{"Uniquefunname":"bool DVariantListModel::setData(const QModelIndex \u0026 index,const QVariant \u0026 value,int role)","Funname":"DVariantListModel::setData","Returntype":"bool","Args":"const QModelIndex \u0026 index,const QVariant \u0026 value,int role"},{"Uniquefunname":"int addFooterWidget(QWidget * widget)","Funname":"addFooterWidget","Returntype":"int","Args":"QWidget * widget"},{"Uniquefunname":"int addHeaderWidget(QWidget * widget)","Funname":"addHeaderWidget","Returntype":"int","Args":"QWidget * widget"},{"Uniquefunname":"bool addItem(const QVariant \u0026 data)","Funname":"addItem","Returntype":"bool","Args":"const QVariant \u0026 data"},{"Uniquefunname":"bool addItems(const QVariantList \u0026 datas)","Funname":"addItems","Returntype":"bool","Args":"const QVariantList \u0026 datas"},{"Uniquefunname":"DStyledItemDelegate backgroundType() cons)","Funname":"backgroundType","Returntype":"DStyledItemDelegate","Args":") cons"},{"Uniquefunname":"int count() cons)","Funname":"count","Returntype":"int","Args":") cons"},{"Uniquefunname":"void currentChanged(const QModelIndex \u0026 current,const QModelIndex \u0026 previous)","Funname":"currentChanged","Returntype":"void","Args":"const QModelIndex \u0026 current,const QModelIndex \u0026 previous"},{"Uniquefunname":"void currentChanged(const QModelIndex \u0026 previous)","Funname":"currentChanged","Returntype":"void","Args":"const QModelIndex \u0026 previous"},{"Uniquefunname":"QVariant data(const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons)","Funname":"data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role=Qt::DisplayRole) cons"},{"Uniquefunname":"bool edit(const QModelIndex \u0026 index,EditTrigger trigger,QEvent * event)","Funname":"edit","Returntype":"bool","Args":"const QModelIndex \u0026 index,EditTrigger trigger,QEvent * event"},{"Uniquefunname":"void edit(const QModelIndex \u0026 index)","Funname":"edit","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QWidget * getFooterWidget(int index) cons)","Funname":"getFooterWidget","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"QWidget * getHeaderWidget(int index) cons)","Funname":"getHeaderWidget","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"int horizontalOffset() cons)","Funname":"horizontalOffset","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool insertItem(int index,const QVariant \u0026 data)","Funname":"insertItem","Returntype":"bool","Args":"int index,const QVariant \u0026 data"},{"Uniquefunname":"bool insertItems(int index,const QVariantList \u0026 datas)","Funname":"insertItems","Returntype":"bool","Args":"int index,const QVariantList \u0026 datas"},{"Uniquefunname":"bool insertRows(int row,int count,const QModelIndex \u0026 parent=QModelIndex ())","Funname":"insertRows","Returntype":"bool","Args":"int row,int count,const QModelIndex \u0026 parent=QModelIndex ()"},{"Uniquefunname":"bool isActiveRect(const QRect \u0026 rect) cons)","Funname":"isActiveRect","Returntype":"bool","Args":"const QRect \u0026 rect) cons"},{"Uniquefunname":"bool isVisualRect(const QRect \u0026 rect) cons)","Funname":"isVisualRect","Returntype":"bool","Args":"const QRect \u0026 rect) cons"},{"Uniquefunname":"QMargins itemMargins() cons)","Funname":"itemMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"QSize itemSize() cons)","Funname":"itemSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSize minimumSizeHint() cons)","Funname":"minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QModelIndex moveCursor(CursorAction cursorAction,Qt::KeyboardModifiers modifiers)","Funname":"moveCursor","Returntype":"QModelIndex","Args":"CursorAction cursorAction,Qt::KeyboardModifiers modifiers"},{"Uniquefunname":"Qt orientation() cons)","Funname":"orientation","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void orientationChanged(Qt::Orientation orientation)","Funname":"orientationChanged","Returntype":"void","Args":"Qt::Orientation orientation"},{"Uniquefunname":"void removeFooterWidget(int index)","Funname":"removeFooterWidget","Returntype":"void","Args":"int index"},{"Uniquefunname":"void removeHeaderWidget(int index)","Funname":"removeHeaderWidget","Returntype":"void","Args":"int index"},{"Uniquefunname":"bool removeItem(int index)","Funname":"removeItem","Returntype":"bool","Args":"int index"},{"Uniquefunname":"bool removeItems(int index,int count)","Funname":"removeItems","Returntype":"bool","Args":"int index,int count"},{"Uniquefunname":"bool removeRows(int row,int count,const QModelIndex \u0026 parent=QModelIndex ())","Funname":"removeRows","Returntype":"bool","Args":"int row,int count,const QModelIndex \u0026 parent=QModelIndex ()"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"int rowCount(const QModelIndex \u0026 parent=QModelIndex ()) cons)","Funname":"rowCount","Returntype":"int","Args":"const QModelIndex \u0026 parent=QModelIndex ()) cons"},{"Uniquefunname":"void setBackgroundType(DStyledItemDelegate::BackgroundType backgroundType)","Funname":"setBackgroundType","Returntype":"void","Args":"DStyledItemDelegate::BackgroundType backgroundType"},{"Uniquefunname":"bool setData(const QModelIndex \u0026 index,const QVariant \u0026 value,int role)","Funname":"setData","Returntype":"bool","Args":"const QModelIndex \u0026 index,const QVariant \u0026 value,int role"},{"Uniquefunname":"void setFlow(QListView::Flow flow)","Funname":"setFlow","Returntype":"void","Args":"QListView::Flow flow"},{"Uniquefunname":"void setItemMargins(const QMargins \u0026 itemMargins)","Funname":"setItemMargins","Returntype":"void","Args":"const QMargins \u0026 itemMargins"},{"Uniquefunname":"void setItemRadius(int radius)","Funname":"setItemRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void setItemSize(QSize itemSize)","Funname":"setItemSize","Returntype":"void","Args":"QSize itemSize"},{"Uniquefunname":"void setItemSpacing(int spacing)","Funname":"setItemSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void setModel(QAbstractItemModel * model)","Funname":"setModel","Returntype":"void","Args":"QAbstractItemModel * model"},{"Uniquefunname":"void setOrientation(QListView::Flow flow,bool wrapping)","Funname":"setOrientation","Returntype":"void","Args":"QListView::Flow flow,bool wrapping"},{"Uniquefunname":"void setViewportMargins(const QMargins \u0026 margins)","Funname":"setViewportMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"void setViewportMargins(int left,int top,int right,int bottom)","Funname":"setViewportMargins","Returntype":"void","Args":"int left,int top,int right,int bottom"},{"Uniquefunname":"void setWrapping(bool enable)","Funname":"setWrapping","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"State state() cons)","Funname":"state","Returntype":"State","Args":") cons"},{"Uniquefunname":"QWidget * takeFooterWidget(int index)","Funname":"takeFooterWidget","Returntype":"QWidget *","Args":"int index"},{"Uniquefunname":"QWidget * takeHeaderWidget(int index)","Funname":"takeHeaderWidget","Returntype":"QWidget *","Args":"int index"},{"Uniquefunname":"void triggerEdit(const QModelIndex \u0026 index)","Funname":"triggerEdit","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QStyleOptionViewItem viewOptions() cons)","Funname":"viewOptions","Returntype":"QStyleOptionViewItem","Args":") cons"},{"Uniquefunname":"QMargins viewportMargins() cons)","Funname":"viewportMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"QSize viewportSizeHint() cons)","Funname":"viewportSizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DLISTVIEW_H"]},{"Name":"class:DVariantListModel","Fields":["QList\u003cQVariant\u003e DVariantListModel::dataList"]}]}
{"Filepath":"src/widgets/dloadingindicator.h","Functions":[{"Uniquefunname":"RotationDirection DLoadingIndicator(QWidget * parent=0)","Funname":"DLoadingIndicator","Returntype":"RotationDirection","Args":"QWidget * parent=0"},{"Uniquefunname":"RotationDirection DLoadingIndicator::DLoadingIndicator(QWidget * parent=0)","Funname":"DLoadingIndicator::DLoadingIndicator","Returntype":"RotationDirection","Args":"QWidget * parent=0"},{"Uniquefunname":"int DLoadingIndicator::aniDuration() cons)","Funname":"DLoadingIndicator::aniDuration","Returntype":"int","Args":") cons"},{"Uniquefunname":"QEasingCurve DLoadingIndicator::aniEasingType() cons)","Funname":"DLoadingIndicator::aniEasingType","Returntype":"QEasingCurve","Args":") cons"},{"Uniquefunname":"QColor DLoadingIndicator::backgroundColor() cons)","Funname":"DLoadingIndicator::backgroundColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"RotationDirection DLoadingIndicator::direction() cons)","Funname":"DLoadingIndicator::direction","Returntype":"RotationDirection","Args":") cons"},{"Uniquefunname":"QPixmap DLoadingIndicator::imageSource() cons)","Funname":"DLoadingIndicator::imageSource","Returntype":"QPixmap","Args":") cons"},{"Uniquefunname":"bool DLoadingIndicator::loading() cons)","Funname":"DLoadingIndicator::loading","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DLoadingIndicator::resizeEvent(QResizeEvent * e)","Funname":"DLoadingIndicator::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"qreal DLoadingIndicator::rotate() cons)","Funname":"DLoadingIndicator::rotate","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void DLoadingIndicator::rotateChanged(qreal rotate)","Funname":"DLoadingIndicator::rotateChanged","Returntype":"void","Args":"qreal rotate"},{"Uniquefunname":"void DLoadingIndicator::setAniDuration(int msecs)","Funname":"DLoadingIndicator::setAniDuration","Returntype":"void","Args":"int msecs"},{"Uniquefunname":"void DLoadingIndicator::setAniEasingCurve(const QEasingCurve \u0026 easing)","Funname":"DLoadingIndicator::setAniEasingCurve","Returntype":"void","Args":"const QEasingCurve \u0026 easing"},{"Uniquefunname":"void DLoadingIndicator::setAniEasingType(QEasingCurve::Type aniEasingType)","Funname":"DLoadingIndicator::setAniEasingType","Returntype":"void","Args":"QEasingCurve::Type aniEasingType"},{"Uniquefunname":"void DLoadingIndicator::setBackgroundColor(const QColor \u0026 color)","Funname":"DLoadingIndicator::setBackgroundColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void DLoadingIndicator::setDirection(RotationDirection direction)","Funname":"DLoadingIndicator::setDirection","Returntype":"void","Args":"RotationDirection direction"},{"Uniquefunname":"void DLoadingIndicator::setImageSource(const QPixmap \u0026 imageSource)","Funname":"DLoadingIndicator::setImageSource","Returntype":"void","Args":"const QPixmap \u0026 imageSource"},{"Uniquefunname":"void DLoadingIndicator::setLoading(bool flag)","Funname":"DLoadingIndicator::setLoading","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void DLoadingIndicator::setRotate(QVariant angle)","Funname":"DLoadingIndicator::setRotate","Returntype":"void","Args":"QVariant angle"},{"Uniquefunname":"void DLoadingIndicator::setSmooth(bool smooth)","Funname":"DLoadingIndicator::setSmooth","Returntype":"void","Args":"bool smooth"},{"Uniquefunname":"void DLoadingIndicator::setWidgetSource(QWidget * widgetSource)","Funname":"DLoadingIndicator::setWidgetSource","Returntype":"void","Args":"QWidget * widgetSource"},{"Uniquefunname":"QSize DLoadingIndicator::sizeHint() cons)","Funname":"DLoadingIndicator::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"bool DLoadingIndicator::smooth() cons)","Funname":"DLoadingIndicator::smooth","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DLoadingIndicator::start()","Funname":"DLoadingIndicator::start","Returntype":"void","Args":""},{"Uniquefunname":"void DLoadingIndicator::stop()","Funname":"DLoadingIndicator::stop","Returntype":"void","Args":""},{"Uniquefunname":"QWidget * DLoadingIndicator::widgetSource() cons)","Funname":"DLoadingIndicator::widgetSource","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":" DLoadingIndicator::~DLoadingIndicator()","Funname":"DLoadingIndicator::~DLoadingIndicator","Returntype":"","Args":""},{"Uniquefunname":"int aniDuration() cons)","Funname":"aniDuration","Returntype":"int","Args":") cons"},{"Uniquefunname":"QEasingCurve aniEasingType() cons)","Funname":"aniEasingType","Returntype":"QEasingCurve","Args":") cons"},{"Uniquefunname":"QColor backgroundColor() cons)","Funname":"backgroundColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"RotationDirection direction() cons)","Funname":"direction","Returntype":"RotationDirection","Args":") cons"},{"Uniquefunname":"QPixmap imageSource() cons)","Funname":"imageSource","Returntype":"QPixmap","Args":") cons"},{"Uniquefunname":"bool loading() cons)","Funname":"loading","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"qreal rotate() cons)","Funname":"rotate","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void rotateChanged(qreal rotate)","Funname":"rotateChanged","Returntype":"void","Args":"qreal rotate"},{"Uniquefunname":"void setAniDuration(int msecs)","Funname":"setAniDuration","Returntype":"void","Args":"int msecs"},{"Uniquefunname":"void setAniEasingCurve(const QEasingCurve \u0026 easing)","Funname":"setAniEasingCurve","Returntype":"void","Args":"const QEasingCurve \u0026 easing"},{"Uniquefunname":"void setAniEasingType(QEasingCurve::Type aniEasingType)","Funname":"setAniEasingType","Returntype":"void","Args":"QEasingCurve::Type aniEasingType"},{"Uniquefunname":"void setBackgroundColor(const QColor \u0026 color)","Funname":"setBackgroundColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"void setDirection(RotationDirection direction)","Funname":"setDirection","Returntype":"void","Args":"RotationDirection direction"},{"Uniquefunname":"void setImageSource(const QPixmap \u0026 imageSource)","Funname":"setImageSource","Returntype":"void","Args":"const QPixmap \u0026 imageSource"},{"Uniquefunname":"void setLoading(bool flag)","Funname":"setLoading","Returntype":"void","Args":"bool flag"},{"Uniquefunname":"void setRotate(QVariant angle)","Funname":"setRotate","Returntype":"void","Args":"QVariant angle"},{"Uniquefunname":"void setSmooth(bool smooth)","Funname":"setSmooth","Returntype":"void","Args":"bool smooth"},{"Uniquefunname":"void setWidgetSource(QWidget * widgetSource)","Funname":"setWidgetSource","Returntype":"void","Args":"QWidget * widgetSource"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"bool smooth() cons)","Funname":"smooth","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void start()","Funname":"start","Returntype":"void","Args":""},{"Uniquefunname":"void stop()","Funname":"stop","Returntype":"void","Args":""},{"Uniquefunname":"QWidget * widgetSource() cons)","Funname":"widgetSource","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":" ~DLoadingIndicator()","Funname":"~DLoadingIndicator","Returntype":"","Args":""}],"Records":[{"Name":"enum:DLoadingIndicator::RotationDirection","Fields":["Clockwise","Counterclockwise","DLoadingIndicator::Clockwise","DLoadingIndicator::Counterclockwise"]},{"Name":"macro","Fields":["DLOADINGINDICATOR_H"]}]}
{"Filepath":"src/widgets/dmainwindow.h","Functions":[{"Uniquefunname":" DMainWindow(DMainWindowPrivate \u0026 dd,QWidget * parent=0)","Funname":"DMainWindow","Returntype":"","Args":"DMainWindowPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":" DMainWindow(QWidget * parent=0)","Funname":"DMainWindow","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DMainWindow::DMainWindow(DMainWindowPrivate \u0026 dd,QWidget * parent=0)","Funname":"DMainWindow::DMainWindow","Returntype":"","Args":"DMainWindowPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":" DMainWindow::DMainWindow(QWidget * parent=0)","Funname":"DMainWindow::DMainWindow","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"bool DMainWindow::autoInputMaskByClipPath() cons)","Funname":"DMainWindow::autoInputMaskByClipPath","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMainWindow::autoInputMaskByClipPathChanged()","Funname":"DMainWindow::autoInputMaskByClipPathChanged","Returntype":"void","Args":""},{"Uniquefunname":"QColor DMainWindow::borderColor() cons)","Funname":"DMainWindow::borderColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"void DMainWindow::borderColorChanged()","Funname":"DMainWindow::borderColorChanged","Returntype":"void","Args":""},{"Uniquefunname":"int DMainWindow::borderWidth() cons)","Funname":"DMainWindow::borderWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DMainWindow::borderWidthChanged()","Funname":"DMainWindow::borderWidthChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DMainWindow::changeEvent(QEvent * event)","Funname":"DMainWindow::changeEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"QPainterPath DMainWindow::clipPath() cons)","Funname":"DMainWindow::clipPath","Returntype":"QPainterPath","Args":") cons"},{"Uniquefunname":"void DMainWindow::clipPathChanged()","Funname":"DMainWindow::clipPathChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool DMainWindow::enableBlurWindow() cons)","Funname":"DMainWindow::enableBlurWindow","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMainWindow::enableBlurWindowChanged()","Funname":"DMainWindow::enableBlurWindowChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool DMainWindow::enableSystemMove() cons)","Funname":"DMainWindow::enableSystemMove","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMainWindow::enableSystemMoveChanged()","Funname":"DMainWindow::enableSystemMoveChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool DMainWindow::enableSystemResize() cons)","Funname":"DMainWindow::enableSystemResize","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMainWindow::enableSystemResizeChanged()","Funname":"DMainWindow::enableSystemResizeChanged","Returntype":"void","Args":""},{"Uniquefunname":"QMargins DMainWindow::frameMargins() cons)","Funname":"DMainWindow::frameMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void DMainWindow::frameMarginsChanged()","Funname":"DMainWindow::frameMarginsChanged","Returntype":"void","Args":""},{"Uniquefunname":"QRegion DMainWindow::frameMask() cons)","Funname":"DMainWindow::frameMask","Returntype":"QRegion","Args":") cons"},{"Uniquefunname":"void DMainWindow::frameMaskChanged()","Funname":"DMainWindow::frameMaskChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool DMainWindow::isDXcbWindow() cons)","Funname":"DMainWindow::isDXcbWindow","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMainWindow::mouseMoveEvent(QMouseEvent * event)","Funname":"DMainWindow::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DMainWindow::resizeEvent(QResizeEvent * event)","Funname":"DMainWindow::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DMainWindow::sendMessage(DFloatingMessage * message)","Funname":"DMainWindow::sendMessage","Returntype":"void","Args":"DFloatingMessage * message"},{"Uniquefunname":"void DMainWindow::sendMessage(const QIcon \u0026 icon,const QString \u0026 message)","Funname":"DMainWindow::sendMessage","Returntype":"void","Args":"const QIcon \u0026 icon,const QString \u0026 message"},{"Uniquefunname":"void DMainWindow::setAutoInputMaskByClipPath(bool autoInputMaskByClipPath)","Funname":"DMainWindow::setAutoInputMaskByClipPath","Returntype":"void","Args":"bool autoInputMaskByClipPath"},{"Uniquefunname":"void DMainWindow::setBorderColor(const QColor \u0026 borderColor)","Funname":"DMainWindow::setBorderColor","Returntype":"void","Args":"const QColor \u0026 borderColor"},{"Uniquefunname":"void DMainWindow::setBorderWidth(int borderWidth)","Funname":"DMainWindow::setBorderWidth","Returntype":"void","Args":"int borderWidth"},{"Uniquefunname":"void DMainWindow::setClipPath(const QPainterPath \u0026 clipPath)","Funname":"DMainWindow::setClipPath","Returntype":"void","Args":"const QPainterPath \u0026 clipPath"},{"Uniquefunname":"void DMainWindow::setEnableBlurWindow(bool enableBlurWindow)","Funname":"DMainWindow::setEnableBlurWindow","Returntype":"void","Args":"bool enableBlurWindow"},{"Uniquefunname":"void DMainWindow::setEnableSystemMove(bool enableSystemMove)","Funname":"DMainWindow::setEnableSystemMove","Returntype":"void","Args":"bool enableSystemMove"},{"Uniquefunname":"void DMainWindow::setEnableSystemResize(bool enableSystemResize)","Funname":"DMainWindow::setEnableSystemResize","Returntype":"void","Args":"bool enableSystemResize"},{"Uniquefunname":"void DMainWindow::setFrameMask(const QRegion \u0026 frameMask)","Funname":"DMainWindow::setFrameMask","Returntype":"void","Args":"const QRegion \u0026 frameMask"},{"Uniquefunname":"void DMainWindow::setShadowColor(const QColor \u0026 shadowColor)","Funname":"DMainWindow::setShadowColor","Returntype":"void","Args":"const QColor \u0026 shadowColor"},{"Uniquefunname":"void DMainWindow::setShadowOffset(const QPoint \u0026 shadowOffset)","Funname":"DMainWindow::setShadowOffset","Returntype":"void","Args":"const QPoint \u0026 shadowOffset"},{"Uniquefunname":"void DMainWindow::setShadowRadius(int shadowRadius)","Funname":"DMainWindow::setShadowRadius","Returntype":"void","Args":"int shadowRadius"},{"Uniquefunname":"void DMainWindow::setTitlebarShadowEnabled(bool titlebarShadowEnabled)","Funname":"DMainWindow::setTitlebarShadowEnabled","Returntype":"void","Args":"bool titlebarShadowEnabled"},{"Uniquefunname":"void DMainWindow::setTranslucentBackground(bool translucentBackground)","Funname":"DMainWindow::setTranslucentBackground","Returntype":"void","Args":"bool translucentBackground"},{"Uniquefunname":"void DMainWindow::setWindowFlags(Qt::WindowFlags type)","Funname":"DMainWindow::setWindowFlags","Returntype":"void","Args":"Qt::WindowFlags type"},{"Uniquefunname":"void DMainWindow::setWindowRadius(int windowRadius)","Funname":"DMainWindow::setWindowRadius","Returntype":"void","Args":"int windowRadius"},{"Uniquefunname":"QColor DMainWindow::shadowColor() cons)","Funname":"DMainWindow::shadowColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"void DMainWindow::shadowColorChanged()","Funname":"DMainWindow::shadowColorChanged","Returntype":"void","Args":""},{"Uniquefunname":"QPoint DMainWindow::shadowOffset() cons)","Funname":"DMainWindow::shadowOffset","Returntype":"QPoint","Args":") cons"},{"Uniquefunname":"void DMainWindow::shadowOffsetChanged()","Funname":"DMainWindow::shadowOffsetChanged","Returntype":"void","Args":""},{"Uniquefunname":"int DMainWindow::shadowRadius() cons)","Funname":"DMainWindow::shadowRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DMainWindow::shadowRadiusChanged()","Funname":"DMainWindow::shadowRadiusChanged","Returntype":"void","Args":""},{"Uniquefunname":"DTitlebar * DMainWindow::titlebar() cons)","Funname":"DMainWindow::titlebar","Returntype":"DTitlebar *","Args":") cons"},{"Uniquefunname":"bool DMainWindow::titlebarShadowIsEnabled() cons)","Funname":"DMainWindow::titlebarShadowIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DMainWindow::translucentBackground() cons)","Funname":"DMainWindow::translucentBackground","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMainWindow::translucentBackgroundChanged()","Funname":"DMainWindow::translucentBackgroundChanged","Returntype":"void","Args":""},{"Uniquefunname":"int DMainWindow::windowRadius() cons)","Funname":"DMainWindow::windowRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"bool autoInputMaskByClipPath() cons)","Funname":"autoInputMaskByClipPath","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void autoInputMaskByClipPathChanged()","Funname":"autoInputMaskByClipPathChanged","Returntype":"void","Args":""},{"Uniquefunname":"QColor borderColor() cons)","Funname":"borderColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"void borderColorChanged()","Funname":"borderColorChanged","Returntype":"void","Args":""},{"Uniquefunname":"int borderWidth() cons)","Funname":"borderWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"void borderWidthChanged()","Funname":"borderWidthChanged","Returntype":"void","Args":""},{"Uniquefunname":"void changeEvent(QEvent * event)","Funname":"changeEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"QPainterPath clipPath() cons)","Funname":"clipPath","Returntype":"QPainterPath","Args":") cons"},{"Uniquefunname":"void clipPathChanged()","Funname":"clipPathChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool enableBlurWindow() cons)","Funname":"enableBlurWindow","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void enableBlurWindowChanged()","Funname":"enableBlurWindowChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool enableSystemMove() cons)","Funname":"enableSystemMove","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void enableSystemMoveChanged()","Funname":"enableSystemMoveChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool enableSystemResize() cons)","Funname":"enableSystemResize","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void enableSystemResizeChanged()","Funname":"enableSystemResizeChanged","Returntype":"void","Args":""},{"Uniquefunname":"QMargins frameMargins() cons)","Funname":"frameMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void frameMarginsChanged()","Funname":"frameMarginsChanged","Returntype":"void","Args":""},{"Uniquefunname":"QRegion frameMask() cons)","Funname":"frameMask","Returntype":"QRegion","Args":") cons"},{"Uniquefunname":"void frameMaskChanged()","Funname":"frameMaskChanged","Returntype":"void","Args":""},{"Uniquefunname":"bool isDXcbWindow() cons)","Funname":"isDXcbWindow","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void sendMessage(DFloatingMessage * message)","Funname":"sendMessage","Returntype":"void","Args":"DFloatingMessage * message"},{"Uniquefunname":"void sendMessage(const QIcon \u0026 icon,const QString \u0026 message)","Funname":"sendMessage","Returntype":"void","Args":"const QIcon \u0026 icon,const QString \u0026 message"},{"Uniquefunname":"void setAutoInputMaskByClipPath(bool autoInputMaskByClipPath)","Funname":"setAutoInputMaskByClipPath","Returntype":"void","Args":"bool autoInputMaskByClipPath"},{"Uniquefunname":"void setBorderColor(const QColor \u0026 borderColor)","Funname":"setBorderColor","Returntype":"void","Args":"const QColor \u0026 borderColor"},{"Uniquefunname":"void setBorderWidth(int borderWidth)","Funname":"setBorderWidth","Returntype":"void","Args":"int borderWidth"},{"Uniquefunname":"void setClipPath(const QPainterPath \u0026 clipPath)","Funname":"setClipPath","Returntype":"void","Args":"const QPainterPath \u0026 clipPath"},{"Uniquefunname":"void setEnableBlurWindow(bool enableBlurWindow)","Funname":"setEnableBlurWindow","Returntype":"void","Args":"bool enableBlurWindow"},{"Uniquefunname":"void setEnableSystemMove(bool enableSystemMove)","Funname":"setEnableSystemMove","Returntype":"void","Args":"bool enableSystemMove"},{"Uniquefunname":"void setEnableSystemResize(bool enableSystemResize)","Funname":"setEnableSystemResize","Returntype":"void","Args":"bool enableSystemResize"},{"Uniquefunname":"void setFrameMask(const QRegion \u0026 frameMask)","Funname":"setFrameMask","Returntype":"void","Args":"const QRegion \u0026 frameMask"},{"Uniquefunname":"void setShadowColor(const QColor \u0026 shadowColor)","Funname":"setShadowColor","Returntype":"void","Args":"const QColor \u0026 shadowColor"},{"Uniquefunname":"void setShadowOffset(const QPoint \u0026 shadowOffset)","Funname":"setShadowOffset","Returntype":"void","Args":"const QPoint \u0026 shadowOffset"},{"Uniquefunname":"void setShadowRadius(int shadowRadius)","Funname":"setShadowRadius","Returntype":"void","Args":"int shadowRadius"},{"Uniquefunname":"void setTitlebarShadowEnabled(bool titlebarShadowEnabled)","Funname":"setTitlebarShadowEnabled","Returntype":"void","Args":"bool titlebarShadowEnabled"},{"Uniquefunname":"void setTranslucentBackground(bool translucentBackground)","Funname":"setTranslucentBackground","Returntype":"void","Args":"bool translucentBackground"},{"Uniquefunname":"void setWindowFlags(Qt::WindowFlags type)","Funname":"setWindowFlags","Returntype":"void","Args":"Qt::WindowFlags type"},{"Uniquefunname":"void setWindowRadius(int windowRadius)","Funname":"setWindowRadius","Returntype":"void","Args":"int windowRadius"},{"Uniquefunname":"QColor shadowColor() cons)","Funname":"shadowColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"void shadowColorChanged()","Funname":"shadowColorChanged","Returntype":"void","Args":""},{"Uniquefunname":"QPoint shadowOffset() cons)","Funname":"shadowOffset","Returntype":"QPoint","Args":") cons"},{"Uniquefunname":"void shadowOffsetChanged()","Funname":"shadowOffsetChanged","Returntype":"void","Args":""},{"Uniquefunname":"int shadowRadius() cons)","Funname":"shadowRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void shadowRadiusChanged()","Funname":"shadowRadiusChanged","Returntype":"void","Args":""},{"Uniquefunname":"DTitlebar * titlebar() cons)","Funname":"titlebar","Returntype":"DTitlebar *","Args":") cons"},{"Uniquefunname":"bool titlebarShadowIsEnabled() cons)","Funname":"titlebarShadowIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool translucentBackground() cons)","Funname":"translucentBackground","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void translucentBackgroundChanged()","Funname":"translucentBackgroundChanged","Returntype":"void","Args":""},{"Uniquefunname":"int windowRadius() cons)","Funname":"windowRadius","Returntype":"int","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DMAINWINDOW_H"]}]}
{"Filepath":"src/widgets/dmessagemanager.h","Functions":[{"Uniquefunname":" DMessageManager()","Funname":"DMessageManager","Returntype":"","Args":""},{"Uniquefunname":" DMessageManager::DMessageManager()","Funname":"DMessageManager::DMessageManager","Returntype":"","Args":""},{"Uniquefunname":"bool DMessageManager::eventFilter(QObject * watched,QEvent * event)","Funname":"DMessageManager::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"DMessageManager * DMessageManager::instance()","Funname":"DMessageManager::instance","Returntype":"DMessageManager *","Args":""},{"Uniquefunname":"void DMessageManager::sendMessage(QWidget * par,DFloatingMessage * floMsg)","Funname":"DMessageManager::sendMessage","Returntype":"void","Args":"QWidget * par,DFloatingMessage * floMsg"},{"Uniquefunname":"void DMessageManager::sendMessage(QWidget * par,const QIcon \u0026 icon,const QString \u0026 message)","Funname":"DMessageManager::sendMessage","Returntype":"void","Args":"QWidget * par,const QIcon \u0026 icon,const QString \u0026 message"},{"Uniquefunname":"bool DMessageManager::setContentMargens(QWidget * par,const QMargins \u0026 margins)","Funname":"DMessageManager::setContentMargens","Returntype":"bool","Args":"QWidget * par,const QMargins \u0026 margins"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"DMessageManager * instance()","Funname":"instance","Returntype":"DMessageManager *","Args":""},{"Uniquefunname":"void sendMessage(QWidget * par,DFloatingMessage * floMsg)","Funname":"sendMessage","Returntype":"void","Args":"QWidget * par,DFloatingMessage * floMsg"},{"Uniquefunname":"void sendMessage(QWidget * par,const QIcon \u0026 icon,const QString \u0026 message)","Funname":"sendMessage","Returntype":"void","Args":"QWidget * par,const QIcon \u0026 icon,const QString \u0026 message"},{"Uniquefunname":"bool setContentMargens(QWidget * par,const QMargins \u0026 margins)","Funname":"setContentMargens","Returntype":"bool","Args":"QWidget * par,const QMargins \u0026 margins"}],"Records":[{"Name":"macro","Fields":["DMESSAGEMANAGER_H"]}]}
{"Filepath":"src/widgets/dmpriscontrol.h","Functions":[{"Uniquefunname":" DMPRISControl(QWidget * parent=0)","Funname":"DMPRISControl","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DMPRISControl::DMPRISControl(QWidget * parent=0)","Funname":"DMPRISControl::DMPRISControl","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"bool DMPRISControl::isWorking() cons)","Funname":"DMPRISControl::isWorking","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DMPRISControl::mprisChanged() cons)","Funname":"DMPRISControl::mprisChanged","Returntype":"void","Args":") cons"},{"Uniquefunname":"void DMPRISControl::mprisLosted() cons)","Funname":"DMPRISControl::mprisLosted","Returntype":"void","Args":") cons"},{"Uniquefunname":"void DMPRISControl::setPictureSize(const QSize \u0026 size)","Funname":"DMPRISControl::setPictureSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"void DMPRISControl::setPictureVisible(bool visible)","Funname":"DMPRISControl::setPictureVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DMPRISControl::showEvent(QShowEvent * event)","Funname":"DMPRISControl::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"bool isWorking() cons)","Funname":"isWorking","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void mprisChanged() cons)","Funname":"mprisChanged","Returntype":"void","Args":") cons"},{"Uniquefunname":"void mprisLosted() cons)","Funname":"mprisLosted","Returntype":"void","Args":") cons"},{"Uniquefunname":"void setPictureSize(const QSize \u0026 size)","Funname":"setPictureSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"void setPictureVisible(bool visible)","Funname":"setPictureVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"}],"Records":[{"Name":"macro","Fields":["DMPRISCONTROL_H"]}]}
{"Filepath":"src/widgets/dpageindicator.h","Functions":[{"Uniquefunname":" DPageIndicator(QWidget * parent=0)","Funname":"DPageIndicator","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DPageIndicator::DPageIndicator(QWidget * parent=0)","Funname":"DPageIndicator::DPageIndicator","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DPageIndicator::currentPageIndex() cons)","Funname":"DPageIndicator::currentPageIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DPageIndicator::nextPage()","Funname":"DPageIndicator::nextPage","Returntype":"void","Args":""},{"Uniquefunname":"int DPageIndicator::pageCount() cons)","Funname":"DPageIndicator::pageCount","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DPageIndicator::paintEvent(QPaintEvent * e)","Funname":"DPageIndicator::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"QColor DPageIndicator::pointColor() cons)","Funname":"DPageIndicator::pointColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"int DPageIndicator::pointDistance() cons)","Funname":"DPageIndicator::pointDistance","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DPageIndicator::pointRadius() cons)","Funname":"DPageIndicator::pointRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DPageIndicator::previousPage()","Funname":"DPageIndicator::previousPage","Returntype":"void","Args":""},{"Uniquefunname":"QColor DPageIndicator::secondaryPointColor() cons)","Funname":"DPageIndicator::secondaryPointColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"int DPageIndicator::secondaryPointRadius() cons)","Funname":"DPageIndicator::secondaryPointRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DPageIndicator::setCurrentPage(const int index)","Funname":"DPageIndicator::setCurrentPage","Returntype":"void","Args":"const int index"},{"Uniquefunname":"void DPageIndicator::setPageCount(const int count)","Funname":"DPageIndicator::setPageCount","Returntype":"void","Args":"const int count"},{"Uniquefunname":"void DPageIndicator::setPointColor(QColor color)","Funname":"DPageIndicator::setPointColor","Returntype":"void","Args":"QColor color"},{"Uniquefunname":"void DPageIndicator::setPointDistance(int distance)","Funname":"DPageIndicator::setPointDistance","Returntype":"void","Args":"int distance"},{"Uniquefunname":"void DPageIndicator::setPointRadius(int size)","Funname":"DPageIndicator::setPointRadius","Returntype":"void","Args":"int size"},{"Uniquefunname":"void DPageIndicator::setSecondaryPointColor(QColor color)","Funname":"DPageIndicator::setSecondaryPointColor","Returntype":"void","Args":"QColor color"},{"Uniquefunname":"void DPageIndicator::setSecondaryPointRadius(int size)","Funname":"DPageIndicator::setSecondaryPointRadius","Returntype":"void","Args":"int size"},{"Uniquefunname":"int currentPageIndex() cons)","Funname":"currentPageIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void nextPage()","Funname":"nextPage","Returntype":"void","Args":""},{"Uniquefunname":"int pageCount() cons)","Funname":"pageCount","Returntype":"int","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"QColor pointColor() cons)","Funname":"pointColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"int pointDistance() cons)","Funname":"pointDistance","Returntype":"int","Args":") cons"},{"Uniquefunname":"int pointRadius() cons)","Funname":"pointRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void previousPage()","Funname":"previousPage","Returntype":"void","Args":""},{"Uniquefunname":"QColor secondaryPointColor() cons)","Funname":"secondaryPointColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"int secondaryPointRadius() cons)","Funname":"secondaryPointRadius","Returntype":"int","Args":") cons"},{"Uniquefunname":"void setCurrentPage(const int index)","Funname":"setCurrentPage","Returntype":"void","Args":"const int index"},{"Uniquefunname":"void setPageCount(const int count)","Funname":"setPageCount","Returntype":"void","Args":"const int count"},{"Uniquefunname":"void setPointColor(QColor color)","Funname":"setPointColor","Returntype":"void","Args":"QColor color"},{"Uniquefunname":"void setPointDistance(int distance)","Funname":"setPointDistance","Returntype":"void","Args":"int distance"},{"Uniquefunname":"void setPointRadius(int size)","Funname":"setPointRadius","Returntype":"void","Args":"int size"},{"Uniquefunname":"void setSecondaryPointColor(QColor color)","Funname":"setSecondaryPointColor","Returntype":"void","Args":"QColor color"},{"Uniquefunname":"void setSecondaryPointRadius(int size)","Funname":"setSecondaryPointRadius","Returntype":"void","Args":"int size"}],"Records":[{"Name":"macro","Fields":["DPAGEINDICATOR_H"]}]}
{"Filepath":"src/widgets/dpalettehelper.h","Functions":[{"Uniquefunname":" DPaletteHelper(QObject * parent=nullptr)","Funname":"DPaletteHelper","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":" DPaletteHelper::DPaletteHelper(QObject * parent=nullptr)","Funname":"DPaletteHelper::DPaletteHelper","Returntype":"","Args":"QObject * parent=nullptr"},{"Uniquefunname":"bool DPaletteHelper::eventFilter(QObject * watched,QEvent * event)","Funname":"DPaletteHelper::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"DPaletteHelper * DPaletteHelper::instance()","Funname":"DPaletteHelper::instance","Returntype":"DPaletteHelper *","Args":""},{"Uniquefunname":"DPalette DPaletteHelper::palette(const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons)","Funname":"DPaletteHelper::palette","Returntype":"DPalette","Args":"const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons"},{"Uniquefunname":"void DPaletteHelper::resetPalette(QWidget * widget)","Funname":"DPaletteHelper::resetPalette","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void DPaletteHelper::setPalette(QWidget * widget,const DPalette \u0026 palette)","Funname":"DPaletteHelper::setPalette","Returntype":"void","Args":"QWidget * widget,const DPalette \u0026 palette"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"DPaletteHelper * instance()","Funname":"instance","Returntype":"DPaletteHelper *","Args":""},{"Uniquefunname":"DPalette palette(const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons)","Funname":"palette","Returntype":"DPalette","Args":"const QWidget * widget,const QPalette \u0026 base=QPalette ()) cons"},{"Uniquefunname":"void resetPalette(QWidget * widget)","Funname":"resetPalette","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void setPalette(QWidget * widget,const DPalette \u0026 palette)","Funname":"setPalette","Returntype":"void","Args":"QWidget * widget,const DPalette \u0026 palette"}],"Records":[{"Name":"macro","Fields":["DPALETTEHELPER_H"]}]}
{"Filepath":"src/widgets/dpasswordedit.h","Functions":[{"Uniquefunname":" DPasswordEdit(QWidget * parent=nullptr)","Funname":"DPasswordEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DPasswordEdit::DPasswordEdit(QWidget * parent=nullptr)","Funname":"DPasswordEdit::DPasswordEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool DPasswordEdit::echoButtonIsVisible() cons)","Funname":"DPasswordEdit::echoButtonIsVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DPasswordEdit::isEchoMode() cons)","Funname":"DPasswordEdit::isEchoMode","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DPasswordEdit::setEchoButtonIsVisible(bool visible)","Funname":"DPasswordEdit::setEchoButtonIsVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DPasswordEdit::setEchoMode(QLineEdit::EchoMode mode)","Funname":"DPasswordEdit::setEchoMode","Returntype":"void","Args":"QLineEdit::EchoMode mode"},{"Uniquefunname":"bool echoButtonIsVisible() cons)","Funname":"echoButtonIsVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isEchoMode() cons)","Funname":"isEchoMode","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void setEchoButtonIsVisible(bool visible)","Funname":"setEchoButtonIsVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setEchoMode(QLineEdit::EchoMode mode)","Funname":"setEchoMode","Returntype":"void","Args":"QLineEdit::EchoMode mode"}],"Records":[{"Name":"macro","Fields":["DPASSWORDEDIT_H"]}]}
{"Filepath":"src/widgets/dpicturesequenceview.h","Functions":[{"Uniquefunname":" DPictureSequenceView(QWidget * parent=nullptr)","Funname":"DPictureSequenceView","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DPictureSequenceView::DPictureSequenceView(QWidget * parent=nullptr)","Funname":"DPictureSequenceView::DPictureSequenceView","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DPictureSequenceView::pause()","Funname":"DPictureSequenceView::pause","Returntype":"void","Args":""},{"Uniquefunname":"void DPictureSequenceView::play()","Funname":"DPictureSequenceView::play","Returntype":"void","Args":""},{"Uniquefunname":"void DPictureSequenceView::playEnd() cons)","Funname":"DPictureSequenceView::playEnd","Returntype":"void","Args":") cons"},{"Uniquefunname":"void DPictureSequenceView::setPictureSequence(const QList\u003cQPixmap\u003e \u0026 sequence,const bool autoScale=false)","Funname":"DPictureSequenceView::setPictureSequence","Returntype":"void","Args":"const QList\u003cQPixmap\u003e \u0026 sequence,const bool autoScale=false"},{"Uniquefunname":"void DPictureSequenceView::setPictureSequence(const QString \u0026 srcFormat,const QPair\u003cint,int\u003e \u0026 range,const int fieldWidth=0,const bool autoScale=false)","Funname":"DPictureSequenceView::setPictureSequence","Returntype":"void","Args":"const QString \u0026 srcFormat,const QPair\u003cint,int\u003e \u0026 range,const int fieldWidth=0,const bool autoScale=false"},{"Uniquefunname":"void DPictureSequenceView::setPictureSequence(const QStringList \u0026 sequence,const bool autoScale=false)","Funname":"DPictureSequenceView::setPictureSequence","Returntype":"void","Args":"const QStringList \u0026 sequence,const bool autoScale=false"},{"Uniquefunname":"void DPictureSequenceView::setSingleShot(bool singleShot)","Funname":"DPictureSequenceView::setSingleShot","Returntype":"void","Args":"bool singleShot"},{"Uniquefunname":"void DPictureSequenceView::setSpeed(int speed)","Funname":"DPictureSequenceView::setSpeed","Returntype":"void","Args":"int speed"},{"Uniquefunname":"bool DPictureSequenceView::singleShot() cons)","Funname":"DPictureSequenceView::singleShot","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int DPictureSequenceView::speed() cons)","Funname":"DPictureSequenceView::speed","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DPictureSequenceView::stop()","Funname":"DPictureSequenceView::stop","Returntype":"void","Args":""},{"Uniquefunname":"void pause()","Funname":"pause","Returntype":"void","Args":""},{"Uniquefunname":"void play()","Funname":"play","Returntype":"void","Args":""},{"Uniquefunname":"void playEnd() cons)","Funname":"playEnd","Returntype":"void","Args":") cons"},{"Uniquefunname":"void setPictureSequence(const QList\u003cQPixmap\u003e \u0026 sequence,const bool autoScale=false)","Funname":"setPictureSequence","Returntype":"void","Args":"const QList\u003cQPixmap\u003e \u0026 sequence,const bool autoScale=false"},{"Uniquefunname":"void setPictureSequence(const QString \u0026 srcFormat,const QPair\u003cint,int\u003e \u0026 range,const int fieldWidth=0,const bool autoScale=false)","Funname":"setPictureSequence","Returntype":"void","Args":"const QString \u0026 srcFormat,const QPair\u003cint,int\u003e \u0026 range,const int fieldWidth=0,const bool autoScale=false"},{"Uniquefunname":"void setPictureSequence(const QStringList \u0026 sequence,const bool autoScale=false)","Funname":"setPictureSequence","Returntype":"void","Args":"const QStringList \u0026 sequence,const bool autoScale=false"},{"Uniquefunname":"void setSingleShot(bool singleShot)","Funname":"setSingleShot","Returntype":"void","Args":"bool singleShot"},{"Uniquefunname":"void setSpeed(int speed)","Funname":"setSpeed","Returntype":"void","Args":"int speed"},{"Uniquefunname":"bool singleShot() cons)","Funname":"singleShot","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int speed() cons)","Funname":"speed","Returntype":"int","Args":") cons"},{"Uniquefunname":"void stop()","Funname":"stop","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DPICTURESEQUENCEVIEW_H"]}]}
{"Filepath":"src/widgets/dplatformwindowhandle.h","Functions":[{"Uniquefunname":" DPlatformWindowHandle(QWidget * widget,QObject * parent=nullptr)","Funname":"DPlatformWindowHandle","Returntype":"","Args":"QWidget * widget,QObject * parent=nullptr"},{"Uniquefunname":" DPlatformWindowHandle::DPlatformWindowHandle(QWidget * widget,QObject * parent=nullptr)","Funname":"DPlatformWindowHandle::DPlatformWindowHandle","Returntype":"","Args":"QWidget * widget,QObject * parent=nullptr"},{"Uniquefunname":"void DPlatformWindowHandle::enableDXcbForWindow(QWidget * widget)","Funname":"DPlatformWindowHandle::enableDXcbForWindow","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void DPlatformWindowHandle::enableDXcbForWindow(QWidget * widget,bool redirectContent)","Funname":"DPlatformWindowHandle::enableDXcbForWindow","Returntype":"void","Args":"QWidget * widget,bool redirectContent"},{"Uniquefunname":"bool DPlatformWindowHandle::isEnabledDXcb(const QWidget * widget)","Funname":"DPlatformWindowHandle::isEnabledDXcb","Returntype":"bool","Args":"const QWidget * widget"},{"Uniquefunname":"bool DPlatformWindowHandle::setWindowBlurAreaByWM(QWidget * widget,const QList\u003cQPainterPath\u003e \u0026 paths)","Funname":"DPlatformWindowHandle::setWindowBlurAreaByWM","Returntype":"bool","Args":"QWidget * widget,const QList\u003cQPainterPath\u003e \u0026 paths"},{"Uniquefunname":"bool DPlatformWindowHandle::setWindowBlurAreaByWM(QWidget * widget,const QVector\u003cWMBlurArea\u003e \u0026 area)","Funname":"DPlatformWindowHandle::setWindowBlurAreaByWM","Returntype":"bool","Args":"QWidget * widget,const QVector\u003cWMBlurArea\u003e \u0026 area"},{"Uniquefunname":"bool DPlatformWindowHandle::setWindowWallpaperParaByWM(QWidget * widget,const QRect \u0026 area,WallpaperScaleMode sMode,WallpaperFillMode fMode)","Funname":"DPlatformWindowHandle::setWindowWallpaperParaByWM","Returntype":"bool","Args":"QWidget * widget,const QRect \u0026 area,WallpaperScaleMode sMode,WallpaperFillMode fMode"},{"Uniquefunname":"void enableDXcbForWindow(QWidget * widget)","Funname":"enableDXcbForWindow","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void enableDXcbForWindow(QWidget * widget,bool redirectContent)","Funname":"enableDXcbForWindow","Returntype":"void","Args":"QWidget * widget,bool redirectContent"},{"Uniquefunname":"bool isEnabledDXcb(const QWidget * widget)","Funname":"isEnabledDXcb","Returntype":"bool","Args":"const QWidget * widget"},{"Uniquefunname":"bool setWindowBlurAreaByWM(QWidget * widget,const QList\u003cQPainterPath\u003e \u0026 paths)","Funname":"setWindowBlurAreaByWM","Returntype":"bool","Args":"QWidget * widget,const QList\u003cQPainterPath\u003e \u0026 paths"},{"Uniquefunname":"bool setWindowBlurAreaByWM(QWidget * widget,const QVector\u003cWMBlurArea\u003e \u0026 area)","Funname":"setWindowBlurAreaByWM","Returntype":"bool","Args":"QWidget * widget,const QVector\u003cWMBlurArea\u003e \u0026 area"},{"Uniquefunname":"bool setWindowWallpaperParaByWM(QWidget * widget,const QRect \u0026 area,WallpaperScaleMode sMode,WallpaperFillMode fMode)","Funname":"setWindowWallpaperParaByWM","Returntype":"bool","Args":"QWidget * widget,const QRect \u0026 area,WallpaperScaleMode sMode,WallpaperFillMode fMode"}],"Records":[{"Name":"macro","Fields":["DPLATFORMWINDOWHANDLE_H"]}]}
{"Filepath":"src/widgets/dprintpreviewdialog.h","Functions":[{"Uniquefunname":" DPrintPreviewDialog(QWidget * parent=nullptr)","Funname":"DPrintPreviewDialog","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DPrintPreviewDialog::DPrintPreviewDialog(QWidget * parent=nullptr)","Funname":"DPrintPreviewDialog::DPrintPreviewDialog","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool DPrintPreviewDialog::event(QEvent * event)","Funname":"DPrintPreviewDialog::event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool DPrintPreviewDialog::eventFilter(QObject * watched,QEvent * event)","Funname":"DPrintPreviewDialog::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void DPrintPreviewDialog::resizeEvent(QResizeEvent * event)","Funname":"DPrintPreviewDialog::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"bool event(QEvent * event)","Funname":"event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"}],"Records":[{"Name":"macro","Fields":["DPRINTPREVIEWDIALOG_H"]}]}
{"Filepath":"src/widgets/dprintpreviewwidget.h","Functions":[{"Uniquefunname":" DPrintPreviewWidget(DPrinter * printer,QWidget * parent=nullptr)","Funname":"DPrintPreviewWidget","Returntype":"","Args":"DPrinter * printer,QWidget * parent=nullptr"},{"Uniquefunname":" DPrintPreviewWidget::DPrintPreviewWidget(DPrinter * printer,QWidget * parent=nullptr)","Funname":"DPrintPreviewWidget::DPrintPreviewWidget","Returntype":"","Args":"DPrinter * printer,QWidget * parent=nullptr"},{"Uniquefunname":"int DPrintPreviewWidget::currentPage()","Funname":"DPrintPreviewWidget::currentPage","Returntype":"int","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::currentPageChanged(int page)","Funname":"DPrintPreviewWidget::currentPageChanged","Returntype":"void","Args":"int page"},{"Uniquefunname":"DPrinter DPrintPreviewWidget::getColorMode()","Funname":"DPrintPreviewWidget::getColorMode","Returntype":"DPrinter","Args":""},{"Uniquefunname":"qreal DPrintPreviewWidget::getScale() cons)","Funname":"DPrintPreviewWidget::getScale","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"PageRange DPrintPreviewWidget::pageRangeMode()","Funname":"DPrintPreviewWidget::pageRangeMode","Returntype":"PageRange","Args":""},{"Uniquefunname":"int DPrintPreviewWidget::pagesCount()","Funname":"DPrintPreviewWidget::pagesCount","Returntype":"int","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::pagesCountChanged(int pages)","Funname":"DPrintPreviewWidget::pagesCountChanged","Returntype":"void","Args":"int pages"},{"Uniquefunname":"void DPrintPreviewWidget::previewChanged()","Funname":"DPrintPreviewWidget::previewChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::print()","Funname":"DPrintPreviewWidget::print","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::refreshBegin()","Funname":"DPrintPreviewWidget::refreshBegin","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::refreshEnd()","Funname":"DPrintPreviewWidget::refreshEnd","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::setColorMode(const DPrinter::ColorMode \u0026 colorMode)","Funname":"DPrintPreviewWidget::setColorMode","Returntype":"void","Args":"const DPrinter::ColorMode \u0026 colorMode"},{"Uniquefunname":"void DPrintPreviewWidget::setCurrentPage(int page)","Funname":"DPrintPreviewWidget::setCurrentPage","Returntype":"void","Args":"int page"},{"Uniquefunname":"void DPrintPreviewWidget::setCurrentTargetPage(int page)","Funname":"DPrintPreviewWidget::setCurrentTargetPage","Returntype":"void","Args":"int page"},{"Uniquefunname":"void DPrintPreviewWidget::setOrientation(const DPrinter::Orientation \u0026 pageOrientation)","Funname":"DPrintPreviewWidget::setOrientation","Returntype":"void","Args":"const DPrinter::Orientation \u0026 pageOrientation"},{"Uniquefunname":"void DPrintPreviewWidget::setPageRange(const QVector\u003cint\u003e \u0026 rangePages)","Funname":"DPrintPreviewWidget::setPageRange","Returntype":"void","Args":"const QVector\u003cint\u003e \u0026 rangePages"},{"Uniquefunname":"void DPrintPreviewWidget::setPageRange(int from,int to)","Funname":"DPrintPreviewWidget::setPageRange","Returntype":"void","Args":"int from,int to"},{"Uniquefunname":"void DPrintPreviewWidget::setPageRangeALL()","Funname":"DPrintPreviewWidget::setPageRangeALL","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::setPageRangeMode(PageRange mode)","Funname":"DPrintPreviewWidget::setPageRangeMode","Returntype":"void","Args":"PageRange mode"},{"Uniquefunname":"void DPrintPreviewWidget::setReGenerate(bool generate)","Funname":"DPrintPreviewWidget::setReGenerate","Returntype":"void","Args":"bool generate"},{"Uniquefunname":"void DPrintPreviewWidget::setScale(qreal scale)","Funname":"DPrintPreviewWidget::setScale","Returntype":"void","Args":"qreal scale"},{"Uniquefunname":"void DPrintPreviewWidget::setVisible(bool visible)","Funname":"DPrintPreviewWidget::setVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DPrintPreviewWidget::themeTypeChanged(DGuiApplicationHelper::ColorType themeType)","Funname":"DPrintPreviewWidget::themeTypeChanged","Returntype":"void","Args":"DGuiApplicationHelper::ColorType themeType"},{"Uniquefunname":"void DPrintPreviewWidget::totalPages(int)","Funname":"DPrintPreviewWidget::totalPages","Returntype":"void","Args":"int"},{"Uniquefunname":"void DPrintPreviewWidget::turnBack()","Funname":"DPrintPreviewWidget::turnBack","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::turnBegin()","Funname":"DPrintPreviewWidget::turnBegin","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::turnEnd()","Funname":"DPrintPreviewWidget::turnEnd","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::turnFront()","Funname":"DPrintPreviewWidget::turnFront","Returntype":"void","Args":""},{"Uniquefunname":"bool DPrintPreviewWidget::turnPageAble()","Funname":"DPrintPreviewWidget::turnPageAble","Returntype":"bool","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::updatePreview()","Funname":"DPrintPreviewWidget::updatePreview","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidget::updateView()","Funname":"DPrintPreviewWidget::updateView","Returntype":"void","Args":""},{"Uniquefunname":" DPrinter(PrinterMode mode=ScreenResolution)","Funname":"DPrinter","Returntype":"","Args":"PrinterMode mode=ScreenResolution"},{"Uniquefunname":" DPrinter::DPrinter(PrinterMode mode=ScreenResolution)","Funname":"DPrinter::DPrinter","Returntype":"","Args":"PrinterMode mode=ScreenResolution"},{"Uniquefunname":"QList\u003cconst QPicture * \u003e DPrinter::getPrinterPages()","Funname":"DPrinter::getPrinterPages","Returntype":"QList\u003cconst QPicture * \u003e","Args":""},{"Uniquefunname":"void DPrinter::setPreviewMode(bool isPreview)","Funname":"DPrinter::setPreviewMode","Returntype":"void","Args":"bool isPreview"},{"Uniquefunname":" DPrinter::~DPrinter()","Funname":"DPrinter::~DPrinter","Returntype":"","Args":""},{"Uniquefunname":"int currentPage()","Funname":"currentPage","Returntype":"int","Args":""},{"Uniquefunname":"void currentPageChanged(int page)","Funname":"currentPageChanged","Returntype":"void","Args":"int page"},{"Uniquefunname":"DPrinter getColorMode()","Funname":"getColorMode","Returntype":"DPrinter","Args":""},{"Uniquefunname":"QList\u003cconst QPicture * \u003e getPrinterPages()","Funname":"getPrinterPages","Returntype":"QList\u003cconst QPicture * \u003e","Args":""},{"Uniquefunname":"qreal getScale() cons)","Funname":"getScale","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"PageRange pageRangeMode()","Funname":"pageRangeMode","Returntype":"PageRange","Args":""},{"Uniquefunname":"int pagesCount()","Funname":"pagesCount","Returntype":"int","Args":""},{"Uniquefunname":"void pagesCountChanged(int pages)","Funname":"pagesCountChanged","Returntype":"void","Args":"int pages"},{"Uniquefunname":"void previewChanged()","Funname":"previewChanged","Returntype":"void","Args":""},{"Uniquefunname":"void print()","Funname":"print","Returntype":"void","Args":""},{"Uniquefunname":"void refreshBegin()","Funname":"refreshBegin","Returntype":"void","Args":""},{"Uniquefunname":"void refreshEnd()","Funname":"refreshEnd","Returntype":"void","Args":""},{"Uniquefunname":"void setColorMode(const DPrinter::ColorMode \u0026 colorMode)","Funname":"setColorMode","Returntype":"void","Args":"const DPrinter::ColorMode \u0026 colorMode"},{"Uniquefunname":"void setCurrentPage(int page)","Funname":"setCurrentPage","Returntype":"void","Args":"int page"},{"Uniquefunname":"void setCurrentTargetPage(int page)","Funname":"setCurrentTargetPage","Returntype":"void","Args":"int page"},{"Uniquefunname":"void setOrientation(const DPrinter::Orientation \u0026 pageOrientation)","Funname":"setOrientation","Returntype":"void","Args":"const DPrinter::Orientation \u0026 pageOrientation"},{"Uniquefunname":"void setPageRange(const QVector\u003cint\u003e \u0026 rangePages)","Funname":"setPageRange","Returntype":"void","Args":"const QVector\u003cint\u003e \u0026 rangePages"},{"Uniquefunname":"void setPageRange(int from,int to)","Funname":"setPageRange","Returntype":"void","Args":"int from,int to"},{"Uniquefunname":"void setPageRangeALL()","Funname":"setPageRangeALL","Returntype":"void","Args":""},{"Uniquefunname":"void setPageRangeMode(PageRange mode)","Funname":"setPageRangeMode","Returntype":"void","Args":"PageRange mode"},{"Uniquefunname":"void setPreviewMode(bool isPreview)","Funname":"setPreviewMode","Returntype":"void","Args":"bool isPreview"},{"Uniquefunname":"void setReGenerate(bool generate)","Funname":"setReGenerate","Returntype":"void","Args":"bool generate"},{"Uniquefunname":"void setScale(qreal scale)","Funname":"setScale","Returntype":"void","Args":"qreal scale"},{"Uniquefunname":"void setVisible(bool visible)","Funname":"setVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void themeTypeChanged(DGuiApplicationHelper::ColorType themeType)","Funname":"themeTypeChanged","Returntype":"void","Args":"DGuiApplicationHelper::ColorType themeType"},{"Uniquefunname":"void totalPages(int)","Funname":"totalPages","Returntype":"void","Args":"int"},{"Uniquefunname":"void turnBack()","Funname":"turnBack","Returntype":"void","Args":""},{"Uniquefunname":"void turnBegin()","Funname":"turnBegin","Returntype":"void","Args":""},{"Uniquefunname":"void turnEnd()","Funname":"turnEnd","Returntype":"void","Args":""},{"Uniquefunname":"void turnFront()","Funname":"turnFront","Returntype":"void","Args":""},{"Uniquefunname":"bool turnPageAble()","Funname":"turnPageAble","Returntype":"bool","Args":""},{"Uniquefunname":"void updatePreview()","Funname":"updatePreview","Returntype":"void","Args":""},{"Uniquefunname":"void updateView()","Funname":"updateView","Returntype":"void","Args":""},{"Uniquefunname":" ~DPrinter()","Funname":"~DPrinter","Returntype":"","Args":""}],"Records":[{"Name":"enum:DPrintPreviewWidget::PageRange","Fields":["AllPage","CurrentPage","DPrintPreviewWidget::AllPage","DPrintPreviewWidget::CurrentPage","DPrintPreviewWidget::SelectPage","SelectPage"]},{"Name":"macro","Fields":["DPRINTPREVIEWWIDGET_H","private"]},{"Name":"enum:DPrintPreviewWidget::Imposition","Fields":["DPrintPreviewWidget::FourFour","DPrintPreviewWidget::None","DPrintPreviewWidget::OneTwo","DPrintPreviewWidget::ThreeThree","DPrintPreviewWidget::TwoThree","DPrintPreviewWidget::TwoTwo","FourFour","None","OneTwo","ThreeThree","TwoThree","TwoTwo"]}]}
{"Filepath":"src/widgets/dprogressbar.h","Functions":[{"Uniquefunname":" DProgressBar(QWidget * parent=nullptr)","Funname":"DProgressBar","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DProgressBar::DProgressBar(QWidget * parent=nullptr)","Funname":"DProgressBar::DProgressBar","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"QSize DProgressBar::minimumSizeHint() cons)","Funname":"DProgressBar::minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSize DProgressBar::sizeHint() cons)","Funname":"DProgressBar::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSize minimumSizeHint() cons)","Funname":"minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DPROGRESSBAR_H"]}]}
{"Filepath":"src/widgets/dsearchcombobox.h","Functions":[{"Uniquefunname":" DSearchComboBox(QWidget * parent=nullptr)","Funname":"DSearchComboBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSearchComboBox::DSearchComboBox(QWidget * parent=nullptr)","Funname":"DSearchComboBox::DSearchComboBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DSearchComboBox::setEditable(bool editable)","Funname":"DSearchComboBox::setEditable","Returntype":"void","Args":"bool editable"},{"Uniquefunname":"void DSearchComboBox::showPopup()","Funname":"DSearchComboBox::showPopup","Returntype":"void","Args":""},{"Uniquefunname":"void setEditable(bool editable)","Funname":"setEditable","Returntype":"void","Args":"bool editable"},{"Uniquefunname":"void showPopup()","Funname":"showPopup","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DSEARCHCOMBOBOX_H"]}]}
{"Filepath":"src/widgets/dsearchedit.h","Functions":[{"Uniquefunname":" DSearchEdit(QWidget * parent=nullptr)","Funname":"DSearchEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSearchEdit::DSearchEdit(QWidget * parent=nullptr)","Funname":"DSearchEdit::DSearchEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DSearchEdit::clear()","Funname":"DSearchEdit::clear","Returntype":"void","Args":""},{"Uniquefunname":"void DSearchEdit::clearEdit()","Funname":"DSearchEdit::clearEdit","Returntype":"void","Args":""},{"Uniquefunname":"bool DSearchEdit::isVoiceInput() cons)","Funname":"DSearchEdit::isVoiceInput","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString DSearchEdit::placeHolder() cons)","Funname":"DSearchEdit::placeHolder","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DSearchEdit::placeholderText() cons)","Funname":"DSearchEdit::placeholderText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void DSearchEdit::searchAborted()","Funname":"DSearchEdit::searchAborted","Returntype":"void","Args":""},{"Uniquefunname":"void DSearchEdit::setPlaceHolder(QString placeHolder)","Funname":"DSearchEdit::setPlaceHolder","Returntype":"void","Args":"QString placeHolder"},{"Uniquefunname":"void DSearchEdit::setPlaceholderText(const QString \u0026 text)","Funname":"DSearchEdit::setPlaceholderText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DSearchEdit::voiceChanged()","Funname":"DSearchEdit::voiceChanged","Returntype":"void","Args":""},{"Uniquefunname":" DSearchEdit::~DSearchEdit()","Funname":"DSearchEdit::~DSearchEdit","Returntype":"","Args":""},{"Uniquefunname":"void clear()","Funname":"clear","Returntype":"void","Args":""},{"Uniquefunname":"void clearEdit()","Funname":"clearEdit","Returntype":"void","Args":""},{"Uniquefunname":"bool isVoiceInput() cons)","Funname":"isVoiceInput","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QString placeHolder() cons)","Funname":"placeHolder","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString placeholderText() cons)","Funname":"placeholderText","Returntype":"QString","Args":") cons"},{"Uniquefunname":"void searchAborted()","Funname":"searchAborted","Returntype":"void","Args":""},{"Uniquefunname":"void setPlaceHolder(QString placeHolder)","Funname":"setPlaceHolder","Returntype":"void","Args":"QString placeHolder"},{"Uniquefunname":"void setPlaceholderText(const QString \u0026 text)","Funname":"setPlaceholderText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void voiceChanged()","Funname":"voiceChanged","Returntype":"void","Args":""},{"Uniquefunname":" ~DSearchEdit()","Funname":"~DSearchEdit","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DSEARCHEDIT_H"]}]}
{"Filepath":"src/widgets/dsegmentedcontrol.h","Functions":[{"Uniquefunname":" DSegmentedControl(QWidget * parent=0)","Funname":"DSegmentedControl","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DSegmentedControl::DSegmentedControl(QWidget * parent=0)","Funname":"DSegmentedControl::DSegmentedControl","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DSegmentedControl::addSegmented(const QIcon \u0026 icon,const QString \u0026 title)","Funname":"DSegmentedControl::addSegmented","Returntype":"int","Args":"const QIcon \u0026 icon,const QString \u0026 title"},{"Uniquefunname":"int DSegmentedControl::addSegmented(const QString \u0026 title)","Funname":"DSegmentedControl::addSegmented","Returntype":"int","Args":"const QString \u0026 title"},{"Uniquefunname":"void DSegmentedControl::addSegmented(const QList\u003cQIcon\u003e \u0026 iconList,const QStringList \u0026 titleList)","Funname":"DSegmentedControl::addSegmented","Returntype":"void","Args":"const QList\u003cQIcon\u003e \u0026 iconList,const QStringList \u0026 titleList"},{"Uniquefunname":"void DSegmentedControl::addSegmented(const QStringList \u0026 titleList)","Funname":"DSegmentedControl::addSegmented","Returntype":"void","Args":"const QStringList \u0026 titleList"},{"Uniquefunname":"int DSegmentedControl::animationDuration() cons)","Funname":"DSegmentedControl::animationDuration","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DSegmentedControl::animationDurationChanged(int animationDuration)","Funname":"DSegmentedControl::animationDurationChanged","Returntype":"void","Args":"int animationDuration"},{"Uniquefunname":"QEasingCurve DSegmentedControl::animationType() cons)","Funname":"DSegmentedControl::animationType","Returntype":"QEasingCurve","Args":") cons"},{"Uniquefunname":"QToolButton * DSegmentedControl::at(int index) cons)","Funname":"DSegmentedControl::at","Returntype":"QToolButton *","Args":"int index) cons"},{"Uniquefunname":"void DSegmentedControl::buttonClicked()","Funname":"DSegmentedControl::buttonClicked","Returntype":"void","Args":""},{"Uniquefunname":"void DSegmentedControl::clear()","Funname":"DSegmentedControl::clear","Returntype":"void","Args":""},{"Uniquefunname":"int DSegmentedControl::count() cons)","Funname":"DSegmentedControl::count","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DSegmentedControl::currentIndex() cons)","Funname":"DSegmentedControl::currentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DSegmentedControl::currentTitleChanged(QString title)","Funname":"DSegmentedControl::currentTitleChanged","Returntype":"void","Args":"QString title"},{"Uniquefunname":"bool DSegmentedControl::eventFilter(QObject *,QEvent *)","Funname":"DSegmentedControl::eventFilter","Returntype":"bool","Args":"QObject *,QEvent *"},{"Uniquefunname":"QIcon DSegmentedControl::getIcon(int index) cons)","Funname":"DSegmentedControl::getIcon","Returntype":"QIcon","Args":"int index) cons"},{"Uniquefunname":"QString DSegmentedControl::getText(int index) cons)","Funname":"DSegmentedControl::getText","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"const DSegmentedHighlight * DSegmentedControl::highlight() cons)","Funname":"DSegmentedControl::highlight","Returntype":"const DSegmentedHighlight *","Args":") cons"},{"Uniquefunname":"int DSegmentedControl::indexByTitle(const QString \u0026 title) cons)","Funname":"DSegmentedControl::indexByTitle","Returntype":"int","Args":"const QString \u0026 title) cons"},{"Uniquefunname":"void DSegmentedControl::insertSegmented(int index,const QIcon \u0026 icon,const QString \u0026 title)","Funname":"DSegmentedControl::insertSegmented","Returntype":"void","Args":"int index,const QIcon \u0026 icon,const QString \u0026 title"},{"Uniquefunname":"void DSegmentedControl::insertSegmented(int index,const QString \u0026 title)","Funname":"DSegmentedControl::insertSegmented","Returntype":"void","Args":"int index,const QString \u0026 title"},{"Uniquefunname":"void DSegmentedControl::removeSegmented(int index)","Funname":"DSegmentedControl::removeSegmented","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DSegmentedControl::resizeEvent(QResizeEvent * event)","Funname":"DSegmentedControl::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void DSegmentedControl::setAnimationDuration(int animationDuration)","Funname":"DSegmentedControl::setAnimationDuration","Returntype":"void","Args":"int animationDuration"},{"Uniquefunname":"void DSegmentedControl::setAnimationType(QEasingCurve::Type animationType)","Funname":"DSegmentedControl::setAnimationType","Returntype":"void","Args":"QEasingCurve::Type animationType"},{"Uniquefunname":"bool DSegmentedControl::setCurrentIndex(int currentIndex)","Funname":"DSegmentedControl::setCurrentIndex","Returntype":"bool","Args":"int currentIndex"},{"Uniquefunname":"bool DSegmentedControl::setCurrentIndexByTitle(const QString \u0026 title)","Funname":"DSegmentedControl::setCurrentIndexByTitle","Returntype":"bool","Args":"const QString \u0026 title"},{"Uniquefunname":"void DSegmentedControl::setIcon(int index,const QIcon \u0026 icon)","Funname":"DSegmentedControl::setIcon","Returntype":"void","Args":"int index,const QIcon \u0026 icon"},{"Uniquefunname":"void DSegmentedControl::setText(int index,const QString \u0026 title)","Funname":"DSegmentedControl::setText","Returntype":"void","Args":"int index,const QString \u0026 title"},{"Uniquefunname":"void DSegmentedControl::updateHighlightGeometry(bool animation=true)","Funname":"DSegmentedControl::updateHighlightGeometry","Returntype":"void","Args":"bool animation=true"},{"Uniquefunname":" DSegmentedHighlight(QWidget * parent=0)","Funname":"DSegmentedHighlight","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DSegmentedHighlight::DSegmentedHighlight(QWidget * parent=0)","Funname":"DSegmentedHighlight::DSegmentedHighlight","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int addSegmented(const QIcon \u0026 icon,const QString \u0026 title)","Funname":"addSegmented","Returntype":"int","Args":"const QIcon \u0026 icon,const QString \u0026 title"},{"Uniquefunname":"int addSegmented(const QString \u0026 title)","Funname":"addSegmented","Returntype":"int","Args":"const QString \u0026 title"},{"Uniquefunname":"void addSegmented(const QList\u003cQIcon\u003e \u0026 iconList,const QStringList \u0026 titleList)","Funname":"addSegmented","Returntype":"void","Args":"const QList\u003cQIcon\u003e \u0026 iconList,const QStringList \u0026 titleList"},{"Uniquefunname":"void addSegmented(const QStringList \u0026 titleList)","Funname":"addSegmented","Returntype":"void","Args":"const QStringList \u0026 titleList"},{"Uniquefunname":"int animationDuration() cons)","Funname":"animationDuration","Returntype":"int","Args":") cons"},{"Uniquefunname":"void animationDurationChanged(int animationDuration)","Funname":"animationDurationChanged","Returntype":"void","Args":"int animationDuration"},{"Uniquefunname":"QEasingCurve animationType() cons)","Funname":"animationType","Returntype":"QEasingCurve","Args":") cons"},{"Uniquefunname":"QToolButton * at(int index) cons)","Funname":"at","Returntype":"QToolButton *","Args":"int index) cons"},{"Uniquefunname":"void buttonClicked()","Funname":"buttonClicked","Returntype":"void","Args":""},{"Uniquefunname":"void clear()","Funname":"clear","Returntype":"void","Args":""},{"Uniquefunname":"int count() cons)","Funname":"count","Returntype":"int","Args":") cons"},{"Uniquefunname":"int currentIndex() cons)","Funname":"currentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void currentTitleChanged(QString title)","Funname":"currentTitleChanged","Returntype":"void","Args":"QString title"},{"Uniquefunname":"bool eventFilter(QObject *,QEvent *)","Funname":"eventFilter","Returntype":"bool","Args":"QObject *,QEvent *"},{"Uniquefunname":"QIcon getIcon(int index) cons)","Funname":"getIcon","Returntype":"QIcon","Args":"int index) cons"},{"Uniquefunname":"QString getText(int index) cons)","Funname":"getText","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"const DSegmentedHighlight * highlight() cons)","Funname":"highlight","Returntype":"const DSegmentedHighlight *","Args":") cons"},{"Uniquefunname":"int indexByTitle(const QString \u0026 title) cons)","Funname":"indexByTitle","Returntype":"int","Args":"const QString \u0026 title) cons"},{"Uniquefunname":"void insertSegmented(int index,const QIcon \u0026 icon,const QString \u0026 title)","Funname":"insertSegmented","Returntype":"void","Args":"int index,const QIcon \u0026 icon,const QString \u0026 title"},{"Uniquefunname":"void insertSegmented(int index,const QString \u0026 title)","Funname":"insertSegmented","Returntype":"void","Args":"int index,const QString \u0026 title"},{"Uniquefunname":"void removeSegmented(int index)","Funname":"removeSegmented","Returntype":"void","Args":"int index"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void setAnimationDuration(int animationDuration)","Funname":"setAnimationDuration","Returntype":"void","Args":"int animationDuration"},{"Uniquefunname":"void setAnimationType(QEasingCurve::Type animationType)","Funname":"setAnimationType","Returntype":"void","Args":"QEasingCurve::Type animationType"},{"Uniquefunname":"bool setCurrentIndex(int currentIndex)","Funname":"setCurrentIndex","Returntype":"bool","Args":"int currentIndex"},{"Uniquefunname":"bool setCurrentIndexByTitle(const QString \u0026 title)","Funname":"setCurrentIndexByTitle","Returntype":"bool","Args":"const QString \u0026 title"},{"Uniquefunname":"void setIcon(int index,const QIcon \u0026 icon)","Funname":"setIcon","Returntype":"void","Args":"int index,const QIcon \u0026 icon"},{"Uniquefunname":"void setText(int index,const QString \u0026 title)","Funname":"setText","Returntype":"void","Args":"int index,const QString \u0026 title"},{"Uniquefunname":"void updateHighlightGeometry(bool animation=true)","Funname":"updateHighlightGeometry","Returntype":"void","Args":"bool animation=true"}],"Records":[{"Name":"macro","Fields":["DSEGMENTEDCONTROL_H"]}]}
{"Filepath":"src/widgets/dsettingsdialog.h","Functions":[{"Uniquefunname":" DSettingsDialog(QWidget * parent=nullptr)","Funname":"DSettingsDialog","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSettingsDialog::DSettingsDialog(QWidget * parent=nullptr)","Funname":"DSettingsDialog::DSettingsDialog","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"bool DSettingsDialog::groupIsVisible(const QString \u0026 groupKey) cons)","Funname":"DSettingsDialog::groupIsVisible","Returntype":"bool","Args":"const QString \u0026 groupKey) cons"},{"Uniquefunname":"void DSettingsDialog::scrollToGroup(const QString \u0026 groupKey)","Funname":"DSettingsDialog::scrollToGroup","Returntype":"void","Args":"const QString \u0026 groupKey"},{"Uniquefunname":"void DSettingsDialog::setGroupVisible(const QString \u0026 groupKey,bool visible)","Funname":"DSettingsDialog::setGroupVisible","Returntype":"void","Args":"const QString \u0026 groupKey,bool visible"},{"Uniquefunname":"void DSettingsDialog::setIcon(const QIcon \u0026 icon)","Funname":"DSettingsDialog::setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void DSettingsDialog::setResetVisible(bool visible)","Funname":"DSettingsDialog::setResetVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DSettingsDialog::updateSettings(DTK_CORE_NAMESPACE::DSettings * settings)","Funname":"DSettingsDialog::updateSettings","Returntype":"void","Args":"DTK_CORE_NAMESPACE::DSettings * settings"},{"Uniquefunname":"void DSettingsDialog::updateSettings(const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettings * settings)","Funname":"DSettingsDialog::updateSettings","Returntype":"void","Args":"const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettings * settings"},{"Uniquefunname":"DSettingsWidgetFactory * DSettingsDialog::widgetFactory() cons)","Funname":"DSettingsDialog::widgetFactory","Returntype":"DSettingsWidgetFactory *","Args":") cons"},{"Uniquefunname":" DSettingsDialog::~DSettingsDialog()","Funname":"DSettingsDialog::~DSettingsDialog","Returntype":"","Args":""},{"Uniquefunname":"bool groupIsVisible(const QString \u0026 groupKey) cons)","Funname":"groupIsVisible","Returntype":"bool","Args":"const QString \u0026 groupKey) cons"},{"Uniquefunname":"void scrollToGroup(const QString \u0026 groupKey)","Funname":"scrollToGroup","Returntype":"void","Args":"const QString \u0026 groupKey"},{"Uniquefunname":"void setGroupVisible(const QString \u0026 groupKey,bool visible)","Funname":"setGroupVisible","Returntype":"void","Args":"const QString \u0026 groupKey,bool visible"},{"Uniquefunname":"void setIcon(const QIcon \u0026 icon)","Funname":"setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void setResetVisible(bool visible)","Funname":"setResetVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void updateSettings(DTK_CORE_NAMESPACE::DSettings * settings)","Funname":"updateSettings","Returntype":"void","Args":"DTK_CORE_NAMESPACE::DSettings * settings"},{"Uniquefunname":"void updateSettings(const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettings * settings)","Funname":"updateSettings","Returntype":"void","Args":"const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettings * settings"},{"Uniquefunname":"DSettingsWidgetFactory * widgetFactory() cons)","Funname":"widgetFactory","Returntype":"DSettingsWidgetFactory *","Args":") cons"},{"Uniquefunname":" ~DSettingsDialog()","Funname":"~DSettingsDialog","Returntype":"","Args":""}],"Records":[{"Name":"class:DSettingsDialog","Fields":["QScopedPointer\u003cDSettingsDialogPrivate\u003e DSettingsDialog::dd_ptr"]}]}
{"Filepath":"src/widgets/dsettingswidgetfactory.h","Functions":[{"Uniquefunname":" DSettingsWidgetFactory(QObject * parent=Q_NULLPTR)","Funname":"DSettingsWidgetFactory","Returntype":"","Args":"QObject * parent=Q_NULLPTR"},{"Uniquefunname":" DSettingsWidgetFactory::DSettingsWidgetFactory(QObject * parent=Q_NULLPTR)","Funname":"DSettingsWidgetFactory::DSettingsWidgetFactory","Returntype":"","Args":"QObject * parent=Q_NULLPTR"},{"Uniquefunname":"QPair\u003cQWidget *,QWidget * \u003e DSettingsWidgetFactory::createItem(QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons)","Funname":"DSettingsWidgetFactory::createItem","Returntype":"QPair\u003cQWidget *,QWidget * \u003e","Args":"QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons"},{"Uniquefunname":"QPair\u003cQWidget *,QWidget * \u003e DSettingsWidgetFactory::createItem(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons)","Funname":"DSettingsWidgetFactory::createItem","Returntype":"QPair\u003cQWidget *,QWidget * \u003e","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons"},{"Uniquefunname":"QPair\u003cQWidget *,QWidget * \u003e DSettingsWidgetFactory::createStandardItem(const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget)","Funname":"DSettingsWidgetFactory::createStandardItem","Returntype":"QPair\u003cQWidget *,QWidget * \u003e","Args":"const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget"},{"Uniquefunname":"D_DECL_DEPRECATED QWidget * DSettingsWidgetFactory::createTwoColumWidget(DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget)","Funname":"DSettingsWidgetFactory::createTwoColumWidget","Returntype":"D_DECL_DEPRECATED QWidget *","Args":"DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget"},{"Uniquefunname":"D_DECL_DEPRECATED QWidget * DSettingsWidgetFactory::createTwoColumWidget(const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget)","Funname":"DSettingsWidgetFactory::createTwoColumWidget","Returntype":"D_DECL_DEPRECATED QWidget *","Args":"const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget"},{"Uniquefunname":"QWidget * DSettingsWidgetFactory::createWidget(QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option)","Funname":"DSettingsWidgetFactory::createWidget","Returntype":"QWidget *","Args":"QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option"},{"Uniquefunname":"QWidget * DSettingsWidgetFactory::createWidget(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option)","Funname":"DSettingsWidgetFactory::createWidget","Returntype":"QWidget *","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option"},{"Uniquefunname":"void DSettingsWidgetFactory::registerWidget(const QString \u0026 viewType,std::function\u003cItemCreateHandler\u003e handler)","Funname":"DSettingsWidgetFactory::registerWidget","Returntype":"void","Args":"const QString \u0026 viewType,std::function\u003cItemCreateHandler\u003e handler"},{"Uniquefunname":"void DSettingsWidgetFactory::registerWidget(const QString \u0026 viewType,std::function\u003cWidgetCreateHandler\u003e handler)","Funname":"DSettingsWidgetFactory::registerWidget","Returntype":"void","Args":"const QString \u0026 viewType,std::function\u003cWidgetCreateHandler\u003e handler"},{"Uniquefunname":" DSettingsWidgetFactory::~DSettingsWidgetFactory()","Funname":"DSettingsWidgetFactory::~DSettingsWidgetFactory","Returntype":"","Args":""},{"Uniquefunname":"QPair\u003cQWidget *,QWidget * \u003e createItem(QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons)","Funname":"createItem","Returntype":"QPair\u003cQWidget *,QWidget * \u003e","Args":"QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons"},{"Uniquefunname":"QPair\u003cQWidget *,QWidget * \u003e createItem(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons)","Funname":"createItem","Returntype":"QPair\u003cQWidget *,QWidget * \u003e","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option) cons"},{"Uniquefunname":"QPair\u003cQWidget *,QWidget * \u003e createStandardItem(const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget)","Funname":"createStandardItem","Returntype":"QPair\u003cQWidget *,QWidget * \u003e","Args":"const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget"},{"Uniquefunname":"D_DECL_DEPRECATED QWidget * createTwoColumWidget(DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget)","Funname":"createTwoColumWidget","Returntype":"D_DECL_DEPRECATED QWidget *","Args":"DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget"},{"Uniquefunname":"D_DECL_DEPRECATED QWidget * createTwoColumWidget(const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget)","Funname":"createTwoColumWidget","Returntype":"D_DECL_DEPRECATED QWidget *","Args":"const QByteArray \u0026 translateContext,DTK_CORE_NAMESPACE::DSettingsOption * option,QWidget * rightWidget"},{"Uniquefunname":"QWidget * createWidget(QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option)","Funname":"createWidget","Returntype":"QWidget *","Args":"QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option"},{"Uniquefunname":"QWidget * createWidget(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option)","Funname":"createWidget","Returntype":"QWidget *","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettingsOption\u003e option"},{"Uniquefunname":"void registerWidget(const QString \u0026 viewType,std::function\u003cItemCreateHandler\u003e handler)","Funname":"registerWidget","Returntype":"void","Args":"const QString \u0026 viewType,std::function\u003cItemCreateHandler\u003e handler"},{"Uniquefunname":"void registerWidget(const QString \u0026 viewType,std::function\u003cWidgetCreateHandler\u003e handler)","Funname":"registerWidget","Returntype":"void","Args":"const QString \u0026 viewType,std::function\u003cWidgetCreateHandler\u003e handler"},{"Uniquefunname":" ~DSettingsWidgetFactory()","Funname":"~DSettingsWidgetFactory","Returntype":"","Args":""}],"Records":[{"Name":"class:DSettingsWidgetFactory","Fields":["QScopedPointer\u003cDSettingsWidgetFactoryPrivate\u003e DSettingsWidgetFactory::dd_ptr"]}]}
{"Filepath":"src/widgets/dshadowline.h","Functions":[{"Uniquefunname":" DShadowLine(QWidget * parent=nullptr)","Funname":"DShadowLine","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DShadowLine::DShadowLine(QWidget * parent=nullptr)","Funname":"DShadowLine::DShadowLine","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DShadowLine::paintEvent(QPaintEvent * event)","Funname":"DShadowLine::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"QSize DShadowLine::sizeHint() cons)","Funname":"DShadowLine::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DSHADOWLINE_H"]}]}
{"Filepath":"src/widgets/dshortcutedit.h","Functions":[{"Uniquefunname":" DShortcutEdit(QWidget * parent=Q_NULLPTR)","Funname":"DShortcutEdit","Returntype":"","Args":"QWidget * parent=Q_NULLPTR"},{"Uniquefunname":" DShortcutEdit::DShortcutEdit(QWidget * parent=Q_NULLPTR)","Funname":"DShortcutEdit::DShortcutEdit","Returntype":"","Args":"QWidget * parent=Q_NULLPTR"},{"Uniquefunname":"void DShortcutEdit::clearShortcutKey()","Funname":"DShortcutEdit::clearShortcutKey","Returntype":"void","Args":""},{"Uniquefunname":"QString DShortcutEdit::convertShortcutKeys(const QString \u0026 keys)","Funname":"DShortcutEdit::convertShortcutKeys","Returntype":"QString","Args":"const QString \u0026 keys"},{"Uniquefunname":"bool DShortcutEdit::eventFilter(QObject * o,QEvent * e)","Funname":"DShortcutEdit::eventFilter","Returntype":"bool","Args":"QObject * o,QEvent * e"},{"Uniquefunname":"const QList\u003cQRegExp\u003e \u0026 DShortcutEdit::getBlockShortcutKeysList() cons)","Funname":"DShortcutEdit::getBlockShortcutKeysList","Returntype":"const QList\u003cQRegExp\u003e \u0026","Args":") cons"},{"Uniquefunname":"const QMap\u003cQString,QString\u003e \u0026 DShortcutEdit::getKeyMapping() cons)","Funname":"DShortcutEdit::getKeyMapping","Returntype":"const QMap\u003cQString,QString\u003e \u0026","Args":") cons"},{"Uniquefunname":"void DShortcutEdit::invalidShortcutKey(const QString \u0026 shortcutKeys)","Funname":"DShortcutEdit::invalidShortcutKey","Returntype":"void","Args":"const QString \u0026 shortcutKeys"},{"Uniquefunname":"bool DShortcutEdit::isValidShortcutKey(const QString \u0026 key)","Funname":"DShortcutEdit::isValidShortcutKey","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"void DShortcutEdit::setBlockShortcutKeysList(const QList\u003cQRegExp\u003e \u0026 kList)","Funname":"DShortcutEdit::setBlockShortcutKeysList","Returntype":"void","Args":"const QList\u003cQRegExp\u003e \u0026 kList"},{"Uniquefunname":"void DShortcutEdit::setInValidState() cons)","Funname":"DShortcutEdit::setInValidState","Returntype":"void","Args":") cons"},{"Uniquefunname":"void DShortcutEdit::setKeyMapping(const QMap\u003cQString,QString\u003e \u0026 mapping)","Funname":"DShortcutEdit::setKeyMapping","Returntype":"void","Args":"const QMap\u003cQString,QString\u003e \u0026 mapping"},{"Uniquefunname":"void DShortcutEdit::setNormalState() cons)","Funname":"DShortcutEdit::setNormalState","Returntype":"void","Args":") cons"},{"Uniquefunname":"void DShortcutEdit::setShortcutKey(const QString \u0026 key)","Funname":"DShortcutEdit::setShortcutKey","Returntype":"void","Args":"const QString \u0026 key"},{"Uniquefunname":"void DShortcutEdit::shortcutKeyPress(QKeyEvent * e)","Funname":"DShortcutEdit::shortcutKeyPress","Returntype":"void","Args":"QKeyEvent * e"},{"Uniquefunname":"void DShortcutEdit::shortcutKeysFinished(const QString \u0026 shortcutKeys)","Funname":"DShortcutEdit::shortcutKeysFinished","Returntype":"void","Args":"const QString \u0026 shortcutKeys"},{"Uniquefunname":"QSize DShortcutEdit::sizeHint() cons)","Funname":"DShortcutEdit::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DShortcutEdit::toEchoMode()","Funname":"DShortcutEdit::toEchoMode","Returntype":"void","Args":""},{"Uniquefunname":"void DShortcutEdit::toInputMode() cons)","Funname":"DShortcutEdit::toInputMode","Returntype":"void","Args":") cons"},{"Uniquefunname":" DShortcutEditLabel(QWidget * parent=0)","Funname":"DShortcutEditLabel","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DShortcutEditLabel::DShortcutEditLabel(QWidget * parent=0)","Funname":"DShortcutEditLabel::DShortcutEditLabel","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DShortcutEditLabel::enterEvent(QEvent *)","Funname":"DShortcutEditLabel::enterEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void DShortcutEditLabel::leaveEvent(QEvent *)","Funname":"DShortcutEditLabel::leaveEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void DShortcutEditLabel::setEchoState(const EchoState state)","Funname":"DShortcutEditLabel::setEchoState","Returntype":"void","Args":"const EchoState state"},{"Uniquefunname":"void clearShortcutKey()","Funname":"clearShortcutKey","Returntype":"void","Args":""},{"Uniquefunname":"QString convertShortcutKeys(const QString \u0026 keys)","Funname":"convertShortcutKeys","Returntype":"QString","Args":"const QString \u0026 keys"},{"Uniquefunname":"void enterEvent(QEvent *)","Funname":"enterEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"bool eventFilter(QObject * o,QEvent * e)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * o,QEvent * e"},{"Uniquefunname":"const QList\u003cQRegExp\u003e \u0026 getBlockShortcutKeysList() cons)","Funname":"getBlockShortcutKeysList","Returntype":"const QList\u003cQRegExp\u003e \u0026","Args":") cons"},{"Uniquefunname":"const QMap\u003cQString,QString\u003e \u0026 getKeyMapping() cons)","Funname":"getKeyMapping","Returntype":"const QMap\u003cQString,QString\u003e \u0026","Args":") cons"},{"Uniquefunname":"void invalidShortcutKey(const QString \u0026 shortcutKeys)","Funname":"invalidShortcutKey","Returntype":"void","Args":"const QString \u0026 shortcutKeys"},{"Uniquefunname":"bool isValidShortcutKey(const QString \u0026 key)","Funname":"isValidShortcutKey","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"void leaveEvent(QEvent *)","Funname":"leaveEvent","Returntype":"void","Args":"QEvent *"},{"Uniquefunname":"void setBlockShortcutKeysList(const QList\u003cQRegExp\u003e \u0026 kList)","Funname":"setBlockShortcutKeysList","Returntype":"void","Args":"const QList\u003cQRegExp\u003e \u0026 kList"},{"Uniquefunname":"void setEchoState(const EchoState state)","Funname":"setEchoState","Returntype":"void","Args":"const EchoState state"},{"Uniquefunname":"void setInValidState() cons)","Funname":"setInValidState","Returntype":"void","Args":") cons"},{"Uniquefunname":"void setKeyMapping(const QMap\u003cQString,QString\u003e \u0026 mapping)","Funname":"setKeyMapping","Returntype":"void","Args":"const QMap\u003cQString,QString\u003e \u0026 mapping"},{"Uniquefunname":"void setNormalState() cons)","Funname":"setNormalState","Returntype":"void","Args":") cons"},{"Uniquefunname":"void setShortcutKey(const QString \u0026 key)","Funname":"setShortcutKey","Returntype":"void","Args":"const QString \u0026 key"},{"Uniquefunname":"void shortcutKeyPress(QKeyEvent * e)","Funname":"shortcutKeyPress","Returntype":"void","Args":"QKeyEvent * e"},{"Uniquefunname":"void shortcutKeysFinished(const QString \u0026 shortcutKeys)","Funname":"shortcutKeysFinished","Returntype":"void","Args":"const QString \u0026 shortcutKeys"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void toEchoMode()","Funname":"toEchoMode","Returntype":"void","Args":""},{"Uniquefunname":"void toInputMode() cons)","Funname":"toInputMode","Returntype":"void","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DSHORTCUTEDIT_H"]},{"Name":"class:DShortcutEdit","Fields":["const QString DShortcutEdit::DefaultTips","QList\u003cQRegExp\u003e DShortcutEdit::m_blockedShortcutKeys","QMap\u003cQString,QString\u003e DShortcutEdit::m_keyMapping","QLabel * DShortcutEdit::m_keysEdit","DShortcutEditLabel * DShortcutEdit::m_keysLabel","QString DShortcutEdit::m_shortcutKeys"]},{"Name":"enum:DShortcutEditLabel::EchoState","Fields":["DShortcutEditLabel::Hover","DShortcutEditLabel::Invalid","DShortcutEditLabel::Normal","Hover","Invalid","Normal"]},{"Name":"class:DShortcutEditLabel","Fields":["QColor DShortcutEditLabel::m_colorHover","QColor DShortcutEditLabel::m_colorInvalid","QColor DShortcutEditLabel::m_colorNormal","EchoState DShortcutEditLabel::m_state"]}]}
{"Filepath":"src/widgets/dsimplelistitem.h","Functions":[{"Uniquefunname":" DSimpleListItem()","Funname":"DSimpleListItem","Returntype":"","Args":""},{"Uniquefunname":" DSimpleListItem::DSimpleListItem()","Funname":"DSimpleListItem::DSimpleListItem","Returntype":"","Args":""},{"Uniquefunname":"void DSimpleListItem::drawBackground(QRect rect,QPainter * painter,int index,bool isSelect,bool isHover)","Funname":"DSimpleListItem::drawBackground","Returntype":"void","Args":"QRect rect,QPainter * painter,int index,bool isSelect,bool isHover"},{"Uniquefunname":"void DSimpleListItem::drawForeground(QRect rect,QPainter * painter,int column,int index,bool isSelect,bool isHover)","Funname":"DSimpleListItem::drawForeground","Returntype":"void","Args":"QRect rect,QPainter * painter,int column,int index,bool isSelect,bool isHover"},{"Uniquefunname":"bool DSimpleListItem::sameAs(DSimpleListItem * item)","Funname":"DSimpleListItem::sameAs","Returntype":"bool","Args":"DSimpleListItem * item"},{"Uniquefunname":"void drawBackground(QRect rect,QPainter * painter,int index,bool isSelect,bool isHover)","Funname":"drawBackground","Returntype":"void","Args":"QRect rect,QPainter * painter,int index,bool isSelect,bool isHover"},{"Uniquefunname":"void drawForeground(QRect rect,QPainter * painter,int column,int index,bool isSelect,bool isHover)","Funname":"drawForeground","Returntype":"void","Args":"QRect rect,QPainter * painter,int column,int index,bool isSelect,bool isHover"},{"Uniquefunname":"bool sameAs(DSimpleListItem * item)","Funname":"sameAs","Returntype":"bool","Args":"DSimpleListItem * item"}],"Records":[{"Name":"macro","Fields":["DSIMPLELISTITEM_H"]}]}
{"Filepath":"src/widgets/dsimplelistview.h","Functions":[{"Uniquefunname":" DSimpleListView(QWidget * parent=0)","Funname":"DSimpleListView","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DSimpleListView::DSimpleListView(QWidget * parent=0)","Funname":"DSimpleListView::DSimpleListView","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DSimpleListView::addItems(QList\u003cDSimpleListItem * \u003e items)","Funname":"DSimpleListView::addItems","Returntype":"void","Args":"QList\u003cDSimpleListItem * \u003e items"},{"Uniquefunname":"void DSimpleListView::addSelections(QList\u003cDSimpleListItem * \u003e items,bool recordLastSelection=true)","Funname":"DSimpleListView::addSelections","Returntype":"void","Args":"QList\u003cDSimpleListItem * \u003e items,bool recordLastSelection=true"},{"Uniquefunname":"int DSimpleListView::adjustRenderOffset(int offset)","Funname":"DSimpleListView::adjustRenderOffset","Returntype":"int","Args":"int offset"},{"Uniquefunname":"void DSimpleListView::changeColumnVisible(int index,bool visible,QList\u003cbool\u003e columnVisibles)","Funname":"DSimpleListView::changeColumnVisible","Returntype":"void","Args":"int index,bool visible,QList\u003cbool\u003e columnVisibles"},{"Uniquefunname":"void DSimpleListView::changeHoverItem(QPoint pos,DSimpleListItem * item,int columnIndex)","Funname":"DSimpleListView::changeHoverItem","Returntype":"void","Args":"QPoint pos,DSimpleListItem * item,int columnIndex"},{"Uniquefunname":"void DSimpleListView::changeSortingStatus(int index,bool sortingOrder)","Funname":"DSimpleListView::changeSortingStatus","Returntype":"void","Args":"int index,bool sortingOrder"},{"Uniquefunname":"void DSimpleListView::clearItems()","Funname":"DSimpleListView::clearItems","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::clearSelections(bool clearLastSelection=true)","Funname":"DSimpleListView::clearSelections","Returntype":"void","Args":"bool clearLastSelection=true"},{"Uniquefunname":"void DSimpleListView::ctrlScrollPageDown()","Funname":"DSimpleListView::ctrlScrollPageDown","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::ctrlScrollPageUp()","Funname":"DSimpleListView::ctrlScrollPageUp","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::ctrlScrollToEnd()","Funname":"DSimpleListView::ctrlScrollToEnd","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::ctrlScrollToHome()","Funname":"DSimpleListView::ctrlScrollToHome","Returntype":"void","Args":""},{"Uniquefunname":"bool DSimpleListView::eventFilter(QObject *,QEvent * event)","Funname":"DSimpleListView::eventFilter","Returntype":"bool","Args":"QObject *,QEvent * event"},{"Uniquefunname":"int DSimpleListView::getBottomRenderOffset()","Funname":"DSimpleListView::getBottomRenderOffset","Returntype":"int","Args":""},{"Uniquefunname":"QList\u003cint\u003e DSimpleListView::getRenderWidths()","Funname":"DSimpleListView::getRenderWidths","Returntype":"QList\u003cint\u003e","Args":""},{"Uniquefunname":"int DSimpleListView::getScrollAreaHeight()","Funname":"DSimpleListView::getScrollAreaHeight","Returntype":"int","Args":""},{"Uniquefunname":"int DSimpleListView::getScrollbarHeight()","Funname":"DSimpleListView::getScrollbarHeight","Returntype":"int","Args":""},{"Uniquefunname":"int DSimpleListView::getScrollbarY()","Funname":"DSimpleListView::getScrollbarY","Returntype":"int","Args":""},{"Uniquefunname":"QList\u003cDSimpleListItem * \u003e DSimpleListView::getSelections()","Funname":"DSimpleListView::getSelections","Returntype":"QList\u003cDSimpleListItem * \u003e","Args":""},{"Uniquefunname":"void DSimpleListView::hideScrollbar()","Funname":"DSimpleListView::hideScrollbar","Returntype":"void","Args":""},{"Uniquefunname":"bool DSimpleListView::isMouseAtScrollArea(int x)","Funname":"DSimpleListView::isMouseAtScrollArea","Returntype":"bool","Args":"int x"},{"Uniquefunname":"bool DSimpleListView::isMouseAtTitleArea(int y)","Funname":"DSimpleListView::isMouseAtTitleArea","Returntype":"bool","Args":"int y"},{"Uniquefunname":"void DSimpleListView::keepSelectWhenClickBlank(bool keep)","Funname":"DSimpleListView::keepSelectWhenClickBlank","Returntype":"void","Args":"bool keep"},{"Uniquefunname":"void DSimpleListView::keyPressEvent(QKeyEvent * keyEvent)","Funname":"DSimpleListView::keyPressEvent","Returntype":"void","Args":"QKeyEvent * keyEvent"},{"Uniquefunname":"void DSimpleListView::leaveEvent(QEvent * event)","Funname":"DSimpleListView::leaveEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"void DSimpleListView::mouseHoverChanged(DSimpleListItem * oldItem,DSimpleListItem * newItem,int columnIndex,QPoint pos)","Funname":"DSimpleListView::mouseHoverChanged","Returntype":"void","Args":"DSimpleListItem * oldItem,DSimpleListItem * newItem,int columnIndex,QPoint pos"},{"Uniquefunname":"void DSimpleListView::mouseMoveEvent(QMouseEvent * mouseEvent)","Funname":"DSimpleListView::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * mouseEvent"},{"Uniquefunname":"void DSimpleListView::mousePressChanged(DSimpleListItem * item,int columnIndex,QPoint pos)","Funname":"DSimpleListView::mousePressChanged","Returntype":"void","Args":"DSimpleListItem * item,int columnIndex,QPoint pos"},{"Uniquefunname":"void DSimpleListView::mousePressEvent(QMouseEvent * mouseEvent)","Funname":"DSimpleListView::mousePressEvent","Returntype":"void","Args":"QMouseEvent * mouseEvent"},{"Uniquefunname":"void DSimpleListView::mouseReleaseChanged(DSimpleListItem * item,int columnIndex,QPoint pos)","Funname":"DSimpleListView::mouseReleaseChanged","Returntype":"void","Args":"DSimpleListItem * item,int columnIndex,QPoint pos"},{"Uniquefunname":"void DSimpleListView::mouseReleaseEvent(QMouseEvent * mouseEvent)","Funname":"DSimpleListView::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * mouseEvent"},{"Uniquefunname":"void DSimpleListView::paintEvent(QPaintEvent *)","Funname":"DSimpleListView::paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void DSimpleListView::paintScrollbar(QPainter * painter)","Funname":"DSimpleListView::paintScrollbar","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"void DSimpleListView::refreshItems(QList\u003cDSimpleListItem * \u003e items)","Funname":"DSimpleListView::refreshItems","Returntype":"void","Args":"QList\u003cDSimpleListItem * \u003e items"},{"Uniquefunname":"void DSimpleListView::removeItem(DSimpleListItem * item)","Funname":"DSimpleListView::removeItem","Returntype":"void","Args":"DSimpleListItem * item"},{"Uniquefunname":"void DSimpleListView::scrollPageDown()","Funname":"DSimpleListView::scrollPageDown","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::scrollPageUp()","Funname":"DSimpleListView::scrollPageUp","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::search(QString searchContent)","Funname":"DSimpleListView::search","Returntype":"void","Args":"QString searchContent"},{"Uniquefunname":"void DSimpleListView::selectAllItems()","Funname":"DSimpleListView::selectAllItems","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::selectFirstItem()","Funname":"DSimpleListView::selectFirstItem","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::selectLastItem()","Funname":"DSimpleListView::selectLastItem","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::selectNextItem()","Funname":"DSimpleListView::selectNextItem","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::selectNextItemWithOffset(int scrollOffset)","Funname":"DSimpleListView::selectNextItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void DSimpleListView::selectPrevItem()","Funname":"DSimpleListView::selectPrevItem","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::selectPrevItemWithOffset(int scrollOffset)","Funname":"DSimpleListView::selectPrevItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void DSimpleListView::setClipRadius(int radius)","Funname":"DSimpleListView::setClipRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void DSimpleListView::setColumnHideFlags(QList\u003cbool\u003e toggleHideFlags,int alwaysVisibleColumn=-1)","Funname":"DSimpleListView::setColumnHideFlags","Returntype":"void","Args":"QList\u003cbool\u003e toggleHideFlags,int alwaysVisibleColumn=-1"},{"Uniquefunname":"void DSimpleListView::setColumnSortingAlgorithms(QList\u003cSortAlgorithm\u003e * algorithms,int sortColumn=-1,bool descendingSort=false)","Funname":"DSimpleListView::setColumnSortingAlgorithms","Returntype":"void","Args":"QList\u003cSortAlgorithm\u003e * algorithms,int sortColumn=-1,bool descendingSort=false"},{"Uniquefunname":"void DSimpleListView::setColumnTitleInfo(QList\u003cQString\u003e titles,QList\u003cint\u003e widths,int height)","Funname":"DSimpleListView::setColumnTitleInfo","Returntype":"void","Args":"QList\u003cQString\u003e titles,QList\u003cint\u003e widths,int height"},{"Uniquefunname":"void DSimpleListView::setFrame(bool enableFrame,QColor color=QColor (\"\"),double opacity=0.1)","Funname":"DSimpleListView::setFrame","Returntype":"void","Args":"bool enableFrame,QColor color=QColor (\"\"),double opacity=0.1"},{"Uniquefunname":"void DSimpleListView::setRowHeight(int height)","Funname":"DSimpleListView::setRowHeight","Returntype":"void","Args":"int height"},{"Uniquefunname":"void DSimpleListView::setSearchAlgorithm(SearchAlgorithm algorithm)","Funname":"DSimpleListView::setSearchAlgorithm","Returntype":"void","Args":"SearchAlgorithm algorithm"},{"Uniquefunname":"void DSimpleListView::setSingleSelect(bool singleSelect)","Funname":"DSimpleListView::setSingleSelect","Returntype":"void","Args":"bool singleSelect"},{"Uniquefunname":"void DSimpleListView::shiftSelectItemsWithBound(int selectionStartIndex,int selectionEndIndex)","Funname":"DSimpleListView::shiftSelectItemsWithBound","Returntype":"void","Args":"int selectionStartIndex,int selectionEndIndex"},{"Uniquefunname":"void DSimpleListView::shiftSelectNextItemWithOffset(int scrollOffset)","Funname":"DSimpleListView::shiftSelectNextItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void DSimpleListView::shiftSelectPageDown()","Funname":"DSimpleListView::shiftSelectPageDown","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::shiftSelectPageUp()","Funname":"DSimpleListView::shiftSelectPageUp","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::shiftSelectPrevItemWithOffset(int scrollOffset)","Funname":"DSimpleListView::shiftSelectPrevItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void DSimpleListView::shiftSelectToEnd()","Funname":"DSimpleListView::shiftSelectToEnd","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::shiftSelectToHome()","Funname":"DSimpleListView::shiftSelectToHome","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::shiftSelectToNext()","Funname":"DSimpleListView::shiftSelectToNext","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::shiftSelectToPrev()","Funname":"DSimpleListView::shiftSelectToPrev","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::startScrollbarHideTimer()","Funname":"DSimpleListView::startScrollbarHideTimer","Returntype":"void","Args":""},{"Uniquefunname":"void DSimpleListView::wheelEvent(QWheelEvent * event)","Funname":"DSimpleListView::wheelEvent","Returntype":"void","Args":"QWheelEvent * event"},{"Uniquefunname":" DSimpleListView::~DSimpleListView()","Funname":"DSimpleListView::~DSimpleListView","Returntype":"","Args":""},{"Uniquefunname":"void addItems(QList\u003cDSimpleListItem * \u003e items)","Funname":"addItems","Returntype":"void","Args":"QList\u003cDSimpleListItem * \u003e items"},{"Uniquefunname":"void addSelections(QList\u003cDSimpleListItem * \u003e items,bool recordLastSelection=true)","Funname":"addSelections","Returntype":"void","Args":"QList\u003cDSimpleListItem * \u003e items,bool recordLastSelection=true"},{"Uniquefunname":"int adjustRenderOffset(int offset)","Funname":"adjustRenderOffset","Returntype":"int","Args":"int offset"},{"Uniquefunname":"void changeColumnVisible(int index,bool visible,QList\u003cbool\u003e columnVisibles)","Funname":"changeColumnVisible","Returntype":"void","Args":"int index,bool visible,QList\u003cbool\u003e columnVisibles"},{"Uniquefunname":"void changeHoverItem(QPoint pos,DSimpleListItem * item,int columnIndex)","Funname":"changeHoverItem","Returntype":"void","Args":"QPoint pos,DSimpleListItem * item,int columnIndex"},{"Uniquefunname":"void changeSortingStatus(int index,bool sortingOrder)","Funname":"changeSortingStatus","Returntype":"void","Args":"int index,bool sortingOrder"},{"Uniquefunname":"void clearItems()","Funname":"clearItems","Returntype":"void","Args":""},{"Uniquefunname":"void clearSelections(bool clearLastSelection=true)","Funname":"clearSelections","Returntype":"void","Args":"bool clearLastSelection=true"},{"Uniquefunname":"void ctrlScrollPageDown()","Funname":"ctrlScrollPageDown","Returntype":"void","Args":""},{"Uniquefunname":"void ctrlScrollPageUp()","Funname":"ctrlScrollPageUp","Returntype":"void","Args":""},{"Uniquefunname":"void ctrlScrollToEnd()","Funname":"ctrlScrollToEnd","Returntype":"void","Args":""},{"Uniquefunname":"void ctrlScrollToHome()","Funname":"ctrlScrollToHome","Returntype":"void","Args":""},{"Uniquefunname":"bool eventFilter(QObject *,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject *,QEvent * event"},{"Uniquefunname":"int getBottomRenderOffset()","Funname":"getBottomRenderOffset","Returntype":"int","Args":""},{"Uniquefunname":"QList\u003cint\u003e getRenderWidths()","Funname":"getRenderWidths","Returntype":"QList\u003cint\u003e","Args":""},{"Uniquefunname":"int getScrollAreaHeight()","Funname":"getScrollAreaHeight","Returntype":"int","Args":""},{"Uniquefunname":"int getScrollbarHeight()","Funname":"getScrollbarHeight","Returntype":"int","Args":""},{"Uniquefunname":"int getScrollbarY()","Funname":"getScrollbarY","Returntype":"int","Args":""},{"Uniquefunname":"QList\u003cDSimpleListItem * \u003e getSelections()","Funname":"getSelections","Returntype":"QList\u003cDSimpleListItem * \u003e","Args":""},{"Uniquefunname":"void hideScrollbar()","Funname":"hideScrollbar","Returntype":"void","Args":""},{"Uniquefunname":"bool isMouseAtScrollArea(int x)","Funname":"isMouseAtScrollArea","Returntype":"bool","Args":"int x"},{"Uniquefunname":"bool isMouseAtTitleArea(int y)","Funname":"isMouseAtTitleArea","Returntype":"bool","Args":"int y"},{"Uniquefunname":"void keepSelectWhenClickBlank(bool keep)","Funname":"keepSelectWhenClickBlank","Returntype":"void","Args":"bool keep"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * keyEvent)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * keyEvent"},{"Uniquefunname":"void leaveEvent(QEvent * event)","Funname":"leaveEvent","Returntype":"void","Args":"QEvent * event"},{"Uniquefunname":"void mouseHoverChanged(DSimpleListItem * oldItem,DSimpleListItem * newItem,int columnIndex,QPoint pos)","Funname":"mouseHoverChanged","Returntype":"void","Args":"DSimpleListItem * oldItem,DSimpleListItem * newItem,int columnIndex,QPoint pos"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * mouseEvent)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * mouseEvent"},{"Uniquefunname":"void mousePressChanged(DSimpleListItem * item,int columnIndex,QPoint pos)","Funname":"mousePressChanged","Returntype":"void","Args":"DSimpleListItem * item,int columnIndex,QPoint pos"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * mouseEvent)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * mouseEvent"},{"Uniquefunname":"void mouseReleaseChanged(DSimpleListItem * item,int columnIndex,QPoint pos)","Funname":"mouseReleaseChanged","Returntype":"void","Args":"DSimpleListItem * item,int columnIndex,QPoint pos"},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * mouseEvent)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * mouseEvent"},{"Uniquefunname":"void paintEvent(QPaintEvent *)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void paintScrollbar(QPainter * painter)","Funname":"paintScrollbar","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"void refreshItems(QList\u003cDSimpleListItem * \u003e items)","Funname":"refreshItems","Returntype":"void","Args":"QList\u003cDSimpleListItem * \u003e items"},{"Uniquefunname":"void removeItem(DSimpleListItem * item)","Funname":"removeItem","Returntype":"void","Args":"DSimpleListItem * item"},{"Uniquefunname":"void scrollPageDown()","Funname":"scrollPageDown","Returntype":"void","Args":""},{"Uniquefunname":"void scrollPageUp()","Funname":"scrollPageUp","Returntype":"void","Args":""},{"Uniquefunname":"void search(QString searchContent)","Funname":"search","Returntype":"void","Args":"QString searchContent"},{"Uniquefunname":"void selectAllItems()","Funname":"selectAllItems","Returntype":"void","Args":""},{"Uniquefunname":"void selectFirstItem()","Funname":"selectFirstItem","Returntype":"void","Args":""},{"Uniquefunname":"void selectLastItem()","Funname":"selectLastItem","Returntype":"void","Args":""},{"Uniquefunname":"void selectNextItem()","Funname":"selectNextItem","Returntype":"void","Args":""},{"Uniquefunname":"void selectNextItemWithOffset(int scrollOffset)","Funname":"selectNextItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void selectPrevItem()","Funname":"selectPrevItem","Returntype":"void","Args":""},{"Uniquefunname":"void selectPrevItemWithOffset(int scrollOffset)","Funname":"selectPrevItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void setClipRadius(int radius)","Funname":"setClipRadius","Returntype":"void","Args":"int radius"},{"Uniquefunname":"void setColumnHideFlags(QList\u003cbool\u003e toggleHideFlags,int alwaysVisibleColumn=-1)","Funname":"setColumnHideFlags","Returntype":"void","Args":"QList\u003cbool\u003e toggleHideFlags,int alwaysVisibleColumn=-1"},{"Uniquefunname":"void setColumnSortingAlgorithms(QList\u003cSortAlgorithm\u003e * algorithms,int sortColumn=-1,bool descendingSort=false)","Funname":"setColumnSortingAlgorithms","Returntype":"void","Args":"QList\u003cSortAlgorithm\u003e * algorithms,int sortColumn=-1,bool descendingSort=false"},{"Uniquefunname":"void setColumnTitleInfo(QList\u003cQString\u003e titles,QList\u003cint\u003e widths,int height)","Funname":"setColumnTitleInfo","Returntype":"void","Args":"QList\u003cQString\u003e titles,QList\u003cint\u003e widths,int height"},{"Uniquefunname":"void setFrame(bool enableFrame,QColor color=QColor (\"\"),double opacity=0.1)","Funname":"setFrame","Returntype":"void","Args":"bool enableFrame,QColor color=QColor (\"\"),double opacity=0.1"},{"Uniquefunname":"void setRowHeight(int height)","Funname":"setRowHeight","Returntype":"void","Args":"int height"},{"Uniquefunname":"void setSearchAlgorithm(SearchAlgorithm algorithm)","Funname":"setSearchAlgorithm","Returntype":"void","Args":"SearchAlgorithm algorithm"},{"Uniquefunname":"void setSingleSelect(bool singleSelect)","Funname":"setSingleSelect","Returntype":"void","Args":"bool singleSelect"},{"Uniquefunname":"void shiftSelectItemsWithBound(int selectionStartIndex,int selectionEndIndex)","Funname":"shiftSelectItemsWithBound","Returntype":"void","Args":"int selectionStartIndex,int selectionEndIndex"},{"Uniquefunname":"void shiftSelectNextItemWithOffset(int scrollOffset)","Funname":"shiftSelectNextItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void shiftSelectPageDown()","Funname":"shiftSelectPageDown","Returntype":"void","Args":""},{"Uniquefunname":"void shiftSelectPageUp()","Funname":"shiftSelectPageUp","Returntype":"void","Args":""},{"Uniquefunname":"void shiftSelectPrevItemWithOffset(int scrollOffset)","Funname":"shiftSelectPrevItemWithOffset","Returntype":"void","Args":"int scrollOffset"},{"Uniquefunname":"void shiftSelectToEnd()","Funname":"shiftSelectToEnd","Returntype":"void","Args":""},{"Uniquefunname":"void shiftSelectToHome()","Funname":"shiftSelectToHome","Returntype":"void","Args":""},{"Uniquefunname":"void shiftSelectToNext()","Funname":"shiftSelectToNext","Returntype":"void","Args":""},{"Uniquefunname":"void shiftSelectToPrev()","Funname":"shiftSelectToPrev","Returntype":"void","Args":""},{"Uniquefunname":"void startScrollbarHideTimer()","Funname":"startScrollbarHideTimer","Returntype":"void","Args":""},{"Uniquefunname":"void wheelEvent(QWheelEvent * event)","Funname":"wheelEvent","Returntype":"void","Args":"QWheelEvent * event"},{"Uniquefunname":" ~DSimpleListView()","Funname":"~DSimpleListView","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DSIMPLELISTVIEW_H"]},{"Name":"class:DSimpleListView","Fields":["QPixmap DSimpleListView::arrowDownDarkHoverImage","QPixmap DSimpleListView::arrowDownDarkNormalImage","QPixmap DSimpleListView::arrowDownDarkPressImage","QPixmap DSimpleListView::arrowDownHoverImage","QPixmap DSimpleListView::arrowDownLightHoverImage","QPixmap DSimpleListView::arrowDownLightNormalImage","QPixmap DSimpleListView::arrowDownLightPressImage","QPixmap DSimpleListView::arrowDownNormalImage","QPixmap DSimpleListView::arrowDownPressImage","QPixmap DSimpleListView::arrowUpDarkHoverImage","QPixmap DSimpleListView::arrowUpDarkNormalImage","QPixmap DSimpleListView::arrowUpDarkPressImage","QPixmap DSimpleListView::arrowUpHoverImage","QPixmap DSimpleListView::arrowUpLightHoverImage","QPixmap DSimpleListView::arrowUpLightNormalImage","QPixmap DSimpleListView::arrowUpLightPressImage","QPixmap DSimpleListView::arrowUpNormalImage","QPixmap DSimpleListView::arrowUpPressImage","QString DSimpleListView::backgroundColor","double DSimpleListView::backgroundOpacity","QList\u003cbool\u003e DSimpleListView::columnVisibles","QColor DSimpleListView::frameColor","double DSimpleListView::frameOpacity","QString DSimpleListView::scrollbarColor","qreal DSimpleListView::scrollbarFrameHoverOpacity","qreal DSimpleListView::scrollbarFrameNormalOpacity","qreal DSimpleListView::scrollbarFramePressOpacity","qreal DSimpleListView::scrollbarHoverOpacity","qreal DSimpleListView::scrollbarNormalOpacity","qreal DSimpleListView::scrollbarPressOpacity","QString DSimpleListView::searchColor","QString DSimpleListView::titleAreaColor","double DSimpleListView::titleAreaOpacity","QString DSimpleListView::titleColor","QString DSimpleListView::titleLineColor","int DSimpleListView::titleSize"]}]}
{"Filepath":"src/widgets/dslider.h","Functions":[{"Uniquefunname":" DSlider(DSliderPrivate \u0026 q,QWidget * parent)","Funname":"DSlider","Returntype":"","Args":"DSliderPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DSlider(Qt::Orientation orientation=Qt::Horizontal,QWidget * parent=nullptr)","Funname":"DSlider","Returntype":"","Args":"Qt::Orientation orientation=Qt::Horizontal,QWidget * parent=nullptr"},{"Uniquefunname":" DSlider::DSlider(DSliderPrivate \u0026 q,QWidget * parent)","Funname":"DSlider::DSlider","Returntype":"","Args":"DSliderPrivate \u0026 q,QWidget * parent"},{"Uniquefunname":" DSlider::DSlider(Qt::Orientation orientation=Qt::Horizontal,QWidget * parent=nullptr)","Funname":"DSlider::DSlider","Returntype":"","Args":"Qt::Orientation orientation=Qt::Horizontal,QWidget * parent=nullptr"},{"Uniquefunname":"void DSlider::actionTriggered(int action)","Funname":"DSlider::actionTriggered","Returntype":"void","Args":"int action"},{"Uniquefunname":"bool DSlider::event(QEvent * event)","Funname":"DSlider::event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool DSlider::eventFilter(QObject * watched,QEvent * event)","Funname":"DSlider::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"bool DSlider::handleVisible() cons)","Funname":"DSlider::handleVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DSlider::iconClicked(SliderIcons icon,bool checked)","Funname":"DSlider::iconClicked","Returntype":"void","Args":"SliderIcons icon,bool checked"},{"Uniquefunname":"int DSlider::maximum() cons)","Funname":"DSlider::maximum","Returntype":"int","Args":") cons"},{"Uniquefunname":"int DSlider::minimum() cons)","Funname":"DSlider::minimum","Returntype":"int","Args":") cons"},{"Uniquefunname":"Qt DSlider::orientation() cons)","Funname":"DSlider::orientation","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"int DSlider::pageStep() cons)","Funname":"DSlider::pageStep","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DSlider::rangeChanged(int min,int max)","Funname":"DSlider::rangeChanged","Returntype":"void","Args":"int min,int max"},{"Uniquefunname":"void DSlider::setAboveTicks(const QStringList \u0026 info)","Funname":"DSlider::setAboveTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void DSlider::setBelowTicks(const QStringList \u0026 info)","Funname":"DSlider::setBelowTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void DSlider::setEnabledAcrossStyle(bool enabled)","Funname":"DSlider::setEnabledAcrossStyle","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void DSlider::setHandleVisible(bool b)","Funname":"DSlider::setHandleVisible","Returntype":"void","Args":"bool b"},{"Uniquefunname":"void DSlider::setIconSize(const QSize \u0026 size)","Funname":"DSlider::setIconSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"void DSlider::setLeftIcon(const QIcon \u0026 left)","Funname":"DSlider::setLeftIcon","Returntype":"void","Args":"const QIcon \u0026 left"},{"Uniquefunname":"void DSlider::setLeftTicks(const QStringList \u0026 info)","Funname":"DSlider::setLeftTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void DSlider::setMarkPositions(QList\u003cint\u003e list)","Funname":"DSlider::setMarkPositions","Returntype":"void","Args":"QList\u003cint\u003e list"},{"Uniquefunname":"void DSlider::setMaximum(int max)","Funname":"DSlider::setMaximum","Returntype":"void","Args":"int max"},{"Uniquefunname":"void DSlider::setMinimum(int min)","Funname":"DSlider::setMinimum","Returntype":"void","Args":"int min"},{"Uniquefunname":"void DSlider::setMouseWheelEnabled(bool enabled)","Funname":"DSlider::setMouseWheelEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void DSlider::setPageStep(int pageStep)","Funname":"DSlider::setPageStep","Returntype":"void","Args":"int pageStep"},{"Uniquefunname":"void DSlider::setRightIcon(const QIcon \u0026 right)","Funname":"DSlider::setRightIcon","Returntype":"void","Args":"const QIcon \u0026 right"},{"Uniquefunname":"void DSlider::setRightTicks(const QStringList \u0026 info)","Funname":"DSlider::setRightTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void DSlider::setTipValue(const QString \u0026 value)","Funname":"DSlider::setTipValue","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"void DSlider::setValue(int value)","Funname":"DSlider::setValue","Returntype":"void","Args":"int value"},{"Uniquefunname":"QSize DSlider::sizeHint() cons)","Funname":"DSlider::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSlider * DSlider::slider()","Funname":"DSlider::slider","Returntype":"QSlider *","Args":""},{"Uniquefunname":"void DSlider::sliderMoved(int position)","Funname":"DSlider::sliderMoved","Returntype":"void","Args":"int position"},{"Uniquefunname":"void DSlider::sliderPressed()","Funname":"DSlider::sliderPressed","Returntype":"void","Args":""},{"Uniquefunname":"void DSlider::sliderReleased()","Funname":"DSlider::sliderReleased","Returntype":"void","Args":""},{"Uniquefunname":"QSlider DSlider::tickPosition() cons)","Funname":"DSlider::tickPosition","Returntype":"QSlider","Args":") cons"},{"Uniquefunname":"int DSlider::value() cons)","Funname":"DSlider::value","Returntype":"int","Args":") cons"},{"Uniquefunname":" SpecialSlider(Qt::Orientation orientation,QWidget * parent=nullptr)","Funname":"SpecialSlider","Returntype":"","Args":"Qt::Orientation orientation,QWidget * parent=nullptr"},{"Uniquefunname":" SpecialSlider::SpecialSlider(Qt::Orientation orientation,QWidget * parent=nullptr)","Funname":"SpecialSlider::SpecialSlider","Returntype":"","Args":"Qt::Orientation orientation,QWidget * parent=nullptr"},{"Uniquefunname":"void SpecialSlider::paintEvent(QPaintEvent * ev)","Funname":"SpecialSlider::paintEvent","Returntype":"void","Args":"QPaintEvent * ev"},{"Uniquefunname":"void actionTriggered(int action)","Funname":"actionTriggered","Returntype":"void","Args":"int action"},{"Uniquefunname":"bool event(QEvent * event)","Funname":"event","Returntype":"bool","Args":"QEvent * event"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"bool handleVisible() cons)","Funname":"handleVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void iconClicked(SliderIcons icon,bool checked)","Funname":"iconClicked","Returntype":"void","Args":"SliderIcons icon,bool checked"},{"Uniquefunname":"int maximum() cons)","Funname":"maximum","Returntype":"int","Args":") cons"},{"Uniquefunname":"int minimum() cons)","Funname":"minimum","Returntype":"int","Args":") cons"},{"Uniquefunname":"Qt orientation() cons)","Funname":"orientation","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"int pageStep() cons)","Funname":"pageStep","Returntype":"int","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * ev)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * ev"},{"Uniquefunname":"void rangeChanged(int min,int max)","Funname":"rangeChanged","Returntype":"void","Args":"int min,int max"},{"Uniquefunname":"void setAboveTicks(const QStringList \u0026 info)","Funname":"setAboveTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void setBelowTicks(const QStringList \u0026 info)","Funname":"setBelowTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void setEnabledAcrossStyle(bool enabled)","Funname":"setEnabledAcrossStyle","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setHandleVisible(bool b)","Funname":"setHandleVisible","Returntype":"void","Args":"bool b"},{"Uniquefunname":"void setIconSize(const QSize \u0026 size)","Funname":"setIconSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"void setLeftIcon(const QIcon \u0026 left)","Funname":"setLeftIcon","Returntype":"void","Args":"const QIcon \u0026 left"},{"Uniquefunname":"void setLeftTicks(const QStringList \u0026 info)","Funname":"setLeftTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void setMarkPositions(QList\u003cint\u003e list)","Funname":"setMarkPositions","Returntype":"void","Args":"QList\u003cint\u003e list"},{"Uniquefunname":"void setMaximum(int max)","Funname":"setMaximum","Returntype":"void","Args":"int max"},{"Uniquefunname":"void setMinimum(int min)","Funname":"setMinimum","Returntype":"void","Args":"int min"},{"Uniquefunname":"void setMouseWheelEnabled(bool enabled)","Funname":"setMouseWheelEnabled","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setPageStep(int pageStep)","Funname":"setPageStep","Returntype":"void","Args":"int pageStep"},{"Uniquefunname":"void setRightIcon(const QIcon \u0026 right)","Funname":"setRightIcon","Returntype":"void","Args":"const QIcon \u0026 right"},{"Uniquefunname":"void setRightTicks(const QStringList \u0026 info)","Funname":"setRightTicks","Returntype":"void","Args":"const QStringList \u0026 info"},{"Uniquefunname":"void setTipValue(const QString \u0026 value)","Funname":"setTipValue","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"void setValue(int value)","Funname":"setValue","Returntype":"void","Args":"int value"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QSlider * slider()","Funname":"slider","Returntype":"QSlider *","Args":""},{"Uniquefunname":"void sliderMoved(int position)","Funname":"sliderMoved","Returntype":"void","Args":"int position"},{"Uniquefunname":"void sliderPressed()","Funname":"sliderPressed","Returntype":"void","Args":""},{"Uniquefunname":"void sliderReleased()","Funname":"sliderReleased","Returntype":"void","Args":""},{"Uniquefunname":"QSlider tickPosition() cons)","Funname":"tickPosition","Returntype":"QSlider","Args":") cons"},{"Uniquefunname":"int value() cons)","Funname":"value","Returntype":"int","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DSLIDER_H"]},{"Name":"enum:DSlider::SliderIcons","Fields":["DSlider::LeftIcon","DSlider::RightIcon","LeftIcon","RightIcon"]}]}
{"Filepath":"src/widgets/dspinbox.h","Functions":[{"Uniquefunname":" DDoubleSpinBox(QWidget * parent=nullptr)","Funname":"DDoubleSpinBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DDoubleSpinBox::DDoubleSpinBox(QWidget * parent=nullptr)","Funname":"DDoubleSpinBox::DDoubleSpinBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"D_DECL_DEPRECATED double DDoubleSpinBox::defaultValue() cons)","Funname":"DDoubleSpinBox::defaultValue","Returntype":"D_DECL_DEPRECATED double","Args":") cons"},{"Uniquefunname":"D_DECL_DEPRECATED void DDoubleSpinBox::defaultValueChanged(double defaultValue)","Funname":"DDoubleSpinBox::defaultValueChanged","Returntype":"D_DECL_DEPRECATED void","Args":"double defaultValue"},{"Uniquefunname":"bool DDoubleSpinBox::isAlert() cons)","Funname":"DDoubleSpinBox::isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QLineEdit * DDoubleSpinBox::lineEdit() cons)","Funname":"DDoubleSpinBox::lineEdit","Returntype":"QLineEdit *","Args":") cons"},{"Uniquefunname":"void DDoubleSpinBox::setAlert(bool alert)","Funname":"DDoubleSpinBox::setAlert","Returntype":"void","Args":"bool alert"},{"Uniquefunname":"D_DECL_DEPRECATED void DDoubleSpinBox::setDefaultValue(double defaultValue)","Funname":"DDoubleSpinBox::setDefaultValue","Returntype":"D_DECL_DEPRECATED void","Args":"double defaultValue"},{"Uniquefunname":"void DDoubleSpinBox::setEnabledEmbedStyle(bool enabled)","Funname":"DDoubleSpinBox::setEnabledEmbedStyle","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":" DSpinBox(QWidget * parent=nullptr)","Funname":"DSpinBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSpinBox::DSpinBox(QWidget * parent=nullptr)","Funname":"DSpinBox::DSpinBox","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"D_DECL_DEPRECATED int DSpinBox::defaultValue() cons)","Funname":"DSpinBox::defaultValue","Returntype":"D_DECL_DEPRECATED int","Args":") cons"},{"Uniquefunname":"D_DECL_DEPRECATED void DSpinBox::defaultValueChanged(int defaultValue)","Funname":"DSpinBox::defaultValueChanged","Returntype":"D_DECL_DEPRECATED void","Args":"int defaultValue"},{"Uniquefunname":"bool DSpinBox::isAlert() cons)","Funname":"DSpinBox::isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QLineEdit * DSpinBox::lineEdit() cons)","Funname":"DSpinBox::lineEdit","Returntype":"QLineEdit *","Args":") cons"},{"Uniquefunname":"void DSpinBox::setAlert(bool alert)","Funname":"DSpinBox::setAlert","Returntype":"void","Args":"bool alert"},{"Uniquefunname":"D_DECL_DEPRECATED void DSpinBox::setDefaultValue(int defaultValue)","Funname":"DSpinBox::setDefaultValue","Returntype":"D_DECL_DEPRECATED void","Args":"int defaultValue"},{"Uniquefunname":"void DSpinBox::setEnabledEmbedStyle(bool enabled)","Funname":"DSpinBox::setEnabledEmbedStyle","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"D_DECL_DEPRECATED double defaultValue() cons)","Funname":"defaultValue","Returntype":"D_DECL_DEPRECATED double","Args":") cons"},{"Uniquefunname":"D_DECL_DEPRECATED int defaultValue() cons)","Funname":"defaultValue","Returntype":"D_DECL_DEPRECATED int","Args":") cons"},{"Uniquefunname":"D_DECL_DEPRECATED void defaultValueChanged(double defaultValue)","Funname":"defaultValueChanged","Returntype":"D_DECL_DEPRECATED void","Args":"double defaultValue"},{"Uniquefunname":"D_DECL_DEPRECATED void defaultValueChanged(int defaultValue)","Funname":"defaultValueChanged","Returntype":"D_DECL_DEPRECATED void","Args":"int defaultValue"},{"Uniquefunname":"bool isAlert() cons)","Funname":"isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isAlert() cons)","Funname":"isAlert","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QLineEdit * lineEdit() cons)","Funname":"lineEdit","Returntype":"QLineEdit *","Args":") cons"},{"Uniquefunname":"QLineEdit * lineEdit() cons)","Funname":"lineEdit","Returntype":"QLineEdit *","Args":") cons"},{"Uniquefunname":"void setAlert(bool alert)","Funname":"setAlert","Returntype":"void","Args":"bool alert"},{"Uniquefunname":"void setAlert(bool alert)","Funname":"setAlert","Returntype":"void","Args":"bool alert"},{"Uniquefunname":"D_DECL_DEPRECATED void setDefaultValue(double defaultValue)","Funname":"setDefaultValue","Returntype":"D_DECL_DEPRECATED void","Args":"double defaultValue"},{"Uniquefunname":"D_DECL_DEPRECATED void setDefaultValue(int defaultValue)","Funname":"setDefaultValue","Returntype":"D_DECL_DEPRECATED void","Args":"int defaultValue"},{"Uniquefunname":"void setEnabledEmbedStyle(bool enabled)","Funname":"setEnabledEmbedStyle","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setEnabledEmbedStyle(bool enabled)","Funname":"setEnabledEmbedStyle","Returntype":"void","Args":"bool enabled"}],"Records":[{"Name":"macro","Fields":["DSPINBOX_H"]}]}
{"Filepath":"src/widgets/dspinner.h","Functions":[{"Uniquefunname":" DSpinner(QWidget * parent=0)","Funname":"DSpinner","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DSpinner::DSpinner(QWidget * parent=0)","Funname":"DSpinner::DSpinner","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DSpinner::changeEvent(QEvent * e)","Funname":"DSpinner::changeEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"bool DSpinner::isPlaying() cons)","Funname":"DSpinner::isPlaying","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DSpinner::paintEvent(QPaintEvent *)","Funname":"DSpinner::paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void DSpinner::setBackgroundColor(QColor color)","Funname":"DSpinner::setBackgroundColor","Returntype":"void","Args":"QColor color"},{"Uniquefunname":"void DSpinner::start()","Funname":"DSpinner::start","Returntype":"void","Args":""},{"Uniquefunname":"void DSpinner::stop()","Funname":"DSpinner::stop","Returntype":"void","Args":""},{"Uniquefunname":" DSpinner::~DSpinner()","Funname":"DSpinner::~DSpinner","Returntype":"","Args":""},{"Uniquefunname":"void changeEvent(QEvent * e)","Funname":"changeEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"bool isPlaying() cons)","Funname":"isPlaying","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void paintEvent(QPaintEvent *)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void setBackgroundColor(QColor color)","Funname":"setBackgroundColor","Returntype":"void","Args":"QColor color"},{"Uniquefunname":"void start()","Funname":"start","Returntype":"void","Args":""},{"Uniquefunname":"void stop()","Funname":"stop","Returntype":"void","Args":""},{"Uniquefunname":" ~DSpinner()","Funname":"~DSpinner","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DSPINNER_H"]}]}
{"Filepath":"src/widgets/dstackwidget.h","Functions":[{"Uniquefunname":" DAbstractStackWidgetTransition(DAbstractStackWidgetTransitionPrivate \u0026 dd,QObject * parent=0)","Funname":"DAbstractStackWidgetTransition","Returntype":"","Args":"DAbstractStackWidgetTransitionPrivate \u0026 dd,QObject * parent=0"},{"Uniquefunname":" DAbstractStackWidgetTransition(QObject * parent=0)","Funname":"DAbstractStackWidgetTransition","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DAbstractStackWidgetTransition::DAbstractStackWidgetTransition(DAbstractStackWidgetTransitionPrivate \u0026 dd,QObject * parent=0)","Funname":"DAbstractStackWidgetTransition::DAbstractStackWidgetTransition","Returntype":"","Args":"DAbstractStackWidgetTransitionPrivate \u0026 dd,QObject * parent=0"},{"Uniquefunname":" DAbstractStackWidgetTransition::DAbstractStackWidgetTransition(QObject * parent=0)","Funname":"DAbstractStackWidgetTransition::DAbstractStackWidgetTransition","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"QVariantAnimation * DAbstractStackWidgetTransition::animation() cons)","Funname":"DAbstractStackWidgetTransition::animation","Returntype":"QVariantAnimation *","Args":") cons"},{"Uniquefunname":"void DAbstractStackWidgetTransition::beginTransition(const TransitionInfo \u0026 info)","Funname":"DAbstractStackWidgetTransition::beginTransition","Returntype":"void","Args":"const TransitionInfo \u0026 info"},{"Uniquefunname":"const TransitionInfo \u0026 DAbstractStackWidgetTransition::info() cons)","Funname":"DAbstractStackWidgetTransition::info","Returntype":"const TransitionInfo \u0026","Args":") cons"},{"Uniquefunname":"void DAbstractStackWidgetTransition::updateVariant(const QVariant \u0026 variant)","Funname":"DAbstractStackWidgetTransition::updateVariant","Returntype":"void","Args":"const QVariant \u0026 variant"},{"Uniquefunname":" DSlideStackWidgetTransition(QObject * parent=0)","Funname":"DSlideStackWidgetTransition","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DSlideStackWidgetTransition::DSlideStackWidgetTransition(QObject * parent=0)","Funname":"DSlideStackWidgetTransition::DSlideStackWidgetTransition","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"void DSlideStackWidgetTransition::beginTransition(const TransitionInfo \u0026 info)","Funname":"DSlideStackWidgetTransition::beginTransition","Returntype":"void","Args":"const TransitionInfo \u0026 info"},{"Uniquefunname":"void DSlideStackWidgetTransition::updateVariant(const QVariant \u0026 variant)","Funname":"DSlideStackWidgetTransition::updateVariant","Returntype":"void","Args":"const QVariant \u0026 variant"},{"Uniquefunname":" DStackWidget(DStackWidgetPrivate \u0026 dd,QWidget * parent=0)","Funname":"DStackWidget","Returntype":"","Args":"DStackWidgetPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":" DStackWidget(QWidget * parent=0)","Funname":"DStackWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DStackWidget::DStackWidget(DStackWidgetPrivate \u0026 dd,QWidget * parent=0)","Funname":"DStackWidget::DStackWidget","Returntype":"","Args":"DStackWidgetPrivate \u0026 dd,QWidget * parent=0"},{"Uniquefunname":" DStackWidget::DStackWidget(QWidget * parent=0)","Funname":"DStackWidget::DStackWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DStackWidget::animationDuration() cons)","Funname":"DStackWidget::animationDuration","Returntype":"int","Args":") cons"},{"Uniquefunname":"QEasingCurve DStackWidget::animationType() cons)","Funname":"DStackWidget::animationType","Returntype":"QEasingCurve","Args":") cons"},{"Uniquefunname":"bool DStackWidget::busy() cons)","Funname":"DStackWidget::busy","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DStackWidget::clear()","Funname":"DStackWidget::clear","Returntype":"void","Args":""},{"Uniquefunname":"int DStackWidget::currentIndex() cons)","Funname":"DStackWidget::currentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DStackWidget::currentIndexChanged(int currentIndex)","Funname":"DStackWidget::currentIndexChanged","Returntype":"void","Args":"int currentIndex"},{"Uniquefunname":"QWidget * DStackWidget::currentWidget() cons)","Funname":"DStackWidget::currentWidget","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void DStackWidget::currentWidgetChanged(QWidget * currentWidget)","Funname":"DStackWidget::currentWidgetChanged","Returntype":"void","Args":"QWidget * currentWidget"},{"Uniquefunname":"int DStackWidget::depth() cons)","Funname":"DStackWidget::depth","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DStackWidget::depthChanged(int depth)","Funname":"DStackWidget::depthChanged","Returntype":"void","Args":"int depth"},{"Uniquefunname":"QWidget * DStackWidget::getWidgetByIndex(int index) cons)","Funname":"DStackWidget::getWidgetByIndex","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"int DStackWidget::indexOf(QWidget * widget) cons)","Funname":"DStackWidget::indexOf","Returntype":"int","Args":"QWidget * widget) cons"},{"Uniquefunname":"void DStackWidget::insertWidget(int index,QWidget * widget,bool enableTransition=true)","Funname":"DStackWidget::insertWidget","Returntype":"void","Args":"int index,QWidget * widget,bool enableTransition=true"},{"Uniquefunname":"void DStackWidget::popWidget(QWidget * widget=nullptr,bool isDelete=true,int count=1,bool enableTransition=true)","Funname":"DStackWidget::popWidget","Returntype":"void","Args":"QWidget * widget=nullptr,bool isDelete=true,int count=1,bool enableTransition=true"},{"Uniquefunname":"int DStackWidget::pushWidget(QWidget * widget,bool enableTransition=true)","Funname":"DStackWidget::pushWidget","Returntype":"int","Args":"QWidget * widget,bool enableTransition=true"},{"Uniquefunname":"void DStackWidget::setAnimationDuration(int animationDuration)","Funname":"DStackWidget::setAnimationDuration","Returntype":"void","Args":"int animationDuration"},{"Uniquefunname":"void DStackWidget::setAnimationType(QEasingCurve::Type animationType)","Funname":"DStackWidget::setAnimationType","Returntype":"void","Args":"QEasingCurve::Type animationType"},{"Uniquefunname":"void DStackWidget::setCurrentIndex(int currentIndex,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true)","Funname":"DStackWidget::setCurrentIndex","Returntype":"void","Args":"int currentIndex,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true"},{"Uniquefunname":"void DStackWidget::setCurrentWidget(QWidget * currentWidget,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true)","Funname":"DStackWidget::setCurrentWidget","Returntype":"void","Args":"QWidget * currentWidget,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true"},{"Uniquefunname":"void DStackWidget::setTransition(DAbstractStackWidgetTransition * transition)","Funname":"DStackWidget::setTransition","Returntype":"void","Args":"DAbstractStackWidgetTransition * transition"},{"Uniquefunname":"void DStackWidget::switchWidgetFinished()","Funname":"DStackWidget::switchWidgetFinished","Returntype":"void","Args":""},{"Uniquefunname":"DAbstractStackWidgetTransition * DStackWidget::transition() cons)","Funname":"DStackWidget::transition","Returntype":"DAbstractStackWidgetTransition *","Args":") cons"},{"Uniquefunname":"void DStackWidget::widgetDepthChanged(QWidget * widget,int depth)","Funname":"DStackWidget::widgetDepthChanged","Returntype":"void","Args":"QWidget * widget,int depth"},{"Uniquefunname":"QVariantAnimation * animation() cons)","Funname":"animation","Returntype":"QVariantAnimation *","Args":") cons"},{"Uniquefunname":"int animationDuration() cons)","Funname":"animationDuration","Returntype":"int","Args":") cons"},{"Uniquefunname":"QEasingCurve animationType() cons)","Funname":"animationType","Returntype":"QEasingCurve","Args":") cons"},{"Uniquefunname":"void beginTransition(const TransitionInfo \u0026 info)","Funname":"beginTransition","Returntype":"void","Args":"const TransitionInfo \u0026 info"},{"Uniquefunname":"void beginTransition(const TransitionInfo \u0026 info)","Funname":"beginTransition","Returntype":"void","Args":"const TransitionInfo \u0026 info"},{"Uniquefunname":"bool busy() cons)","Funname":"busy","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void clear()","Funname":"clear","Returntype":"void","Args":""},{"Uniquefunname":"int currentIndex() cons)","Funname":"currentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"void currentIndexChanged(int currentIndex)","Funname":"currentIndexChanged","Returntype":"void","Args":"int currentIndex"},{"Uniquefunname":"QWidget * currentWidget() cons)","Funname":"currentWidget","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"void currentWidgetChanged(QWidget * currentWidget)","Funname":"currentWidgetChanged","Returntype":"void","Args":"QWidget * currentWidget"},{"Uniquefunname":"int depth() cons)","Funname":"depth","Returntype":"int","Args":") cons"},{"Uniquefunname":"void depthChanged(int depth)","Funname":"depthChanged","Returntype":"void","Args":"int depth"},{"Uniquefunname":"QWidget * getWidgetByIndex(int index) cons)","Funname":"getWidgetByIndex","Returntype":"QWidget *","Args":"int index) cons"},{"Uniquefunname":"int indexOf(QWidget * widget) cons)","Funname":"indexOf","Returntype":"int","Args":"QWidget * widget) cons"},{"Uniquefunname":"const TransitionInfo \u0026 info() cons)","Funname":"info","Returntype":"const TransitionInfo \u0026","Args":") cons"},{"Uniquefunname":"void insertWidget(int index,QWidget * widget,bool enableTransition=true)","Funname":"insertWidget","Returntype":"void","Args":"int index,QWidget * widget,bool enableTransition=true"},{"Uniquefunname":"void popWidget(QWidget * widget=nullptr,bool isDelete=true,int count=1,bool enableTransition=true)","Funname":"popWidget","Returntype":"void","Args":"QWidget * widget=nullptr,bool isDelete=true,int count=1,bool enableTransition=true"},{"Uniquefunname":"int pushWidget(QWidget * widget,bool enableTransition=true)","Funname":"pushWidget","Returntype":"int","Args":"QWidget * widget,bool enableTransition=true"},{"Uniquefunname":"void setAnimationDuration(int animationDuration)","Funname":"setAnimationDuration","Returntype":"void","Args":"int animationDuration"},{"Uniquefunname":"void setAnimationType(QEasingCurve::Type animationType)","Funname":"setAnimationType","Returntype":"void","Args":"QEasingCurve::Type animationType"},{"Uniquefunname":"void setCurrentIndex(int currentIndex,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true)","Funname":"setCurrentIndex","Returntype":"void","Args":"int currentIndex,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true"},{"Uniquefunname":"void setCurrentWidget(QWidget * currentWidget,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true)","Funname":"setCurrentWidget","Returntype":"void","Args":"QWidget * currentWidget,DAbstractStackWidgetTransition::TransitionType type=DAbstractStackWidgetTransition::Push,bool enableTransition=true"},{"Uniquefunname":"void setTransition(DAbstractStackWidgetTransition * transition)","Funname":"setTransition","Returntype":"void","Args":"DAbstractStackWidgetTransition * transition"},{"Uniquefunname":"void switchWidgetFinished()","Funname":"switchWidgetFinished","Returntype":"void","Args":""},{"Uniquefunname":"DAbstractStackWidgetTransition * transition() cons)","Funname":"transition","Returntype":"DAbstractStackWidgetTransition *","Args":") cons"},{"Uniquefunname":"void updateVariant(const QVariant \u0026 variant)","Funname":"updateVariant","Returntype":"void","Args":"const QVariant \u0026 variant"},{"Uniquefunname":"void updateVariant(const QVariant \u0026 variant)","Funname":"updateVariant","Returntype":"void","Args":"const QVariant \u0026 variant"},{"Uniquefunname":"void widgetDepthChanged(QWidget * widget,int depth)","Funname":"widgetDepthChanged","Returntype":"void","Args":"QWidget * widget,int depth"}],"Records":[{"Name":"enum:DAbstractStackWidgetTransition::TransitionType","Fields":["DAbstractStackWidgetTransition::Pop","DAbstractStackWidgetTransition::Push","Pop","Push"]},{"Name":"struct:DAbstractStackWidgetTransition::TransitionInfo","Fields":["QWidget * DAbstractStackWidgetTransition::TransitionInfo::newWidget","QWidget * DAbstractStackWidgetTransition::TransitionInfo::oldWidget","DStackWidget * DAbstractStackWidgetTransition::TransitionInfo::stackWidget","TransitionType DAbstractStackWidgetTransition::TransitionInfo::type"]},{"Name":"macro","Fields":["DSTACKWIDGET_H"]}]}
{"Filepath":"src/widgets/dstyle.h","Functions":[{"Uniquefunname":"Q_DECLARE_FLAGS(Corners, Corner)","Funname":"DDrawUtils::Q_DECLARE_FLAGS","Returntype":"","Args":"Corners,Corner"},{"Uniquefunname":"void DDrawUtils::drawAddButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawAddButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrow(QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,Qt::ArrowType arrow,int width=2)","Funname":"DDrawUtils::drawArrow","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,Qt::ArrowType arrow,int width=2"},{"Uniquefunname":"void DDrawUtils::drawArrowBack(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowBack","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowDown(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowDown","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowElement(Qt::ArrowType arrow,QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowElement","Returntype":"void","Args":"Qt::ArrowType arrow,QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowEnter(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowEnter","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowForward(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowForward","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowLeave(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowLeave","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowLeft(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowLeft","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowNext(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowNext","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowPrev(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowPrev","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowRight(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowRight","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawArrowUp(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawArrowUp","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawBorder(QPainter * pa,const QRectF \u0026 rect,const QBrush \u0026 brush,int borderWidth,int radius)","Funname":"DDrawUtils::drawBorder","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QBrush \u0026 brush,int borderWidth,int radius"},{"Uniquefunname":"void DDrawUtils::drawCloseButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawCloseButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawDecreaseElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawDecreaseElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawDeleteButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawDeleteButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawEditElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawEditElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawExpandElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawExpandElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawFork(QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,int width=2)","Funname":"DDrawUtils::drawFork","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,int width=2"},{"Uniquefunname":"void DDrawUtils::drawForkElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawForkElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawHidePassword(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawHidePassword","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawIncreaseElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawIncreaseElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawIndicatorChecked(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawIndicatorChecked","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawIndicatorMajuscule(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawIndicatorMajuscule","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawIndicatorUnchecked(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawIndicatorUnchecked","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawLineEditClearButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawLineEditClearButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawLockElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawLockElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawMark(QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 boxInside,const QColor \u0026 boxOutside,const int penWidth,const int outLineLeng=2)","Funname":"DDrawUtils::drawMark","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 boxInside,const QColor \u0026 boxOutside,const int penWidth,const int outLineLeng=2"},{"Uniquefunname":"void DDrawUtils::drawMarkElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawMarkElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawMediaVolumeElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawMediaVolumeElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawMediaVolumeFullElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawMediaVolumeFullElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawMediaVolumeLeftElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawMediaVolumeLeftElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawMediaVolumeMutedElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawMediaVolumeMutedElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawMediaVolumeRightElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawMediaVolumeRightElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawPlus(QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width)","Funname":"DDrawUtils::drawPlus","Returntype":"void","Args":"QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width"},{"Uniquefunname":"void DDrawUtils::drawReduceElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawReduceElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawRoundedRect(QPainter * pa,const QRect \u0026 rect,qreal xRadius,qreal yRadius,Corners corners,Qt::SizeMode mode=Qt::AbsoluteSize)","Funname":"DDrawUtils::drawRoundedRect","Returntype":"void","Args":"QPainter * pa,const QRect \u0026 rect,qreal xRadius,qreal yRadius,Corners corners,Qt::SizeMode mode=Qt::AbsoluteSize"},{"Uniquefunname":"void DDrawUtils::drawSelectElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawSelectElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawShadow(QPainter * pa,const QRect \u0026 rect,const QPainterPath \u0026 path,const QColor \u0026 sc,int radius,const QPoint \u0026 offset)","Funname":"DDrawUtils::drawShadow","Returntype":"void","Args":"QPainter * pa,const QRect \u0026 rect,const QPainterPath \u0026 path,const QColor \u0026 sc,int radius,const QPoint \u0026 offset"},{"Uniquefunname":"void DDrawUtils::drawShowPassword(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawShowPassword","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawSubtract(QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width)","Funname":"DDrawUtils::drawSubtract","Returntype":"void","Args":"QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width"},{"Uniquefunname":"void DDrawUtils::drawTitleBarCloseButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawTitleBarCloseButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawTitleBarMaxButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawTitleBarMaxButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawTitleBarMenuButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawTitleBarMenuButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawTitleBarMinButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawTitleBarMinButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawTitleBarNormalButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawTitleBarNormalButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawTitleQuitFullButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawTitleQuitFullButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DDrawUtils::drawUnlockElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"DDrawUtils::drawUnlockElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":" DStyle()","Funname":"DStyle","Returntype":"","Args":""},{"Uniquefunname":" DStyle::DStyle()","Funname":"DStyle::DStyle","Returntype":"","Args":""},{"Uniquefunname":"QColor DStyle::adjustColor(const QColor \u0026 base,qint8 hueFloat=0,qint8 saturationFloat=0,qint8 lightnessFloat=0,qint8 redFloat=0,qint8 greenFloat=0,qint8 blueFloat=0,qint8 alphaFloat=0)","Funname":"DStyle::adjustColor","Returntype":"QColor","Args":"const QColor \u0026 base,qint8 hueFloat=0,qint8 saturationFloat=0,qint8 lightnessFloat=0,qint8 redFloat=0,qint8 greenFloat=0,qint8 blueFloat=0,qint8 alphaFloat=0"},{"Uniquefunname":"QColor DStyle::blendColor(const QColor \u0026 substrate,const QColor \u0026 superstratum)","Funname":"DStyle::blendColor","Returntype":"QColor","Args":"const QColor \u0026 substrate,const QColor \u0026 superstratum"},{"Uniquefunname":"void DStyle::drawControl(DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"DStyle::drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void DStyle::drawControl(const QStyle * style,DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr)","Funname":"DStyle::drawControl","Returntype":"void","Args":"const QStyle * style,DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr"},{"Uniquefunname":"void DStyle::drawControl(QStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"DStyle::drawControl","Returntype":"void","Args":"QStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void DStyle::drawPrimitive(DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"DStyle::drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void DStyle::drawPrimitive(const QStyle * style,DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr)","Funname":"DStyle::drawPrimitive","Returntype":"void","Args":"const QStyle * style,DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr"},{"Uniquefunname":"void DStyle::drawPrimitive(QStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"DStyle::drawPrimitive","Returntype":"void","Args":"QStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"QBrush DStyle::generatedBrush(StyleState state,const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons)","Funname":"DStyle::generatedBrush","Returntype":"QBrush","Args":"StyleState state,const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons"},{"Uniquefunname":"QBrush DStyle::generatedBrush(StyleState state,const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons)","Funname":"DStyle::generatedBrush","Returntype":"QBrush","Args":"StyleState state,const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons"},{"Uniquefunname":"QBrush DStyle::generatedBrush(const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons)","Funname":"DStyle::generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons"},{"Uniquefunname":"QBrush DStyle::generatedBrush(const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons)","Funname":"DStyle::generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons"},{"Uniquefunname":"QBrush DStyle::generatedBrush(StateFlags flags,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground,const QStyleOption * option=nullptr) cons)","Funname":"DStyle::generatedBrush","Returntype":"QBrush","Args":"StateFlags flags,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground,const QStyleOption * option=nullptr) cons"},{"Uniquefunname":"QBrush DStyle::generatedBrush(StateFlags flags,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole,const QStyleOption * option=nullptr) cons)","Funname":"DStyle::generatedBrush","Returntype":"QBrush","Args":"StateFlags flags,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole,const QStyleOption * option=nullptr) cons"},{"Uniquefunname":"QPixmap DStyle::generatedIconPixmap(QIcon::Mode iconMode,const QPixmap \u0026 pixmap,const QStyleOption * opt) cons)","Funname":"DStyle::generatedIconPixmap","Returntype":"QPixmap","Args":"QIcon::Mode iconMode,const QPixmap \u0026 pixmap,const QStyleOption * opt) cons"},{"Uniquefunname":"DStyle DStyle::getState(const QStyleOption * option)","Funname":"DStyle::getState","Returntype":"DStyle","Args":"const QStyleOption * option"},{"Uniquefunname":"int DStyle::pixelMetric(DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"DStyle::pixelMetric","Returntype":"int","Args":"DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"int DStyle::pixelMetric(QStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"DStyle::pixelMetric","Returntype":"int","Args":"QStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"int DStyle::pixelMetric(const QStyle * style,DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr)","Funname":"DStyle::pixelMetric","Returntype":"int","Args":"const QStyle * style,DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr"},{"Uniquefunname":"void DStyle::setFocusRectVisible(QWidget * widget,bool visible)","Funname":"DStyle::setFocusRectVisible","Returntype":"void","Args":"QWidget * widget,bool visible"},{"Uniquefunname":"void DStyle::setFrameRadius(QWidget * widget,int radius)","Funname":"DStyle::setFrameRadius","Returntype":"void","Args":"QWidget * widget,int radius"},{"Uniquefunname":"void DStyle::setTooltipTextFormat(Qt::TextFormat format)","Funname":"DStyle::setTooltipTextFormat","Returntype":"void","Args":"Qt::TextFormat format"},{"Uniquefunname":"QSize DStyle::sizeFromContents(QStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons)","Funname":"DStyle::sizeFromContents","Returntype":"QSize","Args":"QStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QSize DStyle::sizeFromContents(DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons)","Funname":"DStyle::sizeFromContents","Returntype":"QSize","Args":"DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QSize DStyle::sizeFromContents(const QStyle * style,DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr)","Funname":"DStyle::sizeFromContents","Returntype":"QSize","Args":"const QStyle * style,DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr"},{"Uniquefunname":"QIcon DStyle::standardIcon(QStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"DStyle::standardIcon","Returntype":"QIcon","Args":"QStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QIcon DStyle::standardIcon(DStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"DStyle::standardIcon","Returntype":"QIcon","Args":"DStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QIcon DStyle::standardIcon(const QStyle * style,StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=0)","Funname":"DStyle::standardIcon","Returntype":"QIcon","Args":"const QStyle * style,StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=0"},{"Uniquefunname":"QPalette DStyle::standardPalette() cons)","Funname":"DStyle::standardPalette","Returntype":"QPalette","Args":") cons"},{"Uniquefunname":"int DStyle::styleHint(StyleHint sh,const QStyleOption * opt,const QWidget * w,QStyleHintReturn * shret) cons)","Funname":"DStyle::styleHint","Returntype":"int","Args":"StyleHint sh,const QStyleOption * opt,const QWidget * w,QStyleHintReturn * shret) cons"},{"Uniquefunname":"QRect DStyle::subElementRect(QStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"DStyle::subElementRect","Returntype":"QRect","Args":"QStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QRect DStyle::subElementRect(DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"DStyle::subElementRect","Returntype":"QRect","Args":"DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QRect DStyle::subElementRect(const QStyle * style,DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr)","Funname":"DStyle::subElementRect","Returntype":"QRect","Args":"const QStyle * style,DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr"},{"Uniquefunname":"QPair\u003cQIcon DStyle::toIconModeState(const QStyleOption * option)","Funname":"DStyle::toIconModeState","Returntype":"QPair\u003cQIcon","Args":"const QStyleOption * option"},{"Uniquefunname":"Qt DStyle::tooltipTextFormat()","Funname":"DStyle::tooltipTextFormat","Returntype":"Qt","Args":""},{"Uniquefunname":"QRect DStyle::viewItemDrawText(const QStyle * style,QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect)","Funname":"DStyle::viewItemDrawText","Returntype":"QRect","Args":"const QStyle * style,QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect"},{"Uniquefunname":"QRect DStyle::viewItemDrawText(QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect) cons)","Funname":"DStyle::viewItemDrawText","Returntype":"QRect","Args":"QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect) cons"},{"Uniquefunname":"void DStyle::viewItemLayout(const QStyle * style,const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint)","Funname":"DStyle::viewItemLayout","Returntype":"void","Args":"const QStyle * style,const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint"},{"Uniquefunname":"void DStyle::viewItemLayout(const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint) cons)","Funname":"DStyle::viewItemLayout","Returntype":"void","Args":"const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint) cons"},{"Uniquefunname":"QSize DStyle::viewItemSize(const QStyle * style,const QStyleOptionViewItem * option,int role)","Funname":"DStyle::viewItemSize","Returntype":"QSize","Args":"const QStyle * style,const QStyleOptionViewItem * option,int role"},{"Uniquefunname":"QSizeF DStyle::viewItemTextLayout(QTextLayout \u0026 textLayout,int lineWidth)","Funname":"DStyle::viewItemTextLayout","Returntype":"QSizeF","Args":"QTextLayout \u0026 textLayout,int lineWidth"},{"Uniquefunname":" DStyleHelper(const QStyle * style=nullptr)","Funname":"DStyleHelper","Returntype":"","Args":"const QStyle * style=nullptr"},{"Uniquefunname":" DStyleHelper::DStyleHelper(const QStyle * style=nullptr)","Funname":"DStyleHelper::DStyleHelper","Returntype":"","Args":"const QStyle * style=nullptr"},{"Uniquefunname":"void DStyleHelper::drawControl(DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"DStyleHelper::drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void DStyleHelper::drawPrimitive(DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"DStyleHelper::drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"const DStyle * DStyleHelper::dstyle() cons)","Funname":"DStyleHelper::dstyle","Returntype":"const DStyle *","Args":") cons"},{"Uniquefunname":"QBrush DStyleHelper::generatedBrush(const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,DPalette::ColorType type=DPalette::NoType) cons)","Funname":"DStyleHelper::generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,DPalette::ColorType type=DPalette::NoType) cons"},{"Uniquefunname":"QBrush DStyleHelper::generatedBrush(const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons)","Funname":"DStyleHelper::generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons"},{"Uniquefunname":"QColor DStyleHelper::getColor(const QStyleOption * option,QPalette::ColorRole role) cons)","Funname":"DStyleHelper::getColor","Returntype":"QColor","Args":"const QStyleOption * option,QPalette::ColorRole role) cons"},{"Uniquefunname":"QColor DStyleHelper::getColor(const QStyleOption * option,const DPalette \u0026 palette,DPalette::ColorType type) cons)","Funname":"DStyleHelper::getColor","Returntype":"QColor","Args":"const QStyleOption * option,const DPalette \u0026 palette,DPalette::ColorType type) cons"},{"Uniquefunname":"QColor DStyleHelper::getColor(const T * option,DPalette::ColorType type) cons)","Funname":"DStyleHelper::getColor","Returntype":"QColor","Args":"const T * option,DPalette::ColorType type) cons"},{"Uniquefunname":"int DStyleHelper::pixelMetric(DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"DStyleHelper::pixelMetric","Returntype":"int","Args":"DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"void DStyleHelper::setStyle(const QStyle * style)","Funname":"DStyleHelper::setStyle","Returntype":"void","Args":"const QStyle * style"},{"Uniquefunname":"QSize DStyleHelper::sizeFromContents(DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons)","Funname":"DStyleHelper::sizeFromContents","Returntype":"QSize","Args":"DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QIcon DStyleHelper::standardIcon(DStyle::StandardPixmap standardIcon,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"DStyleHelper::standardIcon","Returntype":"QIcon","Args":"DStyle::StandardPixmap standardIcon,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"const QStyle * DStyleHelper::style() cons)","Funname":"DStyleHelper::style","Returntype":"const QStyle *","Args":") cons"},{"Uniquefunname":"QRect DStyleHelper::subElementRect(DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"DStyleHelper::subElementRect","Returntype":"QRect","Args":"DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":" DStylePainter()","Funname":"DStylePainter","Returntype":"","Args":""},{"Uniquefunname":" DStylePainter(QPaintDevice * pd,QWidget * w)","Funname":"DStylePainter","Returntype":"","Args":"QPaintDevice * pd,QWidget * w"},{"Uniquefunname":" DStylePainter(QWidget * w)","Funname":"DStylePainter","Returntype":"","Args":"QWidget * w"},{"Uniquefunname":" DStylePainter::DStylePainter()","Funname":"DStylePainter::DStylePainter","Returntype":"","Args":""},{"Uniquefunname":" DStylePainter::DStylePainter(QPaintDevice * pd,QWidget * w)","Funname":"DStylePainter::DStylePainter","Returntype":"","Args":"QPaintDevice * pd,QWidget * w"},{"Uniquefunname":" DStylePainter::DStylePainter(QWidget * w)","Funname":"DStylePainter::DStylePainter","Returntype":"","Args":"QWidget * w"},{"Uniquefunname":"bool DStylePainter::begin(QPaintDevice * pd,QWidget * w)","Funname":"DStylePainter::begin","Returntype":"bool","Args":"QPaintDevice * pd,QWidget * w"},{"Uniquefunname":"bool DStylePainter::begin(QWidget * w)","Funname":"DStylePainter::begin","Returntype":"bool","Args":"QWidget * w"},{"Uniquefunname":"void DStylePainter::drawComplexControl(QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt)","Funname":"DStylePainter::drawComplexControl","Returntype":"void","Args":"QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawComplexControl(QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt)","Funname":"DStylePainter::drawComplexControl","Returntype":"void","Args":"QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawControl(DStyle::ControlElement ce,const QStyleOption \u0026 opt)","Funname":"DStylePainter::drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawControl(QStyle::ControlElement ce,const QStyleOption \u0026 opt)","Funname":"DStylePainter::drawControl","Returntype":"void","Args":"QStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawControl(DStyle::ControlElement ce, const QStyleOption \u0026opt)","Funname":"DStylePainter::drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawControl(QStyle::ControlElement ce, const QStyleOption \u0026opt)","Funname":"DStylePainter::drawControl","Returntype":"void","Args":"QStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawItemPixmap(const QRect \u0026 r,int flags,const QPixmap \u0026 pixmap)","Funname":"DStylePainter::drawItemPixmap","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPixmap \u0026 pixmap"},{"Uniquefunname":"void DStylePainter::drawItemPixmap(const QRect \u0026r, int flags, const QPixmap \u0026pixmap)","Funname":"DStylePainter::drawItemPixmap","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPixmap \u0026 pixmap"},{"Uniquefunname":"void DStylePainter::drawItemText(const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole=QPalette::NoRole)","Funname":"DStylePainter::drawItemText","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole=QPalette::NoRole"},{"Uniquefunname":"void DStylePainter::drawItemText(const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole)","Funname":"DStylePainter::drawItemText","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole"},{"Uniquefunname":"void DStylePainter::drawPrimitive(DStyle::PrimitiveElement pe,const QStyleOption \u0026 opt)","Funname":"DStylePainter::drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawPrimitive(QStyle::PrimitiveElement pe,const QStyleOption \u0026 opt)","Funname":"DStylePainter::drawPrimitive","Returntype":"void","Args":"QStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawPrimitive(DStyle::PrimitiveElement pe, const QStyleOption \u0026opt)","Funname":"DStylePainter::drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawPrimitive(QStyle::PrimitiveElement pe, const QStyleOption \u0026opt)","Funname":"DStylePainter::drawPrimitive","Returntype":"void","Args":"QStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"QStyle * DStylePainter::style() cons)","Funname":"DStylePainter::style","Returntype":"QStyle *","Args":") cons"},{"Uniquefunname":" DStyledIconEngine(DrawFun drawFun,const QString \u0026 iconName=QString ())","Funname":"DStyledIconEngine","Returntype":"","Args":"DrawFun drawFun,const QString \u0026 iconName=QString ()"},{"Uniquefunname":" DStyledIconEngine::DStyledIconEngine(DrawFun drawFun,const QString \u0026 iconName=QString ())","Funname":"DStyledIconEngine::DStyledIconEngine","Returntype":"","Args":"DrawFun drawFun,const QString \u0026 iconName=QString ()"},{"Uniquefunname":"void DStyledIconEngine::bindDrawFun(DrawFun drawFun)","Funname":"DStyledIconEngine::bindDrawFun","Returntype":"void","Args":"DrawFun drawFun"},{"Uniquefunname":"QIconEngine * DStyledIconEngine::clone() cons)","Funname":"DStyledIconEngine::clone","Returntype":"QIconEngine *","Args":") cons"},{"Uniquefunname":"void DStyledIconEngine::drawIcon(const QIcon \u0026 icon,QPainter * pa,const QRectF \u0026 rect)","Funname":"DStyledIconEngine::drawIcon","Returntype":"void","Args":"const QIcon \u0026 icon,QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void DStyledIconEngine::paint(QPainter * painter,const QPalette \u0026 palette,const QRectF \u0026 rect)","Funname":"DStyledIconEngine::paint","Returntype":"void","Args":"QPainter * painter,const QPalette \u0026 palette,const QRectF \u0026 rect"},{"Uniquefunname":"void DStyledIconEngine::paint(QPainter * painter,const QRect \u0026 rect,QIcon::Mode mode,QIcon::State state)","Funname":"DStyledIconEngine::paint","Returntype":"void","Args":"QPainter * painter,const QRect \u0026 rect,QIcon::Mode mode,QIcon::State state"},{"Uniquefunname":"QPixmap DStyledIconEngine::pixmap(const QSize \u0026 size,QIcon::Mode mode,QIcon::State state)","Funname":"DStyledIconEngine::pixmap","Returntype":"QPixmap","Args":"const QSize \u0026 size,QIcon::Mode mode,QIcon::State state"},{"Uniquefunname":"void DStyledIconEngine::setFrontRole(const QWidget * widget,QPalette::ColorRole role)","Funname":"DStyledIconEngine::setFrontRole","Returntype":"void","Args":"const QWidget * widget,QPalette::ColorRole role"},{"Uniquefunname":"void DStyledIconEngine::setIconName(const QString \u0026 name)","Funname":"DStyledIconEngine::setIconName","Returntype":"void","Args":"const QString \u0026 name"},{"Uniquefunname":"void DStyledIconEngine::virtual_hook(int id,void * data)","Funname":"DStyledIconEngine::virtual_hook","Returntype":"void","Args":"int id,void * data"},{"Uniquefunname":"Q_DECLARE_FLAGS(Corners, Corner)","Funname":"Q_DECLARE_FLAGS","Returntype":"","Args":"Corners,Corner"},{"Uniquefunname":"QColor adjustColor(const QColor \u0026 base,qint8 hueFloat=0,qint8 saturationFloat=0,qint8 lightnessFloat=0,qint8 redFloat=0,qint8 greenFloat=0,qint8 blueFloat=0,qint8 alphaFloat=0)","Funname":"adjustColor","Returntype":"QColor","Args":"const QColor \u0026 base,qint8 hueFloat=0,qint8 saturationFloat=0,qint8 lightnessFloat=0,qint8 redFloat=0,qint8 greenFloat=0,qint8 blueFloat=0,qint8 alphaFloat=0"},{"Uniquefunname":"bool begin(QPaintDevice * pd,QWidget * w)","Funname":"begin","Returntype":"bool","Args":"QPaintDevice * pd,QWidget * w"},{"Uniquefunname":"bool begin(QWidget * w)","Funname":"begin","Returntype":"bool","Args":"QWidget * w"},{"Uniquefunname":"void bindDrawFun(DrawFun drawFun)","Funname":"bindDrawFun","Returntype":"void","Args":"DrawFun drawFun"},{"Uniquefunname":"QColor blendColor(const QColor \u0026 substrate,const QColor \u0026 superstratum)","Funname":"blendColor","Returntype":"QColor","Args":"const QColor \u0026 substrate,const QColor \u0026 superstratum"},{"Uniquefunname":"QIconEngine * clone() cons)","Funname":"clone","Returntype":"QIconEngine *","Args":") cons"},{"Uniquefunname":"void drawAddButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawAddButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrow(QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,Qt::ArrowType arrow,int width=2)","Funname":"drawArrow","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,Qt::ArrowType arrow,int width=2"},{"Uniquefunname":"void drawArrowBack(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowBack","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowDown(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowDown","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowElement(Qt::ArrowType arrow,QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowElement","Returntype":"void","Args":"Qt::ArrowType arrow,QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowEnter(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowEnter","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowForward(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowForward","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowLeave(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowLeave","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowLeft(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowLeft","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowNext(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowNext","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowPrev(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowPrev","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowRight(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowRight","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawArrowUp(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawArrowUp","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawBorder(QPainter * pa,const QRectF \u0026 rect,const QBrush \u0026 brush,int borderWidth,int radius)","Funname":"drawBorder","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QBrush \u0026 brush,int borderWidth,int radius"},{"Uniquefunname":"void drawCloseButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawCloseButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawComplexControl(QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt)","Funname":"drawComplexControl","Returntype":"void","Args":"QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt"},{"Uniquefunname":"void drawComplexControl(QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt)","Funname":"drawComplexControl","Returntype":"void","Args":"QStyle::ComplexControl cc,const QStyleOptionComplex \u0026 opt"},{"Uniquefunname":"void drawControl(DStyle::ControlElement ce,const QStyleOption \u0026 opt)","Funname":"drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void drawControl(DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void drawControl(DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void drawControl(QStyle::ControlElement ce,const QStyleOption \u0026 opt)","Funname":"drawControl","Returntype":"void","Args":"QStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void drawControl(const QStyle * style,DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr)","Funname":"drawControl","Returntype":"void","Args":"const QStyle * style,DStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr"},{"Uniquefunname":"void drawControl(QStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"drawControl","Returntype":"void","Args":"QStyle::ControlElement ce,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void DStylePainter::drawControl(DStyle::ControlElement ce, const QStyleOption \u0026opt)","Funname":"drawControl","Returntype":"void","Args":"DStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawControl(QStyle::ControlElement ce, const QStyleOption \u0026opt)","Funname":"drawControl","Returntype":"void","Args":"QStyle::ControlElement ce,const QStyleOption \u0026 opt"},{"Uniquefunname":"void drawDecreaseElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawDecreaseElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawDeleteButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawDeleteButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawEditElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawEditElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawExpandElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawExpandElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawFork(QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,int width=2)","Funname":"drawFork","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 color,int width=2"},{"Uniquefunname":"void drawForkElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawForkElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawHidePassword(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawHidePassword","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawIcon(const QIcon \u0026 icon,QPainter * pa,const QRectF \u0026 rect)","Funname":"drawIcon","Returntype":"void","Args":"const QIcon \u0026 icon,QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawIncreaseElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawIncreaseElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawIndicatorChecked(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawIndicatorChecked","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawIndicatorMajuscule(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawIndicatorMajuscule","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawIndicatorUnchecked(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawIndicatorUnchecked","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawItemPixmap(const QRect \u0026 r,int flags,const QPixmap \u0026 pixmap)","Funname":"drawItemPixmap","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPixmap \u0026 pixmap"},{"Uniquefunname":"void DStylePainter::drawItemPixmap(const QRect \u0026r, int flags, const QPixmap \u0026pixmap)","Funname":"drawItemPixmap","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPixmap \u0026 pixmap"},{"Uniquefunname":"void drawItemText(const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole=QPalette::NoRole)","Funname":"drawItemText","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole=QPalette::NoRole"},{"Uniquefunname":"void drawItemText(const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole)","Funname":"drawItemText","Returntype":"void","Args":"const QRect \u0026 r,int flags,const QPalette \u0026 pal,bool enabled,const QString \u0026 text,QPalette::ColorRole textRole"},{"Uniquefunname":"void drawLineEditClearButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawLineEditClearButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawLockElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawLockElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawMark(QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 boxInside,const QColor \u0026 boxOutside,const int penWidth,const int outLineLeng=2)","Funname":"drawMark","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect,const QColor \u0026 boxInside,const QColor \u0026 boxOutside,const int penWidth,const int outLineLeng=2"},{"Uniquefunname":"void drawMarkElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawMarkElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawMediaVolumeElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawMediaVolumeElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawMediaVolumeFullElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawMediaVolumeFullElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawMediaVolumeLeftElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawMediaVolumeLeftElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawMediaVolumeMutedElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawMediaVolumeMutedElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawMediaVolumeRightElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawMediaVolumeRightElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawPlus(QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width)","Funname":"drawPlus","Returntype":"void","Args":"QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width"},{"Uniquefunname":"void drawPrimitive(DStyle::PrimitiveElement pe,const QStyleOption \u0026 opt)","Funname":"drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void drawPrimitive(DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void drawPrimitive(DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void drawPrimitive(QStyle::PrimitiveElement pe,const QStyleOption \u0026 opt)","Funname":"drawPrimitive","Returntype":"void","Args":"QStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void drawPrimitive(const QStyle * style,DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr)","Funname":"drawPrimitive","Returntype":"void","Args":"const QStyle * style,DStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr"},{"Uniquefunname":"void drawPrimitive(QStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons)","Funname":"drawPrimitive","Returntype":"void","Args":"QStyle::PrimitiveElement pe,const QStyleOption * opt,QPainter * p,const QWidget * w=nullptr) cons"},{"Uniquefunname":"void DStylePainter::drawPrimitive(DStyle::PrimitiveElement pe, const QStyleOption \u0026opt)","Funname":"drawPrimitive","Returntype":"void","Args":"DStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void DStylePainter::drawPrimitive(QStyle::PrimitiveElement pe, const QStyleOption \u0026opt)","Funname":"drawPrimitive","Returntype":"void","Args":"QStyle::PrimitiveElement pe,const QStyleOption \u0026 opt"},{"Uniquefunname":"void drawReduceElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawReduceElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawRoundedRect(QPainter * pa,const QRect \u0026 rect,qreal xRadius,qreal yRadius,Corners corners,Qt::SizeMode mode=Qt::AbsoluteSize)","Funname":"drawRoundedRect","Returntype":"void","Args":"QPainter * pa,const QRect \u0026 rect,qreal xRadius,qreal yRadius,Corners corners,Qt::SizeMode mode=Qt::AbsoluteSize"},{"Uniquefunname":"void drawSelectElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawSelectElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawShadow(QPainter * pa,const QRect \u0026 rect,const QPainterPath \u0026 path,const QColor \u0026 sc,int radius,const QPoint \u0026 offset)","Funname":"drawShadow","Returntype":"void","Args":"QPainter * pa,const QRect \u0026 rect,const QPainterPath \u0026 path,const QColor \u0026 sc,int radius,const QPoint \u0026 offset"},{"Uniquefunname":"void drawShowPassword(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawShowPassword","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawSubtract(QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width)","Funname":"drawSubtract","Returntype":"void","Args":"QPainter * painter,const QRectF \u0026 rect,const QColor \u0026 color,qreal width"},{"Uniquefunname":"void drawTitleBarCloseButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawTitleBarCloseButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawTitleBarMaxButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawTitleBarMaxButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawTitleBarMenuButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawTitleBarMenuButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawTitleBarMinButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawTitleBarMinButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawTitleBarNormalButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawTitleBarNormalButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawTitleQuitFullButton(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawTitleQuitFullButton","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"void drawUnlockElement(QPainter * pa,const QRectF \u0026 rect)","Funname":"drawUnlockElement","Returntype":"void","Args":"QPainter * pa,const QRectF \u0026 rect"},{"Uniquefunname":"const DStyle * dstyle() cons)","Funname":"dstyle","Returntype":"const DStyle *","Args":") cons"},{"Uniquefunname":"QBrush generatedBrush(StyleState state,const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"StyleState state,const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons"},{"Uniquefunname":"QBrush generatedBrush(StyleState state,const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"StyleState state,const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons"},{"Uniquefunname":"QBrush generatedBrush(const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground) cons"},{"Uniquefunname":"QBrush generatedBrush(const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons"},{"Uniquefunname":"QBrush generatedBrush(const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,DPalette::ColorType type=DPalette::NoType) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,DPalette::ColorType type=DPalette::NoType) cons"},{"Uniquefunname":"QBrush generatedBrush(const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"const QStyleOption * option,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole) cons"},{"Uniquefunname":"QBrush generatedBrush(StateFlags flags,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground,const QStyleOption * option=nullptr) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"StateFlags flags,const QBrush \u0026 base,DPalette::ColorGroup cg=DPalette::Normal,DPalette::ColorType type=DPalette::ItemBackground,const QStyleOption * option=nullptr) cons"},{"Uniquefunname":"QBrush generatedBrush(StateFlags flags,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole,const QStyleOption * option=nullptr) cons)","Funname":"generatedBrush","Returntype":"QBrush","Args":"StateFlags flags,const QBrush \u0026 base,QPalette::ColorGroup cg=QPalette::Normal,QPalette::ColorRole role=QPalette::NoRole,const QStyleOption * option=nullptr) cons"},{"Uniquefunname":"QPixmap generatedIconPixmap(QIcon::Mode iconMode,const QPixmap \u0026 pixmap,const QStyleOption * opt) cons)","Funname":"generatedIconPixmap","Returntype":"QPixmap","Args":"QIcon::Mode iconMode,const QPixmap \u0026 pixmap,const QStyleOption * opt) cons"},{"Uniquefunname":"QColor getColor(const QStyleOption * option,QPalette::ColorRole role) cons)","Funname":"getColor","Returntype":"QColor","Args":"const QStyleOption * option,QPalette::ColorRole role) cons"},{"Uniquefunname":"QColor getColor(const QStyleOption * option,const DPalette \u0026 palette,DPalette::ColorType type) cons)","Funname":"getColor","Returntype":"QColor","Args":"const QStyleOption * option,const DPalette \u0026 palette,DPalette::ColorType type) cons"},{"Uniquefunname":"QColor getColor(const T * option,DPalette::ColorType type) cons)","Funname":"getColor","Returntype":"QColor","Args":"const T * option,DPalette::ColorType type) cons"},{"Uniquefunname":"DStyle getState(const QStyleOption * option)","Funname":"getState","Returntype":"DStyle","Args":"const QStyleOption * option"},{"Uniquefunname":"void paint(QPainter * painter,const QPalette \u0026 palette,const QRectF \u0026 rect)","Funname":"paint","Returntype":"void","Args":"QPainter * painter,const QPalette \u0026 palette,const QRectF \u0026 rect"},{"Uniquefunname":"void paint(QPainter * painter,const QRect \u0026 rect,QIcon::Mode mode,QIcon::State state)","Funname":"paint","Returntype":"void","Args":"QPainter * painter,const QRect \u0026 rect,QIcon::Mode mode,QIcon::State state"},{"Uniquefunname":"int pixelMetric(DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"pixelMetric","Returntype":"int","Args":"DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"int pixelMetric(DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"pixelMetric","Returntype":"int","Args":"DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"int pixelMetric(QStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"pixelMetric","Returntype":"int","Args":"QStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"int pixelMetric(const QStyle * style,DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr)","Funname":"pixelMetric","Returntype":"int","Args":"const QStyle * style,DStyle::PixelMetric m,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr"},{"Uniquefunname":"QPixmap pixmap(const QSize \u0026 size,QIcon::Mode mode,QIcon::State state)","Funname":"pixmap","Returntype":"QPixmap","Args":"const QSize \u0026 size,QIcon::Mode mode,QIcon::State state"},{"Uniquefunname":"void setFocusRectVisible(QWidget * widget,bool visible)","Funname":"setFocusRectVisible","Returntype":"void","Args":"QWidget * widget,bool visible"},{"Uniquefunname":"void setFrameRadius(QWidget * widget,int radius)","Funname":"setFrameRadius","Returntype":"void","Args":"QWidget * widget,int radius"},{"Uniquefunname":"void setFrontRole(const QWidget * widget,QPalette::ColorRole role)","Funname":"setFrontRole","Returntype":"void","Args":"const QWidget * widget,QPalette::ColorRole role"},{"Uniquefunname":"void setIconName(const QString \u0026 name)","Funname":"setIconName","Returntype":"void","Args":"const QString \u0026 name"},{"Uniquefunname":"void setStyle(const QStyle * style)","Funname":"setStyle","Returntype":"void","Args":"const QStyle * style"},{"Uniquefunname":"void setTooltipTextFormat(Qt::TextFormat format)","Funname":"setTooltipTextFormat","Returntype":"void","Args":"Qt::TextFormat format"},{"Uniquefunname":"QSize sizeFromContents(QStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons)","Funname":"sizeFromContents","Returntype":"QSize","Args":"QStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QSize sizeFromContents(DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons)","Funname":"sizeFromContents","Returntype":"QSize","Args":"DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QSize sizeFromContents(DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons)","Funname":"sizeFromContents","Returntype":"QSize","Args":"DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QSize sizeFromContents(const QStyle * style,DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr)","Funname":"sizeFromContents","Returntype":"QSize","Args":"const QStyle * style,DStyle::ContentsType ct,const QStyleOption * opt,const QSize \u0026 contentsSize,const QWidget * widget=nullptr"},{"Uniquefunname":"QIcon standardIcon(QStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"standardIcon","Returntype":"QIcon","Args":"QStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QIcon standardIcon(DStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons)","Funname":"standardIcon","Returntype":"QIcon","Args":"DStyle::StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QIcon standardIcon(DStyle::StandardPixmap standardIcon,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"standardIcon","Returntype":"QIcon","Args":"DStyle::StandardPixmap standardIcon,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QIcon standardIcon(const QStyle * style,StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=0)","Funname":"standardIcon","Returntype":"QIcon","Args":"const QStyle * style,StandardPixmap st,const QStyleOption * opt=nullptr,const QWidget * widget=0"},{"Uniquefunname":"QPalette standardPalette() cons)","Funname":"standardPalette","Returntype":"QPalette","Args":") cons"},{"Uniquefunname":"QStyle * style() cons)","Funname":"style","Returntype":"QStyle *","Args":") cons"},{"Uniquefunname":"const QStyle * style() cons)","Funname":"style","Returntype":"const QStyle *","Args":") cons"},{"Uniquefunname":"int styleHint(StyleHint sh,const QStyleOption * opt,const QWidget * w,QStyleHintReturn * shret) cons)","Funname":"styleHint","Returntype":"int","Args":"StyleHint sh,const QStyleOption * opt,const QWidget * w,QStyleHintReturn * shret) cons"},{"Uniquefunname":"QRect subElementRect(QStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"subElementRect","Returntype":"QRect","Args":"QStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QRect subElementRect(DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"subElementRect","Returntype":"QRect","Args":"DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QRect subElementRect(DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons)","Funname":"subElementRect","Returntype":"QRect","Args":"DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr) cons"},{"Uniquefunname":"QRect subElementRect(const QStyle * style,DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr)","Funname":"subElementRect","Returntype":"QRect","Args":"const QStyle * style,DStyle::SubElement r,const QStyleOption * opt,const QWidget * widget=nullptr"},{"Uniquefunname":"QPair\u003cQIcon toIconModeState(const QStyleOption * option)","Funname":"toIconModeState","Returntype":"QPair\u003cQIcon","Args":"const QStyleOption * option"},{"Uniquefunname":"Qt tooltipTextFormat()","Funname":"tooltipTextFormat","Returntype":"Qt","Args":""},{"Uniquefunname":"QRect viewItemDrawText(const QStyle * style,QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect)","Funname":"viewItemDrawText","Returntype":"QRect","Args":"const QStyle * style,QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect"},{"Uniquefunname":"QRect viewItemDrawText(QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect) cons)","Funname":"viewItemDrawText","Returntype":"QRect","Args":"QPainter * p,const QStyleOptionViewItem * option,const QRect \u0026 rect) cons"},{"Uniquefunname":"void viewItemLayout(const QStyle * style,const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint)","Funname":"viewItemLayout","Returntype":"void","Args":"const QStyle * style,const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint"},{"Uniquefunname":"void viewItemLayout(const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint) cons)","Funname":"viewItemLayout","Returntype":"void","Args":"const QStyleOptionViewItem * opt,QRect * pixmapRect,QRect * textRect,QRect * checkRect,bool sizehint) cons"},{"Uniquefunname":"QSize viewItemSize(const QStyle * style,const QStyleOptionViewItem * option,int role)","Funname":"viewItemSize","Returntype":"QSize","Args":"const QStyle * style,const QStyleOptionViewItem * option,int role"},{"Uniquefunname":"QSizeF viewItemTextLayout(QTextLayout \u0026 textLayout,int lineWidth)","Funname":"viewItemTextLayout","Returntype":"QSizeF","Args":"QTextLayout \u0026 textLayout,int lineWidth"},{"Uniquefunname":"void virtual_hook(int id,void * data)","Funname":"virtual_hook","Returntype":"void","Args":"int id,void * data"}],"Records":[{"Name":"enum:DDrawUtils::Corner","Fields":["BottomLeftCorner","BottomRightCorner","DDrawUtils::BottomLeftCorner","DDrawUtils::BottomRightCorner","DDrawUtils::TopLeftCorner","DDrawUtils::TopRightCorner","TopLeftCorner","TopRightCorner"]},{"Name":"enum:DStyle::ControlElement","Fields":["CE_ButtonBoxButton","CE_ButtonBoxButtonBevel","CE_ButtonBoxButtonLabel","CE_CustomBase","CE_FloatingWidget","CE_IconButton","CE_SwitchButton","CE_TextButton","DStyle::CE_ButtonBoxButton","DStyle::CE_ButtonBoxButtonBevel","DStyle::CE_ButtonBoxButtonLabel","DStyle::CE_CustomBase","DStyle::CE_FloatingWidget","DStyle::CE_IconButton","DStyle::CE_SwitchButton","DStyle::CE_TextButton"]},{"Name":"enum:DStyle::ContentsType","Fields":["CT_ButtonBoxButton","CT_CustomBase","CT_FloatingWidget","CT_IconButton","CT_SwitchButton","DStyle::CT_ButtonBoxButton","DStyle::CT_CustomBase","DStyle::CT_FloatingWidget","DStyle::CT_IconButton","DStyle::CT_SwitchButton"]},{"Name":"namespace","Fields":["DDrawUtils"]},{"Name":"macro","Fields":["DSTYLE_H"]},{"Name":"enum:DStyle::PrimitiveElement","Fields":["DStyle::PE_CustomBase","DStyle::PE_FloatingWidget","DStyle::PE_Icon","DStyle::PE_IconButtonIcon","DStyle::PE_IconButtonPanel","DStyle::PE_ItemBackground","DStyle::PE_SwitchButtonGroove","DStyle::PE_SwitchButtonHandle","PE_CustomBase","PE_FloatingWidget","PE_Icon","PE_IconButtonIcon","PE_IconButtonPanel","PE_ItemBackground","PE_SwitchButtonGroove","PE_SwitchButtonHandle"]},{"Name":"enum:DStyle::PixelMetric","Fields":["DStyle::PM_ButtonMinimizedSize","DStyle::PM_ContentsMargins","DStyle::PM_ContentsSpacing","DStyle::PM_CustomBase","DStyle::PM_FloatingWidgetRadius","DStyle::PM_FloatingWidgetShadowHOffset","DStyle::PM_FloatingWidgetShadowMargins","DStyle::PM_FloatingWidgetShadowRadius","DStyle::PM_FloatingWidgetShadowVOffset","DStyle::PM_FocusBorderSpacing","DStyle::PM_FocusBorderWidth","DStyle::PM_FrameMargins","DStyle::PM_FrameRadius","DStyle::PM_IconButtonIconSize","DStyle::PM_ShadowHOffset","DStyle::PM_ShadowRadius","DStyle::PM_ShadowVOffset","DStyle::PM_SwitchButtonHandleWidth","DStyle::PM_SwithcButtonHandleHeight","DStyle::PM_TopLevelWindowRadius","PM_ButtonMinimizedSize","PM_ContentsMargins","PM_ContentsSpacing","PM_CustomBase","PM_FloatingWidgetRadius","PM_FloatingWidgetShadowHOffset","PM_FloatingWidgetShadowMargins","PM_FloatingWidgetShadowRadius","PM_FloatingWidgetShadowVOffset","PM_FocusBorderSpacing","PM_FocusBorderWidth","PM_FrameMargins","PM_FrameRadius","PM_IconButtonIconSize","PM_ShadowHOffset","PM_ShadowRadius","PM_ShadowVOffset","PM_SwitchButtonHandleWidth","PM_SwithcButtonHandleHeight","PM_TopLevelWindowRadius"]},{"Name":"enum:DStyle::SubElement","Fields":["DStyle::SE_ButtonBoxButtonContents","DStyle::SE_ButtonBoxButtonFocusRect","DStyle::SE_CustomBase","DStyle::SE_FloatingWidget","DStyle::SE_IconButtonIcon","DStyle::SE_SwitchButtonGroove","DStyle::SE_SwitchButtonHandle","SE_ButtonBoxButtonContents","SE_ButtonBoxButtonFocusRect","SE_CustomBase","SE_FloatingWidget","SE_IconButtonIcon","SE_SwitchButtonGroove","SE_SwitchButtonHandle"]},{"Name":"enum:DStyle::StandardPixmap","Fields":["DStyle::SP_AddButton","DStyle::SP_ArrowEnter","DStyle::SP_ArrowLeave","DStyle::SP_ArrowNext","DStyle::SP_ArrowPrev","DStyle::SP_CloseButton","DStyle::SP_CustomBase","DStyle::SP_DecreaseElement","DStyle::SP_DeleteButton","DStyle::SP_EditElement","DStyle::SP_ExpandElement","DStyle::SP_ForkElement","DStyle::SP_HidePassword","DStyle::SP_IncreaseElement","DStyle::SP_IndicatorChecked","DStyle::SP_IndicatorMajuscule","DStyle::SP_IndicatorSearch","DStyle::SP_IndicatorUnchecked","DStyle::SP_LockElement","DStyle::SP_MarkElement","DStyle::SP_MediaVolumeHighElement","DStyle::SP_MediaVolumeLeftElement","DStyle::SP_MediaVolumeLowElement","DStyle::SP_MediaVolumeMutedElement","DStyle::SP_MediaVolumeRightElement","DStyle::SP_ReduceElement","DStyle::SP_SelectElement","DStyle::SP_ShowPassword","DStyle::SP_TitleMoreButton","DStyle::SP_TitleQuitFullButton","DStyle::SP_UnlockElement","SP_AddButton","SP_ArrowEnter","SP_ArrowLeave","SP_ArrowNext","SP_ArrowPrev","SP_CloseButton","SP_CustomBase","SP_DecreaseElement","SP_DeleteButton","SP_EditElement","SP_ExpandElement","SP_ForkElement","SP_HidePassword","SP_IncreaseElement","SP_IndicatorChecked","SP_IndicatorMajuscule","SP_IndicatorSearch","SP_IndicatorUnchecked","SP_LockElement","SP_MarkElement","SP_MediaVolumeHighElement","SP_MediaVolumeLeftElement","SP_MediaVolumeLowElement","SP_MediaVolumeMutedElement","SP_MediaVolumeRightElement","SP_ReduceElement","SP_SelectElement","SP_ShowPassword","SP_TitleMoreButton","SP_TitleQuitFullButton","SP_UnlockElement"]},{"Name":"enum:DStyle::StyleState","Fields":["DStyle::SS_CheckedFlag","DStyle::SS_FlagCustomBase","DStyle::SS_FocusFlag","DStyle::SS_HoverState","DStyle::SS_NormalState","DStyle::SS_PressState","DStyle::SS_SelectedFlag","DStyle::SS_StateCustomBase","DStyle::StyleState_Mask","SS_CheckedFlag","SS_FlagCustomBase","SS_FocusFlag","SS_HoverState","SS_NormalState","SS_PressState","SS_SelectedFlag","SS_StateCustomBase","StyleState_Mask"]},{"Name":"class:DStyleHelper","Fields":["const DStyle * DStyleHelper::m_dstyle","const QStyle * DStyleHelper::m_style"]},{"Name":"class:DStylePainter","Fields":["DStyleHelper DStylePainter::dstyle","QWidget * DStylePainter::widget","QStyle * DStylePainter::wstyle"]},{"Name":"class:DStyledIconEngine","Fields":["DrawFun DStyledIconEngine::m_drawFun","QString DStyledIconEngine::m_iconName","QPalette::ColorRole DStyledIconEngine::m_painterRole","const QWidget * DStyledIconEngine::m_widget"]}]}
{"Filepath":"src/widgets/dstyleditemdelegate.h","Functions":[{"Uniquefunname":"DViewItemActionList DStandardItem::actionList(Qt::Edge edge) cons)","Funname":"DStandardItem::actionList","Returntype":"DViewItemActionList","Args":"Qt::Edge edge) cons"},{"Uniquefunname":"DPalette DStandardItem::backgroundRole() cons)","Funname":"DStandardItem::backgroundRole","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"DPalette DStandardItem::backgroundType() cons)","Funname":"DStandardItem::backgroundType","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"QFont DStandardItem::font() cons)","Funname":"DStandardItem::font","Returntype":"QFont","Args":") cons"},{"Uniquefunname":"void DStandardItem::setActionList(Qt::Edge edge,const DViewItemActionList \u0026 list)","Funname":"DStandardItem::setActionList","Returntype":"void","Args":"Qt::Edge edge,const DViewItemActionList \u0026 list"},{"Uniquefunname":"void DStandardItem::setBackgroundRole(DPalette::ColorRole role)","Funname":"DStandardItem::setBackgroundRole","Returntype":"void","Args":"DPalette::ColorRole role"},{"Uniquefunname":"void DStandardItem::setBackgroundRole(DPalette::ColorType role)","Funname":"DStandardItem::setBackgroundRole","Returntype":"void","Args":"DPalette::ColorType role"},{"Uniquefunname":"void DStandardItem::setFontSize(DFontSizeManager::SizeType size)","Funname":"DStandardItem::setFontSize","Returntype":"void","Args":"DFontSizeManager::SizeType size"},{"Uniquefunname":"void DStandardItem::setTextActionList(const DViewItemActionList \u0026 list)","Funname":"DStandardItem::setTextActionList","Returntype":"void","Args":"const DViewItemActionList \u0026 list"},{"Uniquefunname":"void DStandardItem::setTextColorRole(DPalette::ColorRole role)","Funname":"DStandardItem::setTextColorRole","Returntype":"void","Args":"DPalette::ColorRole role"},{"Uniquefunname":"void DStandardItem::setTextColorRole(DPalette::ColorType role)","Funname":"DStandardItem::setTextColorRole","Returntype":"void","Args":"DPalette::ColorType role"},{"Uniquefunname":"DViewItemActionList DStandardItem::textActionList() cons)","Funname":"DStandardItem::textActionList","Returntype":"DViewItemActionList","Args":") cons"},{"Uniquefunname":"DPalette DStandardItem::textColorRole() cons)","Funname":"DStandardItem::textColorRole","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"DPalette DStandardItem::textColorType() cons)","Funname":"DStandardItem::textColorType","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":" DStandardItem::~DStandardItem()","Funname":"DStandardItem::~DStandardItem","Returntype":"","Args":""},{"Uniquefunname":" DStyledItemDelegate(QAbstractItemView * parent=nullptr)","Funname":"DStyledItemDelegate","Returntype":"","Args":"QAbstractItemView * parent=nullptr"},{"Uniquefunname":" DStyledItemDelegate::DStyledItemDelegate(QAbstractItemView * parent=nullptr)","Funname":"DStyledItemDelegate::DStyledItemDelegate","Returntype":"","Args":"QAbstractItemView * parent=nullptr"},{"Uniquefunname":"BackgroundType DStyledItemDelegate::backgroundType() cons)","Funname":"DStyledItemDelegate::backgroundType","Returntype":"BackgroundType","Args":") cons"},{"Uniquefunname":"bool DStyledItemDelegate::eventFilter(QObject * object,QEvent * event)","Funname":"DStyledItemDelegate::eventFilter","Returntype":"bool","Args":"QObject * object,QEvent * event"},{"Uniquefunname":"void DStyledItemDelegate::initStyleOption(QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons)","Funname":"DStyledItemDelegate::initStyleOption","Returntype":"void","Args":"QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"QSize DStyledItemDelegate::itemSize() cons)","Funname":"DStyledItemDelegate::itemSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QMargins DStyledItemDelegate::margins() cons)","Funname":"DStyledItemDelegate::margins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"void DStyledItemDelegate::paint(QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"DStyledItemDelegate::paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"void DStyledItemDelegate::setBackgroundType(BackgroundType backgroundType)","Funname":"DStyledItemDelegate::setBackgroundType","Returntype":"void","Args":"BackgroundType backgroundType"},{"Uniquefunname":"void DStyledItemDelegate::setItemSize(QSize itemSize)","Funname":"DStyledItemDelegate::setItemSize","Returntype":"void","Args":"QSize itemSize"},{"Uniquefunname":"void DStyledItemDelegate::setItemSpacing(int spacing)","Funname":"DStyledItemDelegate::setItemSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void DStyledItemDelegate::setMargins(const QMargins margins)","Funname":"DStyledItemDelegate::setMargins","Returntype":"void","Args":"const QMargins margins"},{"Uniquefunname":"QSize DStyledItemDelegate::sizeHint(const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"DStyledItemDelegate::sizeHint","Returntype":"QSize","Args":"const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"int DStyledItemDelegate::spacing() cons)","Funname":"DStyledItemDelegate::spacing","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DStyledItemDelegate::updateEditorGeometry(QWidget * editor,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"DStyledItemDelegate::updateEditorGeometry","Returntype":"void","Args":"QWidget * editor,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"D_DECL_DEPRECATED DViewItemAction(Qt::Alignment alignment,const QSize \u0026 iconSize,const QSize \u0026 maxSize,bool clickable,QObject * parent)","Funname":"DViewItemAction","Returntype":"D_DECL_DEPRECATED","Args":"Qt::Alignment alignment,const QSize \u0026 iconSize,const QSize \u0026 maxSize,bool clickable,QObject * parent"},{"Uniquefunname":" DViewItemAction(Qt::Alignment alignment=Qt::Alignment (),const QSize \u0026 iconSize=QSize (),const QSize \u0026 maxSize=QSize (),bool clickable=false)","Funname":"DViewItemAction","Returntype":"","Args":"Qt::Alignment alignment=Qt::Alignment (),const QSize \u0026 iconSize=QSize (),const QSize \u0026 maxSize=QSize (),bool clickable=false"},{"Uniquefunname":"D_DECL_DEPRECATED DViewItemAction::DViewItemAction(Qt::Alignment alignment,const QSize \u0026 iconSize,const QSize \u0026 maxSize,bool clickable,QObject * parent)","Funname":"DViewItemAction::DViewItemAction","Returntype":"D_DECL_DEPRECATED","Args":"Qt::Alignment alignment,const QSize \u0026 iconSize,const QSize \u0026 maxSize,bool clickable,QObject * parent"},{"Uniquefunname":" DViewItemAction::DViewItemAction(Qt::Alignment alignment=Qt::Alignment (),const QSize \u0026 iconSize=QSize (),const QSize \u0026 maxSize=QSize (),bool clickable=false)","Funname":"DViewItemAction::DViewItemAction","Returntype":"","Args":"Qt::Alignment alignment=Qt::Alignment (),const QSize \u0026 iconSize=QSize (),const QSize \u0026 maxSize=QSize (),bool clickable=false"},{"Uniquefunname":"Qt DViewItemAction::alignment() cons)","Funname":"DViewItemAction::alignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"QMargins DViewItemAction::clickAreaMargins() cons)","Funname":"DViewItemAction::clickAreaMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"QFont DViewItemAction::font() cons)","Funname":"DViewItemAction::font","Returntype":"QFont","Args":") cons"},{"Uniquefunname":"QSize DViewItemAction::iconSize() cons)","Funname":"DViewItemAction::iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"bool DViewItemAction::isClickable() cons)","Funname":"DViewItemAction::isClickable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QSize DViewItemAction::maximumSize() cons)","Funname":"DViewItemAction::maximumSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DViewItemAction::setClickAreaMargins(const QMargins \u0026 margins)","Funname":"DViewItemAction::setClickAreaMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"void DViewItemAction::setFontSize(DFontSizeManager::SizeType size)","Funname":"DViewItemAction::setFontSize","Returntype":"void","Args":"DFontSizeManager::SizeType size"},{"Uniquefunname":"void DViewItemAction::setTextColorRole(DPalette::ColorRole role)","Funname":"DViewItemAction::setTextColorRole","Returntype":"void","Args":"DPalette::ColorRole role"},{"Uniquefunname":"void DViewItemAction::setTextColorRole(DPalette::ColorType role)","Funname":"DViewItemAction::setTextColorRole","Returntype":"void","Args":"DPalette::ColorType role"},{"Uniquefunname":"void DViewItemAction::setWidget(QWidget * widget)","Funname":"DViewItemAction::setWidget","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"DPalette DViewItemAction::textColorRole() cons)","Funname":"DViewItemAction::textColorRole","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"DPalette DViewItemAction::textColorType() cons)","Funname":"DViewItemAction::textColorType","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"QWidget * DViewItemAction::widget() cons)","Funname":"DViewItemAction::widget","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"DViewItemActionList actionList(Qt::Edge edge) cons)","Funname":"actionList","Returntype":"DViewItemActionList","Args":"Qt::Edge edge) cons"},{"Uniquefunname":"Qt alignment() cons)","Funname":"alignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"DPalette backgroundRole() cons)","Funname":"backgroundRole","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"BackgroundType backgroundType() cons)","Funname":"backgroundType","Returntype":"BackgroundType","Args":") cons"},{"Uniquefunname":"DPalette backgroundType() cons)","Funname":"backgroundType","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"QMargins clickAreaMargins() cons)","Funname":"clickAreaMargins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"bool eventFilter(QObject * object,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * object,QEvent * event"},{"Uniquefunname":"QFont font() cons)","Funname":"font","Returntype":"QFont","Args":") cons"},{"Uniquefunname":"QFont font() cons)","Funname":"font","Returntype":"QFont","Args":") cons"},{"Uniquefunname":"QSize iconSize() cons)","Funname":"iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons)","Funname":"initStyleOption","Returntype":"void","Args":"QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"bool isClickable() cons)","Funname":"isClickable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QSize itemSize() cons)","Funname":"itemSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"QMargins margins() cons)","Funname":"margins","Returntype":"QMargins","Args":") cons"},{"Uniquefunname":"QSize maximumSize() cons)","Funname":"maximumSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void paint(QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"void setActionList(Qt::Edge edge,const DViewItemActionList \u0026 list)","Funname":"setActionList","Returntype":"void","Args":"Qt::Edge edge,const DViewItemActionList \u0026 list"},{"Uniquefunname":"void setBackgroundRole(DPalette::ColorRole role)","Funname":"setBackgroundRole","Returntype":"void","Args":"DPalette::ColorRole role"},{"Uniquefunname":"void setBackgroundRole(DPalette::ColorType role)","Funname":"setBackgroundRole","Returntype":"void","Args":"DPalette::ColorType role"},{"Uniquefunname":"void setBackgroundType(BackgroundType backgroundType)","Funname":"setBackgroundType","Returntype":"void","Args":"BackgroundType backgroundType"},{"Uniquefunname":"void setClickAreaMargins(const QMargins \u0026 margins)","Funname":"setClickAreaMargins","Returntype":"void","Args":"const QMargins \u0026 margins"},{"Uniquefunname":"void setFontSize(DFontSizeManager::SizeType size)","Funname":"setFontSize","Returntype":"void","Args":"DFontSizeManager::SizeType size"},{"Uniquefunname":"void setFontSize(DFontSizeManager::SizeType size)","Funname":"setFontSize","Returntype":"void","Args":"DFontSizeManager::SizeType size"},{"Uniquefunname":"void setItemSize(QSize itemSize)","Funname":"setItemSize","Returntype":"void","Args":"QSize itemSize"},{"Uniquefunname":"void setItemSpacing(int spacing)","Funname":"setItemSpacing","Returntype":"void","Args":"int spacing"},{"Uniquefunname":"void setMargins(const QMargins margins)","Funname":"setMargins","Returntype":"void","Args":"const QMargins margins"},{"Uniquefunname":"void setTextActionList(const DViewItemActionList \u0026 list)","Funname":"setTextActionList","Returntype":"void","Args":"const DViewItemActionList \u0026 list"},{"Uniquefunname":"void setTextColorRole(DPalette::ColorRole role)","Funname":"setTextColorRole","Returntype":"void","Args":"DPalette::ColorRole role"},{"Uniquefunname":"void setTextColorRole(DPalette::ColorRole role)","Funname":"setTextColorRole","Returntype":"void","Args":"DPalette::ColorRole role"},{"Uniquefunname":"void setTextColorRole(DPalette::ColorType role)","Funname":"setTextColorRole","Returntype":"void","Args":"DPalette::ColorType role"},{"Uniquefunname":"void setTextColorRole(DPalette::ColorType role)","Funname":"setTextColorRole","Returntype":"void","Args":"DPalette::ColorType role"},{"Uniquefunname":"void setWidget(QWidget * widget)","Funname":"setWidget","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"QSize sizeHint(const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"sizeHint","Returntype":"QSize","Args":"const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"int spacing() cons)","Funname":"spacing","Returntype":"int","Args":") cons"},{"Uniquefunname":"DViewItemActionList textActionList() cons)","Funname":"textActionList","Returntype":"DViewItemActionList","Args":") cons"},{"Uniquefunname":"DPalette textColorRole() cons)","Funname":"textColorRole","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"DPalette textColorRole() cons)","Funname":"textColorRole","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"DPalette textColorType() cons)","Funname":"textColorType","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"DPalette textColorType() cons)","Funname":"textColorType","Returntype":"DPalette","Args":") cons"},{"Uniquefunname":"void updateEditorGeometry(QWidget * editor,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"updateEditorGeometry","Returntype":"void","Args":"QWidget * editor,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"QWidget * widget() cons)","Funname":"widget","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":" ~DStandardItem()","Funname":"~DStandardItem","Returntype":"","Args":""}],"Records":[{"Name":"enum:DStyledItemDelegate::BackgroundType","Fields":["BackgroundType_Mask","ClipCornerBackground","DStyledItemDelegate::BackgroundType_Mask","DStyledItemDelegate::ClipCornerBackground","DStyledItemDelegate::NoBackground","DStyledItemDelegate::NoNormalState","DStyledItemDelegate::RoundedBackground","NoBackground","NoNormalState","RoundedBackground"]},{"Name":"macro","Fields":["DSTYLEDITEMDELEGATE_H"]}]}
{"Filepath":"src/widgets/dstyleoption.h","Functions":[{"Uniquefunname":" DFontSizeManager()","Funname":"DFontSizeManager","Returntype":"","Args":""},{"Uniquefunname":" DFontSizeManager::DFontSizeManager()","Funname":"DFontSizeManager::DFontSizeManager","Returntype":"","Args":""},{"Uniquefunname":"void DFontSizeManager::bind(QWidget * widget,SizeType type)","Funname":"DFontSizeManager::bind","Returntype":"void","Args":"QWidget * widget,SizeType type"},{"Uniquefunname":"void DFontSizeManager::bind(QWidget * widget,SizeType type,int weight)","Funname":"DFontSizeManager::bind","Returntype":"void","Args":"QWidget * widget,SizeType type,int weight"},{"Uniquefunname":"quint16 DFontSizeManager::fontPixelSize(SizeType type) cons)","Funname":"DFontSizeManager::fontPixelSize","Returntype":"quint16","Args":"SizeType type) cons"},{"Uniquefunname":"int DFontSizeManager::fontPixelSize(const QFont \u0026 font)","Funname":"DFontSizeManager::fontPixelSize","Returntype":"int","Args":"const QFont \u0026 font"},{"Uniquefunname":"const QFont DFontSizeManager::get(SizeType type,const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::get","Returntype":"const QFont","Args":"SizeType type,const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::get(SizeType type,int weight,const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::get","Returntype":"const QFont","Args":"SizeType type,int weight,const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"DFontSizeManager * DFontSizeManager::instance()","Funname":"DFontSizeManager::instance","Returntype":"DFontSizeManager *","Args":""},{"Uniquefunname":"void DFontSizeManager::setFontGenericPixelSize(quint16 size)","Funname":"DFontSizeManager::setFontGenericPixelSize","Returntype":"void","Args":"quint16 size"},{"Uniquefunname":"void DFontSizeManager::setFontPixelSize(SizeType type,quint16 size)","Funname":"DFontSizeManager::setFontPixelSize","Returntype":"void","Args":"SizeType type,quint16 size"},{"Uniquefunname":"const QFont DFontSizeManager::t1(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t1","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t10(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t10","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t2(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t2","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t3(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t3","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t4(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t4","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t5(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t5","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t6(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t6","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t7(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t7","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t8(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t8","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont DFontSizeManager::t9(const QFont \u0026 base=QFont ()) cons)","Funname":"DFontSizeManager::t9","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"void DFontSizeManager::unbind(QWidget * widget)","Funname":"DFontSizeManager::unbind","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void DStyleOption::init(QWidget * widget)","Funname":"DStyleOption::init","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void DStyleOption::init(const QWidget * widget)","Funname":"DStyleOption::init","Returntype":"void","Args":"const QWidget * widget"},{"Uniquefunname":"void DStyleOptionBackgroundGroup::init(const QWidget * widget)","Funname":"DStyleOptionBackgroundGroup::init","Returntype":"void","Args":"const QWidget * widget"},{"Uniquefunname":"void DStyleOptionButton::init(const QWidget * widget)","Funname":"DStyleOptionButton::init","Returntype":"void","Args":"const QWidget * widget"},{"Uniquefunname":"    Q_DECLARE_FLAGS(LineEditFeatures, LineEditFeature)","Funname":"DStyleOptionLineEdit::Q_DECLARE_FLAGS","Returntype":"","Args":"LineEditFeatures,LineEditFeature"},{"Uniquefunname":"    Q_DECLARE_FLAGS(LineEditFeatures, LineEditFeature)","Funname":"Q_DECLARE_FLAGS","Returntype":"","Args":"LineEditFeatures,LineEditFeature"},{"Uniquefunname":"void bind(QWidget * widget,SizeType type)","Funname":"bind","Returntype":"void","Args":"QWidget * widget,SizeType type"},{"Uniquefunname":"void bind(QWidget * widget,SizeType type,int weight)","Funname":"bind","Returntype":"void","Args":"QWidget * widget,SizeType type,int weight"},{"Uniquefunname":"quint16 fontPixelSize(SizeType type) cons)","Funname":"fontPixelSize","Returntype":"quint16","Args":"SizeType type) cons"},{"Uniquefunname":"int fontPixelSize(const QFont \u0026 font)","Funname":"fontPixelSize","Returntype":"int","Args":"const QFont \u0026 font"},{"Uniquefunname":"const QFont get(SizeType type,const QFont \u0026 base=QFont ()) cons)","Funname":"get","Returntype":"const QFont","Args":"SizeType type,const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont get(SizeType type,int weight,const QFont \u0026 base=QFont ()) cons)","Funname":"get","Returntype":"const QFont","Args":"SizeType type,int weight,const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"void init(QWidget * widget)","Funname":"init","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void init(const QWidget * widget)","Funname":"init","Returntype":"void","Args":"const QWidget * widget"},{"Uniquefunname":"void init(const QWidget * widget)","Funname":"init","Returntype":"void","Args":"const QWidget * widget"},{"Uniquefunname":"void init(const QWidget * widget)","Funname":"init","Returntype":"void","Args":"const QWidget * widget"},{"Uniquefunname":"DFontSizeManager * instance()","Funname":"instance","Returntype":"DFontSizeManager *","Args":""},{"Uniquefunname":"void setFontGenericPixelSize(quint16 size)","Funname":"setFontGenericPixelSize","Returntype":"void","Args":"quint16 size"},{"Uniquefunname":"void setFontPixelSize(SizeType type,quint16 size)","Funname":"setFontPixelSize","Returntype":"void","Args":"SizeType type,quint16 size"},{"Uniquefunname":"const QFont t1(const QFont \u0026 base=QFont ()) cons)","Funname":"t1","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t10(const QFont \u0026 base=QFont ()) cons)","Funname":"t10","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t2(const QFont \u0026 base=QFont ()) cons)","Funname":"t2","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t3(const QFont \u0026 base=QFont ()) cons)","Funname":"t3","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t4(const QFont \u0026 base=QFont ()) cons)","Funname":"t4","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t5(const QFont \u0026 base=QFont ()) cons)","Funname":"t5","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t6(const QFont \u0026 base=QFont ()) cons)","Funname":"t6","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t7(const QFont \u0026 base=QFont ()) cons)","Funname":"t7","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t8(const QFont \u0026 base=QFont ()) cons)","Funname":"t8","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"const QFont t9(const QFont \u0026 base=QFont ()) cons)","Funname":"t9","Returntype":"const QFont","Args":"const QFont \u0026 base=QFont ()) cons"},{"Uniquefunname":"void unbind(QWidget * widget)","Funname":"unbind","Returntype":"void","Args":"QWidget * widget"}],"Records":[{"Name":"enum:DStyleOptionLineEdit::LineEditFeature","Fields":["Alert","DStyleOptionLineEdit::Alert","DStyleOptionLineEdit::IconButton","DStyleOptionLineEdit::None","IconButton","None"]},{"Name":"enum:DStyleOptionBackgroundGroup::ItemBackgroundPosition","Fields":["Beginning","DStyleOptionBackgroundGroup::Beginning","DStyleOptionBackgroundGroup::End","DStyleOptionBackgroundGroup::Invalid","DStyleOptionBackgroundGroup::Middle","DStyleOptionBackgroundGroup::OnlyOne","End","Invalid","Middle","OnlyOne"]},{"Name":"enum:DStyleOptionButtonBoxButton::ButtonPosition","Fields":["Beginning","DStyleOptionButtonBoxButton::Beginning","DStyleOptionButtonBoxButton::End","DStyleOptionButtonBoxButton::Invalid","DStyleOptionButtonBoxButton::Middle","DStyleOptionButtonBoxButton::OnlyOne","End","Invalid","Middle","OnlyOne"]},{"Name":"enum:ItemDataRole","Fields":["BottomActionListRole","LeftActionListRole","MarginsRole","RightActionListRole","TextActionListRole","TopActionListRole","UserRole","ViewItemBackgroundRole","ViewItemFontLevelRole","ViewItemForegroundRole"]},{"Name":"enum:DStyleOptionButton::ButtonFeature","Fields":["CircleButton","DStyleOptionButton::CircleButton","DStyleOptionButton::FloatingButton","DStyleOptionButton::SuggestButton","DStyleOptionButton::TitleBarButton","DStyleOptionButton::WarningButton","FloatingButton","SuggestButton","TitleBarButton","WarningButton"]},{"Name":"enum:DFontSizeManager::SizeType","Fields":["DFontSizeManager::NSizeTypes","DFontSizeManager::T1","DFontSizeManager::T10","DFontSizeManager::T2","DFontSizeManager::T3","DFontSizeManager::T4","DFontSizeManager::T5","DFontSizeManager::T6","DFontSizeManager::T7","DFontSizeManager::T8","DFontSizeManager::T9","NSizeTypes","T1","T10","T2","T3","T4","T5","T6","T7","T8","T9"]},{"Name":"class:DFontSizeManager","Fields":["QScopedPointer\u003cDFontSizeManagerPrivate\u003e DFontSizeManager::d"]},{"Name":"macro","Fields":["DSTYLEOPTION_H"]},{"Name":"enum:DStyleOption::OptionType","Fields":["DStyleOption::SO_CustomBase","DStyleOption::SO_HighlightButton","SO_CustomBase","SO_HighlightButton"]},{"Name":"class:DStyleOption","Fields":["DPalette DStyleOption::dpalette"]},{"Name":"class:DStyleOptionBackgroundGroup","Fields":["Qt::Orientations DStyleOptionBackgroundGroup::directions","ItemBackgroundPosition DStyleOptionBackgroundGroup::position"]},{"Name":"class:DStyleOptionButtonBoxButton","Fields":["Qt::Orientation DStyleOptionButtonBoxButton::orientation","ButtonPosition DStyleOptionButtonBoxButton::position"]},{"Name":"class:DStyleOptionFloatingWidget","Fields":["int DStyleOptionFloatingWidget::frameRadius","bool DStyleOptionFloatingWidget::noBackground"]},{"Name":"class:DStyleOptionIcon","Fields":["QIcon DStyleOptionIcon::icon"]},{"Name":"class:DStyleOptionLineEdit","Fields":["LineEditFeatures DStyleOptionLineEdit::features","QRect DStyleOptionLineEdit::iconButtonRect"]}]}
{"Filepath":"src/widgets/dsuggestbutton.h","Functions":[{"Uniquefunname":" DSuggestButton(QWidget * parent=nullptr)","Funname":"DSuggestButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSuggestButton(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DSuggestButton","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":" DSuggestButton::DSuggestButton(QWidget * parent=nullptr)","Funname":"DSuggestButton::DSuggestButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DSuggestButton::DSuggestButton(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DSuggestButton::DSuggestButton","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":"void DSuggestButton::paintEvent(QPaintEvent * event)","Funname":"DSuggestButton::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"}],"Records":[{"Name":"macro","Fields":["DSUGGESTBUTTON_H"]}]}
{"Filepath":"src/widgets/dswitchbutton.h","Functions":[{"Uniquefunname":" DSwitchButton(QWidget * parent=Q_NULLPTR)","Funname":"DSwitchButton","Returntype":"","Args":"QWidget * parent=Q_NULLPTR"},{"Uniquefunname":" DSwitchButton::DSwitchButton(QWidget * parent=Q_NULLPTR)","Funname":"DSwitchButton::DSwitchButton","Returntype":"","Args":"QWidget * parent=Q_NULLPTR"},{"Uniquefunname":"void DSwitchButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DSwitchButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"void DSwitchButton::paintEvent(QPaintEvent * e)","Funname":"DSwitchButton::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"QSize DSwitchButton::sizeHint() cons)","Funname":"DSwitchButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DSWITCHBUTTON_H"]}]}
{"Filepath":"src/widgets/dswitchlineexpand.h","Functions":[{"Uniquefunname":" DSwitchHeaderLine(QWidget * parent=0)","Funname":"DSwitchHeaderLine","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DSwitchHeaderLine::DSwitchHeaderLine(QWidget * parent=0)","Funname":"DSwitchHeaderLine::DSwitchHeaderLine","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DSwitchHeaderLine::mousePressEvent(QMouseEvent *)","Funname":"DSwitchHeaderLine::mousePressEvent","Returntype":"void","Args":"QMouseEvent *"},{"Uniquefunname":"void DSwitchHeaderLine::reverseArrowDirection()","Funname":"DSwitchHeaderLine::reverseArrowDirection","Returntype":"void","Args":""},{"Uniquefunname":"void DSwitchHeaderLine::setExpand(bool value)","Funname":"DSwitchHeaderLine::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":" DSwitchLineExpand(QWidget * parent=0)","Funname":"DSwitchLineExpand","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DSwitchLineExpand::DSwitchLineExpand(QWidget * parent=0)","Funname":"DSwitchLineExpand::DSwitchLineExpand","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"DBaseLine * DSwitchLineExpand::header()","Funname":"DSwitchLineExpand::header","Returntype":"DBaseLine *","Args":""},{"Uniquefunname":"void DSwitchLineExpand::resizeEvent(QResizeEvent * e)","Funname":"DSwitchLineExpand::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DSwitchLineExpand::setExpand(bool value)","Funname":"DSwitchLineExpand::setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DSwitchLineExpand::setHeader(QWidget * header)","Funname":"DSwitchLineExpand::setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void DSwitchLineExpand::setTitle(const QString \u0026 title)","Funname":"DSwitchLineExpand::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"DBaseLine * header()","Funname":"header","Returntype":"DBaseLine *","Args":""},{"Uniquefunname":"void mousePressEvent(QMouseEvent *)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent *"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void reverseArrowDirection()","Funname":"reverseArrowDirection","Returntype":"void","Args":""},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setExpand(bool value)","Funname":"setExpand","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void setHeader(QWidget * header)","Funname":"setHeader","Returntype":"void","Args":"QWidget * header"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"}],"Records":[{"Name":"macro","Fields":["DSWITCHLINEEXPAND_H"]},{"Name":"class:DSwitchHeaderLine","Fields":["DSwitchButton * DSwitchHeaderLine::m_switchButton"]},{"Name":"class:DSwitchLineExpand","Fields":["DSwitchHeaderLine * DSwitchLineExpand::m_headerLine"]}]}
{"Filepath":"src/widgets/dtabbar.h","Functions":[{"Uniquefunname":" DTabBar(QWidget * parent=0)","Funname":"DTabBar","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DTabBar::DTabBar(QWidget * parent=0)","Funname":"DTabBar::DTabBar","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DTabBar::addTab(const QIcon \u0026 icon,const QString \u0026 text)","Funname":"DTabBar::addTab","Returntype":"int","Args":"const QIcon \u0026 icon,const QString \u0026 text"},{"Uniquefunname":"int DTabBar::addTab(const QString \u0026 text)","Funname":"DTabBar::addTab","Returntype":"int","Args":"const QString \u0026 text"},{"Uniquefunname":"bool DTabBar::autoHide() cons)","Funname":"DTabBar::autoHide","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTabBar::canInsertFromMimeData(int index,const QMimeData * source) cons)","Funname":"DTabBar::canInsertFromMimeData","Returntype":"bool","Args":"int index,const QMimeData * source) cons"},{"Uniquefunname":"bool DTabBar::changeCurrentOnDrag() cons)","Funname":"DTabBar::changeCurrentOnDrag","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int DTabBar::count() cons)","Funname":"DTabBar::count","Returntype":"int","Args":") cons"},{"Uniquefunname":"QPixmap DTabBar::createDragPixmapFromTab(int index,const QStyleOptionTab \u0026 option,QPoint * hotspot) cons)","Funname":"DTabBar::createDragPixmapFromTab","Returntype":"QPixmap","Args":"int index,const QStyleOptionTab \u0026 option,QPoint * hotspot) cons"},{"Uniquefunname":"QMimeData * DTabBar::createMimeDataFromTab(int index,const QStyleOptionTab \u0026 option) cons)","Funname":"DTabBar::createMimeDataFromTab","Returntype":"QMimeData *","Args":"int index,const QStyleOptionTab \u0026 option) cons"},{"Uniquefunname":"int DTabBar::currentIndex() cons)","Funname":"DTabBar::currentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"DTabBarPrivate * DTabBar::d_func()","Funname":"DTabBar::d_func","Returntype":"DTabBarPrivate *","Args":""},{"Uniquefunname":"const DTabBarPrivate * DTabBar::d_func() cons)","Funname":"DTabBar::d_func","Returntype":"const DTabBarPrivate *","Args":") cons"},{"Uniquefunname":"bool DTabBar::documentMode() cons)","Funname":"DTabBar::documentMode","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DTabBar::dragActionChanged(Qt::DropAction action)","Funname":"DTabBar::dragActionChanged","Returntype":"void","Args":"Qt::DropAction action"},{"Uniquefunname":"void DTabBar::dragEnd(Qt::DropAction action)","Funname":"DTabBar::dragEnd","Returntype":"void","Args":"Qt::DropAction action"},{"Uniquefunname":"void DTabBar::dragEnterEvent(QDragEnterEvent * e)","Funname":"DTabBar::dragEnterEvent","Returntype":"void","Args":"QDragEnterEvent * e"},{"Uniquefunname":"QWindow * DTabBar::dragIconWindow() cons)","Funname":"DTabBar::dragIconWindow","Returntype":"QWindow *","Args":") cons"},{"Uniquefunname":"void DTabBar::dragLeaveEvent(QDragLeaveEvent * e)","Funname":"DTabBar::dragLeaveEvent","Returntype":"void","Args":"QDragLeaveEvent * e"},{"Uniquefunname":"void DTabBar::dragMoveEvent(QDragMoveEvent * e)","Funname":"DTabBar::dragMoveEvent","Returntype":"void","Args":"QDragMoveEvent * e"},{"Uniquefunname":"void DTabBar::dragStarted()","Funname":"DTabBar::dragStarted","Returntype":"void","Args":""},{"Uniquefunname":"bool DTabBar::drawBase() cons)","Funname":"DTabBar::drawBase","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DTabBar::dropEvent(QDropEvent * e)","Funname":"DTabBar::dropEvent","Returntype":"void","Args":"QDropEvent * e"},{"Uniquefunname":"Qt DTabBar::elideMode() cons)","Funname":"DTabBar::elideMode","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"bool DTabBar::expanding() cons)","Funname":"DTabBar::expanding","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QColor DTabBar::flashColor() cons)","Funname":"DTabBar::flashColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QSize DTabBar::iconSize() cons)","Funname":"DTabBar::iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DTabBar::insertFromMimeData(int index,const QMimeData * source)","Funname":"DTabBar::insertFromMimeData","Returntype":"void","Args":"int index,const QMimeData * source"},{"Uniquefunname":"void DTabBar::insertFromMimeDataOnDragEnter(int index,const QMimeData * source)","Funname":"DTabBar::insertFromMimeDataOnDragEnter","Returntype":"void","Args":"int index,const QMimeData * source"},{"Uniquefunname":"int DTabBar::insertTab(int index,const QIcon \u0026 icon,const QString \u0026 text)","Funname":"DTabBar::insertTab","Returntype":"int","Args":"int index,const QIcon \u0026 icon,const QString \u0026 text"},{"Uniquefunname":"int DTabBar::insertTab(int index,const QString \u0026 text)","Funname":"DTabBar::insertTab","Returntype":"int","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"bool DTabBar::isDragable() cons)","Funname":"DTabBar::isDragable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTabBar::isMovable() cons)","Funname":"DTabBar::isMovable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTabBar::isTabEnabled(int index) cons)","Funname":"DTabBar::isTabEnabled","Returntype":"bool","Args":"int index) cons"},{"Uniquefunname":"QColor DTabBar::maskColor() cons)","Funname":"DTabBar::maskColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QSize DTabBar::maximumTabSizeHint(int index) cons)","Funname":"DTabBar::maximumTabSizeHint","Returntype":"QSize","Args":"int index) cons"},{"Uniquefunname":"QSize DTabBar::minimumTabSizeHint(int index) cons)","Funname":"DTabBar::minimumTabSizeHint","Returntype":"QSize","Args":"int index) cons"},{"Uniquefunname":"void DTabBar::moveTab(int from,int to)","Funname":"DTabBar::moveTab","Returntype":"void","Args":"int from,int to"},{"Uniquefunname":"void DTabBar::paintTab(QPainter * painter,int index,const QStyleOptionTab \u0026 option) cons)","Funname":"DTabBar::paintTab","Returntype":"void","Args":"QPainter * painter,int index,const QStyleOptionTab \u0026 option) cons"},{"Uniquefunname":"void DTabBar::removeTab(int index)","Funname":"DTabBar::removeTab","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::resizeEvent(QResizeEvent * e)","Funname":"DTabBar::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"QTabBar DTabBar::selectionBehaviorOnRemove() cons)","Funname":"DTabBar::selectionBehaviorOnRemove","Returntype":"QTabBar","Args":") cons"},{"Uniquefunname":"void DTabBar::setAutoHide(bool hide)","Funname":"DTabBar::setAutoHide","Returntype":"void","Args":"bool hide"},{"Uniquefunname":"void DTabBar::setChangeCurrentOnDrag(bool change)","Funname":"DTabBar::setChangeCurrentOnDrag","Returntype":"void","Args":"bool change"},{"Uniquefunname":"void DTabBar::setCurrentIndex(int index)","Funname":"DTabBar::setCurrentIndex","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::setDocumentMode(bool set)","Funname":"DTabBar::setDocumentMode","Returntype":"void","Args":"bool set"},{"Uniquefunname":"void DTabBar::setDragable(bool dragable)","Funname":"DTabBar::setDragable","Returntype":"void","Args":"bool dragable"},{"Uniquefunname":"void DTabBar::setDrawBase(bool drawTheBase)","Funname":"DTabBar::setDrawBase","Returntype":"void","Args":"bool drawTheBase"},{"Uniquefunname":"void DTabBar::setElideMode(Qt::TextElideMode mode)","Funname":"DTabBar::setElideMode","Returntype":"void","Args":"Qt::TextElideMode mode"},{"Uniquefunname":"void DTabBar::setEnabledEmbedStyle(bool enable)","Funname":"DTabBar::setEnabledEmbedStyle","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DTabBar::setExpanding(bool enabled)","Funname":"DTabBar::setExpanding","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void DTabBar::setFlashColor(QColor flashColor)","Funname":"DTabBar::setFlashColor","Returntype":"void","Args":"QColor flashColor"},{"Uniquefunname":"void DTabBar::setIconSize(const QSize \u0026 size)","Funname":"DTabBar::setIconSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"void DTabBar::setMaskColor(QColor maskColor)","Funname":"DTabBar::setMaskColor","Returntype":"void","Args":"QColor maskColor"},{"Uniquefunname":"void DTabBar::setMovable(bool movable)","Funname":"DTabBar::setMovable","Returntype":"void","Args":"bool movable"},{"Uniquefunname":"void DTabBar::setSelectionBehaviorOnRemove(QTabBar::SelectionBehavior behavior)","Funname":"DTabBar::setSelectionBehaviorOnRemove","Returntype":"void","Args":"QTabBar::SelectionBehavior behavior"},{"Uniquefunname":"void DTabBar::setShape(QTabBar::Shape shape)","Funname":"DTabBar::setShape","Returntype":"void","Args":"QTabBar::Shape shape"},{"Uniquefunname":"void DTabBar::setStartDragDistance(int startDragDistance)","Funname":"DTabBar::setStartDragDistance","Returntype":"void","Args":"int startDragDistance"},{"Uniquefunname":"void DTabBar::setTabButton(int index,QTabBar::ButtonPosition position,QWidget * widget)","Funname":"DTabBar::setTabButton","Returntype":"void","Args":"int index,QTabBar::ButtonPosition position,QWidget * widget"},{"Uniquefunname":"void DTabBar::setTabData(int index,const QVariant \u0026 data)","Funname":"DTabBar::setTabData","Returntype":"void","Args":"int index,const QVariant \u0026 data"},{"Uniquefunname":"void DTabBar::setTabEnabled(int index,bool)","Funname":"DTabBar::setTabEnabled","Returntype":"void","Args":"int index,bool"},{"Uniquefunname":"void DTabBar::setTabIcon(int index,const QIcon \u0026 icon)","Funname":"DTabBar::setTabIcon","Returntype":"void","Args":"int index,const QIcon \u0026 icon"},{"Uniquefunname":"void DTabBar::setTabLabelAlignment(Qt::Alignment alignment)","Funname":"DTabBar::setTabLabelAlignment","Returntype":"void","Args":"Qt::Alignment alignment"},{"Uniquefunname":"void DTabBar::setTabMaximumSize(int index,const QSize \u0026 size)","Funname":"DTabBar::setTabMaximumSize","Returntype":"void","Args":"int index,const QSize \u0026 size"},{"Uniquefunname":"void DTabBar::setTabMinimumSize(int index,const QSize \u0026 size)","Funname":"DTabBar::setTabMinimumSize","Returntype":"void","Args":"int index,const QSize \u0026 size"},{"Uniquefunname":"void DTabBar::setTabText(int index,const QString \u0026 text)","Funname":"DTabBar::setTabText","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"void DTabBar::setTabToolTip(int index,const QString \u0026 tip)","Funname":"DTabBar::setTabToolTip","Returntype":"void","Args":"int index,const QString \u0026 tip"},{"Uniquefunname":"void DTabBar::setTabWhatsThis(int index,const QString \u0026 text)","Funname":"DTabBar::setTabWhatsThis","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"void DTabBar::setTabsClosable(bool closable)","Funname":"DTabBar::setTabsClosable","Returntype":"void","Args":"bool closable"},{"Uniquefunname":"void DTabBar::setUsesScrollButtons(bool useButtons)","Funname":"DTabBar::setUsesScrollButtons","Returntype":"void","Args":"bool useButtons"},{"Uniquefunname":"void DTabBar::setVisibleAddButton(bool visibleAddButton)","Funname":"DTabBar::setVisibleAddButton","Returntype":"void","Args":"bool visibleAddButton"},{"Uniquefunname":"QTabBar DTabBar::shape() cons)","Funname":"DTabBar::shape","Returntype":"QTabBar","Args":") cons"},{"Uniquefunname":"void DTabBar::startDrag(int index)","Funname":"DTabBar::startDrag","Returntype":"void","Args":"int index"},{"Uniquefunname":"int DTabBar::startDragDistance() cons)","Funname":"DTabBar::startDragDistance","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DTabBar::startTabFlash(int index)","Funname":"DTabBar::startTabFlash","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::stopDrag(Qt::DropAction action)","Funname":"DTabBar::stopDrag","Returntype":"void","Args":"Qt::DropAction action"},{"Uniquefunname":"void DTabBar::tabAddRequested()","Funname":"DTabBar::tabAddRequested","Returntype":"void","Args":""},{"Uniquefunname":"int DTabBar::tabAt(const QPoint \u0026 pos) cons)","Funname":"DTabBar::tabAt","Returntype":"int","Args":"const QPoint \u0026 pos) cons"},{"Uniquefunname":"void DTabBar::tabBarClicked(int index)","Funname":"DTabBar::tabBarClicked","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::tabBarDoubleClicked(int index)","Funname":"DTabBar::tabBarDoubleClicked","Returntype":"void","Args":"int index"},{"Uniquefunname":"QWidget * DTabBar::tabButton(int index,QTabBar::ButtonPosition position) cons)","Funname":"DTabBar::tabButton","Returntype":"QWidget *","Args":"int index,QTabBar::ButtonPosition position) cons"},{"Uniquefunname":"void DTabBar::tabCloseRequested(int index)","Funname":"DTabBar::tabCloseRequested","Returntype":"void","Args":"int index"},{"Uniquefunname":"QVariant DTabBar::tabData(int index) cons)","Funname":"DTabBar::tabData","Returntype":"QVariant","Args":"int index) cons"},{"Uniquefunname":"void DTabBar::tabDroped(int index,Qt::DropAction action,QObject * target)","Funname":"DTabBar::tabDroped","Returntype":"void","Args":"int index,Qt::DropAction action,QObject * target"},{"Uniquefunname":"QIcon DTabBar::tabIcon(int index) cons)","Funname":"DTabBar::tabIcon","Returntype":"QIcon","Args":"int index) cons"},{"Uniquefunname":"void DTabBar::tabInserted(int index)","Funname":"DTabBar::tabInserted","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::tabIsInserted(int index)","Funname":"DTabBar::tabIsInserted","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::tabIsRemoved(int index)","Funname":"DTabBar::tabIsRemoved","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::tabLayoutChange()","Funname":"DTabBar::tabLayoutChange","Returntype":"void","Args":""},{"Uniquefunname":"void DTabBar::tabMoved(int from,int to)","Funname":"DTabBar::tabMoved","Returntype":"void","Args":"int from,int to"},{"Uniquefunname":"QRect DTabBar::tabRect(int index) cons)","Funname":"DTabBar::tabRect","Returntype":"QRect","Args":"int index) cons"},{"Uniquefunname":"void DTabBar::tabReleaseRequested(int index)","Funname":"DTabBar::tabReleaseRequested","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DTabBar::tabRemoved(int index)","Funname":"DTabBar::tabRemoved","Returntype":"void","Args":"int index"},{"Uniquefunname":"QSize DTabBar::tabSizeHint(int index) cons)","Funname":"DTabBar::tabSizeHint","Returntype":"QSize","Args":"int index) cons"},{"Uniquefunname":"QString DTabBar::tabText(int index) cons)","Funname":"DTabBar::tabText","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"QString DTabBar::tabToolTip(int index) cons)","Funname":"DTabBar::tabToolTip","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"QString DTabBar::tabWhatsThis(int index) cons)","Funname":"DTabBar::tabWhatsThis","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"bool DTabBar::tabsClosable() cons)","Funname":"DTabBar::tabsClosable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTabBar::usesScrollButtons() cons)","Funname":"DTabBar::usesScrollButtons","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTabBar::visibleAddButton() cons)","Funname":"DTabBar::visibleAddButton","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int addTab(const QIcon \u0026 icon,const QString \u0026 text)","Funname":"addTab","Returntype":"int","Args":"const QIcon \u0026 icon,const QString \u0026 text"},{"Uniquefunname":"int addTab(const QString \u0026 text)","Funname":"addTab","Returntype":"int","Args":"const QString \u0026 text"},{"Uniquefunname":"bool autoHide() cons)","Funname":"autoHide","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool canInsertFromMimeData(int index,const QMimeData * source) cons)","Funname":"canInsertFromMimeData","Returntype":"bool","Args":"int index,const QMimeData * source) cons"},{"Uniquefunname":"bool changeCurrentOnDrag() cons)","Funname":"changeCurrentOnDrag","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int count() cons)","Funname":"count","Returntype":"int","Args":") cons"},{"Uniquefunname":"QPixmap createDragPixmapFromTab(int index,const QStyleOptionTab \u0026 option,QPoint * hotspot) cons)","Funname":"createDragPixmapFromTab","Returntype":"QPixmap","Args":"int index,const QStyleOptionTab \u0026 option,QPoint * hotspot) cons"},{"Uniquefunname":"QMimeData * createMimeDataFromTab(int index,const QStyleOptionTab \u0026 option) cons)","Funname":"createMimeDataFromTab","Returntype":"QMimeData *","Args":"int index,const QStyleOptionTab \u0026 option) cons"},{"Uniquefunname":"int currentIndex() cons)","Funname":"currentIndex","Returntype":"int","Args":") cons"},{"Uniquefunname":"DTabBarPrivate * d_func()","Funname":"d_func","Returntype":"DTabBarPrivate *","Args":""},{"Uniquefunname":"const DTabBarPrivate * d_func() cons)","Funname":"d_func","Returntype":"const DTabBarPrivate *","Args":") cons"},{"Uniquefunname":"bool documentMode() cons)","Funname":"documentMode","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void dragActionChanged(Qt::DropAction action)","Funname":"dragActionChanged","Returntype":"void","Args":"Qt::DropAction action"},{"Uniquefunname":"void dragEnd(Qt::DropAction action)","Funname":"dragEnd","Returntype":"void","Args":"Qt::DropAction action"},{"Uniquefunname":"void dragEnterEvent(QDragEnterEvent * e)","Funname":"dragEnterEvent","Returntype":"void","Args":"QDragEnterEvent * e"},{"Uniquefunname":"QWindow * dragIconWindow() cons)","Funname":"dragIconWindow","Returntype":"QWindow *","Args":") cons"},{"Uniquefunname":"void dragLeaveEvent(QDragLeaveEvent * e)","Funname":"dragLeaveEvent","Returntype":"void","Args":"QDragLeaveEvent * e"},{"Uniquefunname":"void dragMoveEvent(QDragMoveEvent * e)","Funname":"dragMoveEvent","Returntype":"void","Args":"QDragMoveEvent * e"},{"Uniquefunname":"void dragStarted()","Funname":"dragStarted","Returntype":"void","Args":""},{"Uniquefunname":"bool drawBase() cons)","Funname":"drawBase","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void dropEvent(QDropEvent * e)","Funname":"dropEvent","Returntype":"void","Args":"QDropEvent * e"},{"Uniquefunname":"Qt elideMode() cons)","Funname":"elideMode","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"bool expanding() cons)","Funname":"expanding","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QColor flashColor() cons)","Funname":"flashColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QSize iconSize() cons)","Funname":"iconSize","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void insertFromMimeData(int index,const QMimeData * source)","Funname":"insertFromMimeData","Returntype":"void","Args":"int index,const QMimeData * source"},{"Uniquefunname":"void insertFromMimeDataOnDragEnter(int index,const QMimeData * source)","Funname":"insertFromMimeDataOnDragEnter","Returntype":"void","Args":"int index,const QMimeData * source"},{"Uniquefunname":"int insertTab(int index,const QIcon \u0026 icon,const QString \u0026 text)","Funname":"insertTab","Returntype":"int","Args":"int index,const QIcon \u0026 icon,const QString \u0026 text"},{"Uniquefunname":"int insertTab(int index,const QString \u0026 text)","Funname":"insertTab","Returntype":"int","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"bool isDragable() cons)","Funname":"isDragable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isMovable() cons)","Funname":"isMovable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isTabEnabled(int index) cons)","Funname":"isTabEnabled","Returntype":"bool","Args":"int index) cons"},{"Uniquefunname":"QColor maskColor() cons)","Funname":"maskColor","Returntype":"QColor","Args":") cons"},{"Uniquefunname":"QSize maximumTabSizeHint(int index) cons)","Funname":"maximumTabSizeHint","Returntype":"QSize","Args":"int index) cons"},{"Uniquefunname":"QSize minimumTabSizeHint(int index) cons)","Funname":"minimumTabSizeHint","Returntype":"QSize","Args":"int index) cons"},{"Uniquefunname":"void moveTab(int from,int to)","Funname":"moveTab","Returntype":"void","Args":"int from,int to"},{"Uniquefunname":"void paintTab(QPainter * painter,int index,const QStyleOptionTab \u0026 option) cons)","Funname":"paintTab","Returntype":"void","Args":"QPainter * painter,int index,const QStyleOptionTab \u0026 option) cons"},{"Uniquefunname":"void removeTab(int index)","Funname":"removeTab","Returntype":"void","Args":"int index"},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"QTabBar selectionBehaviorOnRemove() cons)","Funname":"selectionBehaviorOnRemove","Returntype":"QTabBar","Args":") cons"},{"Uniquefunname":"void setAutoHide(bool hide)","Funname":"setAutoHide","Returntype":"void","Args":"bool hide"},{"Uniquefunname":"void setChangeCurrentOnDrag(bool change)","Funname":"setChangeCurrentOnDrag","Returntype":"void","Args":"bool change"},{"Uniquefunname":"void setCurrentIndex(int index)","Funname":"setCurrentIndex","Returntype":"void","Args":"int index"},{"Uniquefunname":"void setDocumentMode(bool set)","Funname":"setDocumentMode","Returntype":"void","Args":"bool set"},{"Uniquefunname":"void setDragable(bool dragable)","Funname":"setDragable","Returntype":"void","Args":"bool dragable"},{"Uniquefunname":"void setDrawBase(bool drawTheBase)","Funname":"setDrawBase","Returntype":"void","Args":"bool drawTheBase"},{"Uniquefunname":"void setElideMode(Qt::TextElideMode mode)","Funname":"setElideMode","Returntype":"void","Args":"Qt::TextElideMode mode"},{"Uniquefunname":"void setEnabledEmbedStyle(bool enable)","Funname":"setEnabledEmbedStyle","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setExpanding(bool enabled)","Funname":"setExpanding","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setFlashColor(QColor flashColor)","Funname":"setFlashColor","Returntype":"void","Args":"QColor flashColor"},{"Uniquefunname":"void setIconSize(const QSize \u0026 size)","Funname":"setIconSize","Returntype":"void","Args":"const QSize \u0026 size"},{"Uniquefunname":"void setMaskColor(QColor maskColor)","Funname":"setMaskColor","Returntype":"void","Args":"QColor maskColor"},{"Uniquefunname":"void setMovable(bool movable)","Funname":"setMovable","Returntype":"void","Args":"bool movable"},{"Uniquefunname":"void setSelectionBehaviorOnRemove(QTabBar::SelectionBehavior behavior)","Funname":"setSelectionBehaviorOnRemove","Returntype":"void","Args":"QTabBar::SelectionBehavior behavior"},{"Uniquefunname":"void setShape(QTabBar::Shape shape)","Funname":"setShape","Returntype":"void","Args":"QTabBar::Shape shape"},{"Uniquefunname":"void setStartDragDistance(int startDragDistance)","Funname":"setStartDragDistance","Returntype":"void","Args":"int startDragDistance"},{"Uniquefunname":"void setTabButton(int index,QTabBar::ButtonPosition position,QWidget * widget)","Funname":"setTabButton","Returntype":"void","Args":"int index,QTabBar::ButtonPosition position,QWidget * widget"},{"Uniquefunname":"void setTabData(int index,const QVariant \u0026 data)","Funname":"setTabData","Returntype":"void","Args":"int index,const QVariant \u0026 data"},{"Uniquefunname":"void setTabEnabled(int index,bool)","Funname":"setTabEnabled","Returntype":"void","Args":"int index,bool"},{"Uniquefunname":"void setTabIcon(int index,const QIcon \u0026 icon)","Funname":"setTabIcon","Returntype":"void","Args":"int index,const QIcon \u0026 icon"},{"Uniquefunname":"void setTabLabelAlignment(Qt::Alignment alignment)","Funname":"setTabLabelAlignment","Returntype":"void","Args":"Qt::Alignment alignment"},{"Uniquefunname":"void setTabMaximumSize(int index,const QSize \u0026 size)","Funname":"setTabMaximumSize","Returntype":"void","Args":"int index,const QSize \u0026 size"},{"Uniquefunname":"void setTabMinimumSize(int index,const QSize \u0026 size)","Funname":"setTabMinimumSize","Returntype":"void","Args":"int index,const QSize \u0026 size"},{"Uniquefunname":"void setTabText(int index,const QString \u0026 text)","Funname":"setTabText","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"void setTabToolTip(int index,const QString \u0026 tip)","Funname":"setTabToolTip","Returntype":"void","Args":"int index,const QString \u0026 tip"},{"Uniquefunname":"void setTabWhatsThis(int index,const QString \u0026 text)","Funname":"setTabWhatsThis","Returntype":"void","Args":"int index,const QString \u0026 text"},{"Uniquefunname":"void setTabsClosable(bool closable)","Funname":"setTabsClosable","Returntype":"void","Args":"bool closable"},{"Uniquefunname":"void setUsesScrollButtons(bool useButtons)","Funname":"setUsesScrollButtons","Returntype":"void","Args":"bool useButtons"},{"Uniquefunname":"void setVisibleAddButton(bool visibleAddButton)","Funname":"setVisibleAddButton","Returntype":"void","Args":"bool visibleAddButton"},{"Uniquefunname":"QTabBar shape() cons)","Funname":"shape","Returntype":"QTabBar","Args":") cons"},{"Uniquefunname":"void startDrag(int index)","Funname":"startDrag","Returntype":"void","Args":"int index"},{"Uniquefunname":"int startDragDistance() cons)","Funname":"startDragDistance","Returntype":"int","Args":") cons"},{"Uniquefunname":"void startTabFlash(int index)","Funname":"startTabFlash","Returntype":"void","Args":"int index"},{"Uniquefunname":"void stopDrag(Qt::DropAction action)","Funname":"stopDrag","Returntype":"void","Args":"Qt::DropAction action"},{"Uniquefunname":"void tabAddRequested()","Funname":"tabAddRequested","Returntype":"void","Args":""},{"Uniquefunname":"int tabAt(const QPoint \u0026 pos) cons)","Funname":"tabAt","Returntype":"int","Args":"const QPoint \u0026 pos) cons"},{"Uniquefunname":"void tabBarClicked(int index)","Funname":"tabBarClicked","Returntype":"void","Args":"int index"},{"Uniquefunname":"void tabBarDoubleClicked(int index)","Funname":"tabBarDoubleClicked","Returntype":"void","Args":"int index"},{"Uniquefunname":"QWidget * tabButton(int index,QTabBar::ButtonPosition position) cons)","Funname":"tabButton","Returntype":"QWidget *","Args":"int index,QTabBar::ButtonPosition position) cons"},{"Uniquefunname":"void tabCloseRequested(int index)","Funname":"tabCloseRequested","Returntype":"void","Args":"int index"},{"Uniquefunname":"QVariant tabData(int index) cons)","Funname":"tabData","Returntype":"QVariant","Args":"int index) cons"},{"Uniquefunname":"void tabDroped(int index,Qt::DropAction action,QObject * target)","Funname":"tabDroped","Returntype":"void","Args":"int index,Qt::DropAction action,QObject * target"},{"Uniquefunname":"QIcon tabIcon(int index) cons)","Funname":"tabIcon","Returntype":"QIcon","Args":"int index) cons"},{"Uniquefunname":"void tabInserted(int index)","Funname":"tabInserted","Returntype":"void","Args":"int index"},{"Uniquefunname":"void tabIsInserted(int index)","Funname":"tabIsInserted","Returntype":"void","Args":"int index"},{"Uniquefunname":"void tabIsRemoved(int index)","Funname":"tabIsRemoved","Returntype":"void","Args":"int index"},{"Uniquefunname":"void tabLayoutChange()","Funname":"tabLayoutChange","Returntype":"void","Args":""},{"Uniquefunname":"void tabMoved(int from,int to)","Funname":"tabMoved","Returntype":"void","Args":"int from,int to"},{"Uniquefunname":"QRect tabRect(int index) cons)","Funname":"tabRect","Returntype":"QRect","Args":"int index) cons"},{"Uniquefunname":"void tabReleaseRequested(int index)","Funname":"tabReleaseRequested","Returntype":"void","Args":"int index"},{"Uniquefunname":"void tabRemoved(int index)","Funname":"tabRemoved","Returntype":"void","Args":"int index"},{"Uniquefunname":"QSize tabSizeHint(int index) cons)","Funname":"tabSizeHint","Returntype":"QSize","Args":"int index) cons"},{"Uniquefunname":"QString tabText(int index) cons)","Funname":"tabText","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"QString tabToolTip(int index) cons)","Funname":"tabToolTip","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"QString tabWhatsThis(int index) cons)","Funname":"tabWhatsThis","Returntype":"QString","Args":"int index) cons"},{"Uniquefunname":"bool tabsClosable() cons)","Funname":"tabsClosable","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool usesScrollButtons() cons)","Funname":"usesScrollButtons","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool visibleAddButton() cons)","Funname":"visibleAddButton","Returntype":"bool","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DTABBAR_H"]}]}
{"Filepath":"src/widgets/dtabletwindowoptionbutton.h","Functions":[{"Uniquefunname":" DTabletWindowOptionButton(QWidget * parent=0)","Funname":"DTabletWindowOptionButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DTabletWindowOptionButton::DTabletWindowOptionButton(QWidget * parent=0)","Funname":"DTabletWindowOptionButton::DTabletWindowOptionButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DTabletWindowOptionButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DTabletWindowOptionButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize DTabletWindowOptionButton::sizeHint() cons)","Funname":"DTabletWindowOptionButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DTABLETWINDOWOPTIONBUTTON_H"]}]}
{"Filepath":"src/widgets/dtextedit.h","Functions":[{"Uniquefunname":" DTextEdit(QWidget * parent=nullptr)","Funname":"DTextEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTextEdit(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DTextEdit","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":" DTextEdit::DTextEdit(QWidget * parent=nullptr)","Funname":"DTextEdit::DTextEdit","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DTextEdit::DTextEdit(const QString \u0026 text,QWidget * parent=nullptr)","Funname":"DTextEdit::DTextEdit","Returntype":"","Args":"const QString \u0026 text,QWidget * parent=nullptr"},{"Uniquefunname":"void DTextEdit::contextMenuEvent(QContextMenuEvent * e)","Funname":"DTextEdit::contextMenuEvent","Returntype":"void","Args":"QContextMenuEvent * e"},{"Uniquefunname":"bool DTextEdit::event(QEvent * e)","Funname":"DTextEdit::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"void DTextEdit::keyPressEvent(QKeyEvent * e)","Funname":"DTextEdit::keyPressEvent","Returntype":"void","Args":"QKeyEvent * e"},{"Uniquefunname":"void DTextEdit::setSpeechToTextEnabled(bool enable)","Funname":"DTextEdit::setSpeechToTextEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DTextEdit::setTextToSpeechEnabled(bool enable)","Funname":"DTextEdit::setTextToSpeechEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void DTextEdit::setTextToTranslateEnabled(bool enable)","Funname":"DTextEdit::setTextToTranslateEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"bool DTextEdit::speechToTextIsEnabled() cons)","Funname":"DTextEdit::speechToTextIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTextEdit::textToSpeechIsEnabled() cons)","Funname":"DTextEdit::textToSpeechIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTextEdit::textToTranslateIsEnabled() cons)","Funname":"DTextEdit::textToTranslateIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void contextMenuEvent(QContextMenuEvent * e)","Funname":"contextMenuEvent","Returntype":"void","Args":"QContextMenuEvent * e"},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * e)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * e"},{"Uniquefunname":"void setSpeechToTextEnabled(bool enable)","Funname":"setSpeechToTextEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setTextToSpeechEnabled(bool enable)","Funname":"setTextToSpeechEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"void setTextToTranslateEnabled(bool enable)","Funname":"setTextToTranslateEnabled","Returntype":"void","Args":"bool enable"},{"Uniquefunname":"bool speechToTextIsEnabled() cons)","Funname":"speechToTextIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool textToSpeechIsEnabled() cons)","Funname":"textToSpeechIsEnabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool textToTranslateIsEnabled() cons)","Funname":"textToTranslateIsEnabled","Returntype":"bool","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DTEXTEDIT_H"]}]}
{"Filepath":"src/widgets/dthememanager.h","Functions":[{"Uniquefunname":" DThemeManager()","Funname":"DThemeManager","Returntype":"","Args":""},{"Uniquefunname":" DThemeManager::DThemeManager()","Funname":"DThemeManager::DThemeManager","Returntype":"","Args":""},{"Uniquefunname":"bool DThemeManager::eventFilter(QObject * watched,QEvent * event)","Funname":"DThemeManager::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"QString DThemeManager::getQssForWidget(const QString className,const QString \u0026 theme=QString ()) cons)","Funname":"DThemeManager::getQssForWidget","Returntype":"QString","Args":"const QString className,const QString \u0026 theme=QString ()) cons"},{"Uniquefunname":"QString DThemeManager::getQssForWidget(const QWidget * widget) cons)","Funname":"DThemeManager::getQssForWidget","Returntype":"QString","Args":"const QWidget * widget) cons"},{"Uniquefunname":"DThemeManager * DThemeManager::instance()","Funname":"DThemeManager::instance","Returntype":"DThemeManager *","Args":""},{"Uniquefunname":"void DThemeManager::registerWidget(QWidget * widget,QStringList properties=QStringList ())","Funname":"DThemeManager::registerWidget","Returntype":"void","Args":"QWidget * widget,QStringList properties=QStringList ()"},{"Uniquefunname":"void DThemeManager::registerWidget(QWidget * widget,const QString \u0026 filename,const QStringList \u0026 properties=QStringList ())","Funname":"DThemeManager::registerWidget","Returntype":"void","Args":"QWidget * widget,const QString \u0026 filename,const QStringList \u0026 properties=QStringList ()"},{"Uniquefunname":"void DThemeManager::setTheme(QWidget * widget,const QString theme)","Funname":"DThemeManager::setTheme","Returntype":"void","Args":"QWidget * widget,const QString theme"},{"Uniquefunname":"void DThemeManager::setTheme(const QString theme)","Funname":"DThemeManager::setTheme","Returntype":"void","Args":"const QString theme"},{"Uniquefunname":"QString DThemeManager::theme() cons)","Funname":"DThemeManager::theme","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString DThemeManager::theme(const QWidget * widget,QWidget ** baseWidget=nullptr) cons)","Funname":"DThemeManager::theme","Returntype":"QString","Args":"const QWidget * widget,QWidget ** baseWidget=nullptr) cons"},{"Uniquefunname":"void DThemeManager::updateQss()","Funname":"DThemeManager::updateQss","Returntype":"void","Args":""},{"Uniquefunname":"void DThemeManager::updateThemeOnParentChanged(QWidget * widget)","Funname":"DThemeManager::updateThemeOnParentChanged","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void DThemeManager::widgetThemeChanged(QWidget * widget,QString theme)","Funname":"DThemeManager::widgetThemeChanged","Returntype":"void","Args":"QWidget * widget,QString theme"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"QString getQssForWidget(const QString className,const QString \u0026 theme=QString ()) cons)","Funname":"getQssForWidget","Returntype":"QString","Args":"const QString className,const QString \u0026 theme=QString ()) cons"},{"Uniquefunname":"QString getQssForWidget(const QWidget * widget) cons)","Funname":"getQssForWidget","Returntype":"QString","Args":"const QWidget * widget) cons"},{"Uniquefunname":"DThemeManager * instance()","Funname":"instance","Returntype":"DThemeManager *","Args":""},{"Uniquefunname":"void registerWidget(QWidget * widget,QStringList properties=QStringList ())","Funname":"registerWidget","Returntype":"void","Args":"QWidget * widget,QStringList properties=QStringList ()"},{"Uniquefunname":"void registerWidget(QWidget * widget,const QString \u0026 filename,const QStringList \u0026 properties=QStringList ())","Funname":"registerWidget","Returntype":"void","Args":"QWidget * widget,const QString \u0026 filename,const QStringList \u0026 properties=QStringList ()"},{"Uniquefunname":"void setTheme(QWidget * widget,const QString theme)","Funname":"setTheme","Returntype":"void","Args":"QWidget * widget,const QString theme"},{"Uniquefunname":"void setTheme(const QString theme)","Funname":"setTheme","Returntype":"void","Args":"const QString theme"},{"Uniquefunname":"QString theme() cons)","Funname":"theme","Returntype":"QString","Args":") cons"},{"Uniquefunname":"QString theme(const QWidget * widget,QWidget ** baseWidget=nullptr) cons)","Funname":"theme","Returntype":"QString","Args":"const QWidget * widget,QWidget ** baseWidget=nullptr) cons"},{"Uniquefunname":"void updateQss()","Funname":"updateQss","Returntype":"void","Args":""},{"Uniquefunname":"void updateThemeOnParentChanged(QWidget * widget)","Funname":"updateThemeOnParentChanged","Returntype":"void","Args":"QWidget * widget"},{"Uniquefunname":"void widgetThemeChanged(QWidget * widget,QString theme)","Funname":"widgetThemeChanged","Returntype":"void","Args":"QWidget * widget,QString theme"}],"Records":[{"Name":"macro","Fields":["DTHEMEMANAGER_H"]}]}
{"Filepath":"src/widgets/dtickeffect.h","Functions":[{"Uniquefunname":" DTickEffect(QWidget * widget,QWidget * parent=0)","Funname":"DTickEffect","Returntype":"","Args":"QWidget * widget,QWidget * parent=0"},{"Uniquefunname":" DTickEffect::DTickEffect(QWidget * widget,QWidget * parent=0)","Funname":"DTickEffect::DTickEffect","Returntype":"","Args":"QWidget * widget,QWidget * parent=0"},{"Uniquefunname":"void DTickEffect::draw(QPainter * painter)","Funname":"DTickEffect::draw","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"bool DTickEffect::eventFilter(QObject * watched,QEvent * event)","Funname":"DTickEffect::eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void DTickEffect::pause()","Funname":"DTickEffect::pause","Returntype":"void","Args":""},{"Uniquefunname":"void DTickEffect::play()","Funname":"DTickEffect::play","Returntype":"void","Args":""},{"Uniquefunname":"void DTickEffect::resume()","Funname":"DTickEffect::resume","Returntype":"void","Args":""},{"Uniquefunname":"void DTickEffect::setDirection(Direction direction)","Funname":"DTickEffect::setDirection","Returntype":"void","Args":"Direction direction"},{"Uniquefunname":"void DTickEffect::setFixedPixelMove(const int pixel)","Funname":"DTickEffect::setFixedPixelMove","Returntype":"void","Args":"const int pixel"},{"Uniquefunname":"void DTickEffect::stateChanged()","Funname":"DTickEffect::stateChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DTickEffect::stop()","Funname":"DTickEffect::stop","Returntype":"void","Args":""},{"Uniquefunname":"void draw(QPainter * painter)","Funname":"draw","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"bool eventFilter(QObject * watched,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * watched,QEvent * event"},{"Uniquefunname":"void pause()","Funname":"pause","Returntype":"void","Args":""},{"Uniquefunname":"void play()","Funname":"play","Returntype":"void","Args":""},{"Uniquefunname":"void resume()","Funname":"resume","Returntype":"void","Args":""},{"Uniquefunname":"void setDirection(Direction direction)","Funname":"setDirection","Returntype":"void","Args":"Direction direction"},{"Uniquefunname":"void setFixedPixelMove(const int pixel)","Funname":"setFixedPixelMove","Returntype":"void","Args":"const int pixel"},{"Uniquefunname":"void stateChanged()","Funname":"stateChanged","Returntype":"void","Args":""},{"Uniquefunname":"void stop()","Funname":"stop","Returntype":"void","Args":""}],"Records":[{"Name":"enum:DTickEffect::Direction","Fields":["BottomToTop","DTickEffect::BottomToTop","DTickEffect::LeftToRight","DTickEffect::RightToLeft","DTickEffect::TopToBottom","LeftToRight","RightToLeft","TopToBottom"]},{"Name":"macro","Fields":["DTICKEFFECT_H"]}]}
{"Filepath":"src/widgets/dtiplabel.h","Functions":[{"Uniquefunname":" DTipLabel(const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DTipLabel","Returntype":"","Args":"const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":" DTipLabel::DTipLabel(const QString \u0026 text=QString (),QWidget * parent=nullptr)","Funname":"DTipLabel::DTipLabel","Returntype":"","Args":"const QString \u0026 text=QString (),QWidget * parent=nullptr"},{"Uniquefunname":"void DTipLabel::initPainter(QPainter * painter) cons)","Funname":"DTipLabel::initPainter","Returntype":"void","Args":"QPainter * painter) cons"},{"Uniquefunname":"void DTipLabel::paintEvent(QPaintEvent * event)","Funname":"DTipLabel::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DTipLabel::setForegroundRole(DPalette::ColorType color)","Funname":"DTipLabel::setForegroundRole","Returntype":"void","Args":"DPalette::ColorType color"},{"Uniquefunname":"void DTipLabel::show(const QPoint \u0026 pos)","Funname":"DTipLabel::show","Returntype":"void","Args":"const QPoint \u0026 pos"},{"Uniquefunname":" DTipLabel::~DTipLabel()","Funname":"DTipLabel::~DTipLabel","Returntype":"","Args":""},{"Uniquefunname":"void initPainter(QPainter * painter) cons)","Funname":"initPainter","Returntype":"void","Args":"QPainter * painter) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setForegroundRole(DPalette::ColorType color)","Funname":"setForegroundRole","Returntype":"void","Args":"DPalette::ColorType color"},{"Uniquefunname":"void show(const QPoint \u0026 pos)","Funname":"show","Returntype":"void","Args":"const QPoint \u0026 pos"},{"Uniquefunname":" ~DTipLabel()","Funname":"~DTipLabel","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DTIPLABEL_H"]}]}
{"Filepath":"src/widgets/dtitlebar.h","Functions":[{"Uniquefunname":" DTitlebar(QWidget * parent=Q_NULLPTR)","Funname":"DTitlebar","Returntype":"","Args":"QWidget * parent=Q_NULLPTR"},{"Uniquefunname":" DTitlebar::DTitlebar(QWidget * parent=Q_NULLPTR)","Funname":"DTitlebar::DTitlebar","Returntype":"","Args":"QWidget * parent=Q_NULLPTR"},{"Uniquefunname":"void DTitlebar::addWidget(QWidget * w,Qt::Alignment alignment=Qt::Alignment ())","Funname":"DTitlebar::addWidget","Returntype":"void","Args":"QWidget * w,Qt::Alignment alignment=Qt::Alignment ()"},{"Uniquefunname":"bool DTitlebar::autoHideOnFullscreen() cons)","Funname":"DTitlebar::autoHideOnFullscreen","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTitlebar::blurBackground() cons)","Funname":"DTitlebar::blurBackground","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int DTitlebar::buttonAreaWidth() cons)","Funname":"DTitlebar::buttonAreaWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"QWidget * DTitlebar::customWidget() cons)","Funname":"DTitlebar::customWidget","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"Qt DTitlebar::disableFlags() cons)","Funname":"DTitlebar::disableFlags","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DTitlebar::doubleClicked()","Funname":"DTitlebar::doubleClicked","Returntype":"void","Args":""},{"Uniquefunname":"bool DTitlebar::event(QEvent * e)","Funname":"DTitlebar::event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"bool DTitlebar::eventFilter(QObject * obj,QEvent * event)","Funname":"DTitlebar::eventFilter","Returntype":"bool","Args":"QObject * obj,QEvent * event"},{"Uniquefunname":"QMenu * DTitlebar::menu() cons)","Funname":"DTitlebar::menu","Returntype":"QMenu *","Args":") cons"},{"Uniquefunname":"bool DTitlebar::menuIsDisabled() cons)","Funname":"DTitlebar::menuIsDisabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DTitlebar::menuIsVisible() cons)","Funname":"DTitlebar::menuIsVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QSize DTitlebar::minimumSizeHint() cons)","Funname":"DTitlebar::minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void DTitlebar::mouseDoubleClickEvent(QMouseEvent * event)","Funname":"DTitlebar::mouseDoubleClickEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DTitlebar::mouseMoveEvent(QMouseEvent * event)","Funname":"DTitlebar::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DTitlebar::mouseMoving(Qt::MouseButton button)","Funname":"DTitlebar::mouseMoving","Returntype":"void","Args":"Qt::MouseButton button"},{"Uniquefunname":"void DTitlebar::mousePosMoving(Qt::MouseButton button,QPoint pos)","Funname":"DTitlebar::mousePosMoving","Returntype":"void","Args":"Qt::MouseButton button,QPoint pos"},{"Uniquefunname":"void DTitlebar::mousePosPressed(Qt::MouseButtons buttons,QPoint pos)","Funname":"DTitlebar::mousePosPressed","Returntype":"void","Args":"Qt::MouseButtons buttons,QPoint pos"},{"Uniquefunname":"void DTitlebar::mousePressEvent(QMouseEvent * event)","Funname":"DTitlebar::mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void DTitlebar::mousePressed(Qt::MouseButtons buttons)","Funname":"DTitlebar::mousePressed","Returntype":"void","Args":"Qt::MouseButtons buttons"},{"Uniquefunname":"void DTitlebar::mouseReleaseEvent(QMouseEvent * event)","Funname":"DTitlebar::mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"bool DTitlebar::quitMenuIsDisabled() cons)","Funname":"DTitlebar::quitMenuIsDisabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DTitlebar::removeWidget(QWidget * w)","Funname":"DTitlebar::removeWidget","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"void DTitlebar::resizeEvent(QResizeEvent * event)","Funname":"DTitlebar::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"bool DTitlebar::separatorVisible() cons)","Funname":"DTitlebar::separatorVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DTitlebar::setAutoHideOnFullscreen(bool autohide)","Funname":"DTitlebar::setAutoHideOnFullscreen","Returntype":"void","Args":"bool autohide"},{"Uniquefunname":"void DTitlebar::setBackgroundTransparent(bool transparent)","Funname":"DTitlebar::setBackgroundTransparent","Returntype":"void","Args":"bool transparent"},{"Uniquefunname":"void DTitlebar::setBlurBackground(bool blurBackground)","Funname":"DTitlebar::setBlurBackground","Returntype":"void","Args":"bool blurBackground"},{"Uniquefunname":"void DTitlebar::setCustomWidget(QWidget *,bool fixCenterPos=false)","Funname":"DTitlebar::setCustomWidget","Returntype":"void","Args":"QWidget *,bool fixCenterPos=false"},{"Uniquefunname":"void DTitlebar::setDisableFlags(Qt::WindowFlags flags)","Funname":"DTitlebar::setDisableFlags","Returntype":"void","Args":"Qt::WindowFlags flags"},{"Uniquefunname":"void DTitlebar::setEmbedMode(bool embed)","Funname":"DTitlebar::setEmbedMode","Returntype":"void","Args":"bool embed"},{"Uniquefunname":"void DTitlebar::setFixedHeight(int h)","Funname":"DTitlebar::setFixedHeight","Returntype":"void","Args":"int h"},{"Uniquefunname":"void DTitlebar::setFullScreenButtonVisible(bool enabled)","Funname":"DTitlebar::setFullScreenButtonVisible","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void DTitlebar::setIcon(const QIcon \u0026 icon)","Funname":"DTitlebar::setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void DTitlebar::setMenu(QMenu * menu)","Funname":"DTitlebar::setMenu","Returntype":"void","Args":"QMenu * menu"},{"Uniquefunname":"void DTitlebar::setMenuDisabled(bool disabled)","Funname":"DTitlebar::setMenuDisabled","Returntype":"void","Args":"bool disabled"},{"Uniquefunname":"void DTitlebar::setMenuVisible(bool visible)","Funname":"DTitlebar::setMenuVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DTitlebar::setQuitMenuDisabled(bool disabled)","Funname":"DTitlebar::setQuitMenuDisabled","Returntype":"void","Args":"bool disabled"},{"Uniquefunname":"void DTitlebar::setQuitMenuVisible(bool visible)","Funname":"DTitlebar::setQuitMenuVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DTitlebar::setSeparatorVisible(bool visible)","Funname":"DTitlebar::setSeparatorVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DTitlebar::setSwitchThemeMenuVisible(bool visible)","Funname":"DTitlebar::setSwitchThemeMenuVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DTitlebar::setTitle(const QString \u0026 title)","Funname":"DTitlebar::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"void DTitlebar::setVisible(bool visible)","Funname":"DTitlebar::setVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DTitlebar::showEvent(QShowEvent * event)","Funname":"DTitlebar::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"void DTitlebar::showMenu()","Funname":"DTitlebar::showMenu","Returntype":"void","Args":""},{"Uniquefunname":"QSize DTitlebar::sizeHint() cons)","Funname":"DTitlebar::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"bool DTitlebar::switchThemeMenuIsVisible() cons)","Funname":"DTitlebar::switchThemeMenuIsVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DTitlebar::toggleWindowState()","Funname":"DTitlebar::toggleWindowState","Returntype":"void","Args":""},{"Uniquefunname":"void addWidget(QWidget * w,Qt::Alignment alignment=Qt::Alignment ())","Funname":"addWidget","Returntype":"void","Args":"QWidget * w,Qt::Alignment alignment=Qt::Alignment ()"},{"Uniquefunname":"bool autoHideOnFullscreen() cons)","Funname":"autoHideOnFullscreen","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool blurBackground() cons)","Funname":"blurBackground","Returntype":"bool","Args":") cons"},{"Uniquefunname":"int buttonAreaWidth() cons)","Funname":"buttonAreaWidth","Returntype":"int","Args":") cons"},{"Uniquefunname":"QWidget * customWidget() cons)","Funname":"customWidget","Returntype":"QWidget *","Args":") cons"},{"Uniquefunname":"Qt disableFlags() cons)","Funname":"disableFlags","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void doubleClicked()","Funname":"doubleClicked","Returntype":"void","Args":""},{"Uniquefunname":"bool event(QEvent * e)","Funname":"event","Returntype":"bool","Args":"QEvent * e"},{"Uniquefunname":"bool eventFilter(QObject * obj,QEvent * event)","Funname":"eventFilter","Returntype":"bool","Args":"QObject * obj,QEvent * event"},{"Uniquefunname":"QMenu * menu() cons)","Funname":"menu","Returntype":"QMenu *","Args":") cons"},{"Uniquefunname":"bool menuIsDisabled() cons)","Funname":"menuIsDisabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool menuIsVisible() cons)","Funname":"menuIsVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"QSize minimumSizeHint() cons)","Funname":"minimumSizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void mouseDoubleClickEvent(QMouseEvent * event)","Funname":"mouseDoubleClickEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mouseMoving(Qt::MouseButton button)","Funname":"mouseMoving","Returntype":"void","Args":"Qt::MouseButton button"},{"Uniquefunname":"void mousePosMoving(Qt::MouseButton button,QPoint pos)","Funname":"mousePosMoving","Returntype":"void","Args":"Qt::MouseButton button,QPoint pos"},{"Uniquefunname":"void mousePosPressed(Qt::MouseButtons buttons,QPoint pos)","Funname":"mousePosPressed","Returntype":"void","Args":"Qt::MouseButtons buttons,QPoint pos"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mousePressed(Qt::MouseButtons buttons)","Funname":"mousePressed","Returntype":"void","Args":"Qt::MouseButtons buttons"},{"Uniquefunname":"void mouseReleaseEvent(QMouseEvent * event)","Funname":"mouseReleaseEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"bool quitMenuIsDisabled() cons)","Funname":"quitMenuIsDisabled","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void removeWidget(QWidget * w)","Funname":"removeWidget","Returntype":"void","Args":"QWidget * w"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"bool separatorVisible() cons)","Funname":"separatorVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void setAutoHideOnFullscreen(bool autohide)","Funname":"setAutoHideOnFullscreen","Returntype":"void","Args":"bool autohide"},{"Uniquefunname":"void setBackgroundTransparent(bool transparent)","Funname":"setBackgroundTransparent","Returntype":"void","Args":"bool transparent"},{"Uniquefunname":"void setBlurBackground(bool blurBackground)","Funname":"setBlurBackground","Returntype":"void","Args":"bool blurBackground"},{"Uniquefunname":"void setCustomWidget(QWidget *,bool fixCenterPos=false)","Funname":"setCustomWidget","Returntype":"void","Args":"QWidget *,bool fixCenterPos=false"},{"Uniquefunname":"void setDisableFlags(Qt::WindowFlags flags)","Funname":"setDisableFlags","Returntype":"void","Args":"Qt::WindowFlags flags"},{"Uniquefunname":"void setEmbedMode(bool embed)","Funname":"setEmbedMode","Returntype":"void","Args":"bool embed"},{"Uniquefunname":"void setFixedHeight(int h)","Funname":"setFixedHeight","Returntype":"void","Args":"int h"},{"Uniquefunname":"void setFullScreenButtonVisible(bool enabled)","Funname":"setFullScreenButtonVisible","Returntype":"void","Args":"bool enabled"},{"Uniquefunname":"void setIcon(const QIcon \u0026 icon)","Funname":"setIcon","Returntype":"void","Args":"const QIcon \u0026 icon"},{"Uniquefunname":"void setMenu(QMenu * menu)","Funname":"setMenu","Returntype":"void","Args":"QMenu * menu"},{"Uniquefunname":"void setMenuDisabled(bool disabled)","Funname":"setMenuDisabled","Returntype":"void","Args":"bool disabled"},{"Uniquefunname":"void setMenuVisible(bool visible)","Funname":"setMenuVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setQuitMenuDisabled(bool disabled)","Funname":"setQuitMenuDisabled","Returntype":"void","Args":"bool disabled"},{"Uniquefunname":"void setQuitMenuVisible(bool visible)","Funname":"setQuitMenuVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setSeparatorVisible(bool visible)","Funname":"setSeparatorVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setSwitchThemeMenuVisible(bool visible)","Funname":"setSwitchThemeMenuVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":"void setVisible(bool visible)","Funname":"setVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"void showMenu()","Funname":"showMenu","Returntype":"void","Args":""},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"bool switchThemeMenuIsVisible() cons)","Funname":"switchThemeMenuIsVisible","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void toggleWindowState()","Funname":"toggleWindowState","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DTITLEBAR_H"]}]}
{"Filepath":"src/widgets/dtoast.h","Functions":[{"Uniquefunname":" DToast(QWidget * parent=0)","Funname":"DToast","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DToast::DToast(QWidget * parent=0)","Funname":"DToast::DToast","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"int DToast::duration() cons)","Funname":"DToast::duration","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DToast::hideEvent(QHideEvent * event)","Funname":"DToast::hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"QIcon DToast::icon() cons)","Funname":"DToast::icon","Returntype":"QIcon","Args":") cons"},{"Uniquefunname":"qreal DToast::opacity() cons)","Funname":"DToast::opacity","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void DToast::pack()","Funname":"DToast::pack","Returntype":"void","Args":""},{"Uniquefunname":"void DToast::pop()","Funname":"DToast::pop","Returntype":"void","Args":""},{"Uniquefunname":"void DToast::setDuration(int duration)","Funname":"DToast::setDuration","Returntype":"void","Args":"int duration"},{"Uniquefunname":"void DToast::setIcon(QIcon icon,QSize defaultSize=QSize (20,20))","Funname":"DToast::setIcon","Returntype":"void","Args":"QIcon icon,QSize defaultSize=QSize (20,20)"},{"Uniquefunname":"void DToast::setIcon(QString icon)","Funname":"DToast::setIcon","Returntype":"void","Args":"QString icon"},{"Uniquefunname":"void DToast::setOpacity(qreal)","Funname":"DToast::setOpacity","Returntype":"void","Args":"qreal"},{"Uniquefunname":"void DToast::setText(QString text)","Funname":"DToast::setText","Returntype":"void","Args":"QString text"},{"Uniquefunname":"void DToast::showEvent(QShowEvent * event)","Funname":"DToast::showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QString DToast::text() cons)","Funname":"DToast::text","Returntype":"QString","Args":") cons"},{"Uniquefunname":" DToast::~DToast()","Funname":"DToast::~DToast","Returntype":"","Args":""},{"Uniquefunname":"int duration() cons)","Funname":"duration","Returntype":"int","Args":") cons"},{"Uniquefunname":"void hideEvent(QHideEvent * event)","Funname":"hideEvent","Returntype":"void","Args":"QHideEvent * event"},{"Uniquefunname":"QIcon icon() cons)","Funname":"icon","Returntype":"QIcon","Args":") cons"},{"Uniquefunname":"qreal opacity() cons)","Funname":"opacity","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void pack()","Funname":"pack","Returntype":"void","Args":""},{"Uniquefunname":"void pop()","Funname":"pop","Returntype":"void","Args":""},{"Uniquefunname":"void setDuration(int duration)","Funname":"setDuration","Returntype":"void","Args":"int duration"},{"Uniquefunname":"void setIcon(QIcon icon,QSize defaultSize=QSize (20,20))","Funname":"setIcon","Returntype":"void","Args":"QIcon icon,QSize defaultSize=QSize (20,20)"},{"Uniquefunname":"void setIcon(QString icon)","Funname":"setIcon","Returntype":"void","Args":"QString icon"},{"Uniquefunname":"void setOpacity(qreal)","Funname":"setOpacity","Returntype":"void","Args":"qreal"},{"Uniquefunname":"void setText(QString text)","Funname":"setText","Returntype":"void","Args":"QString text"},{"Uniquefunname":"void showEvent(QShowEvent * event)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * event"},{"Uniquefunname":"QString text() cons)","Funname":"text","Returntype":"QString","Args":") cons"},{"Uniquefunname":" ~DToast()","Funname":"~DToast","Returntype":"","Args":""}],"Records":null}
{"Filepath":"src/widgets/dtoolbutton.h","Functions":[{"Uniquefunname":" DToolButton(QWidget * parent=nullptr)","Funname":"DToolButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DToolButton::DToolButton(QWidget * parent=nullptr)","Funname":"DToolButton::DToolButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"Qt DToolButton::alignment() cons)","Funname":"DToolButton::alignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void DToolButton::initStyleOption(QStyleOptionToolButton * option) cons)","Funname":"DToolButton::initStyleOption","Returntype":"void","Args":"QStyleOptionToolButton * option) cons"},{"Uniquefunname":"void DToolButton::paintEvent(QPaintEvent * event)","Funname":"DToolButton::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void DToolButton::setAlignment(Qt::Alignment flag)","Funname":"DToolButton::setAlignment","Returntype":"void","Args":"Qt::Alignment flag"},{"Uniquefunname":"QSize DToolButton::sizeHint() cons)","Funname":"DToolButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"Qt alignment() cons)","Funname":"alignment","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"void initStyleOption(QStyleOptionToolButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"QStyleOptionToolButton * option) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void setAlignment(Qt::Alignment flag)","Funname":"setAlignment","Returntype":"void","Args":"Qt::Alignment flag"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DTOOLBUTTON_H"]}]}
{"Filepath":"src/widgets/dtooltip.h","Functions":[{"Uniquefunname":" DToolTip(const QString \u0026 text,bool completionClose=true)","Funname":"DToolTip","Returntype":"","Args":"const QString \u0026 text,bool completionClose=true"},{"Uniquefunname":" DToolTip::DToolTip(const QString \u0026 text,bool completionClose=true)","Funname":"DToolTip::DToolTip","Returntype":"","Args":"const QString \u0026 text,bool completionClose=true"},{"Uniquefunname":"void DToolTip::show(const QPoint \u0026 pos,int duration)","Funname":"DToolTip::show","Returntype":"void","Args":"const QPoint \u0026 pos,int duration"},{"Uniquefunname":"QSize DToolTip::sizeHint() cons)","Funname":"DToolTip::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void show(const QPoint \u0026 pos,int duration)","Funname":"show","Returntype":"void","Args":"const QPoint \u0026 pos,int duration"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DTOOLTIP_H"]}]}
{"Filepath":"src/widgets/dvideowidget.h","Functions":[{"Uniquefunname":" DVideoWidget(QWidget * parent=0)","Funname":"DVideoWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DVideoWidget::DVideoWidget(QWidget * parent=0)","Funname":"DVideoWidget::DVideoWidget","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"Qt DVideoWidget::aspectRatioMode() cons)","Funname":"DVideoWidget::aspectRatioMode","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"int DVideoWidget::brightness() cons)","Funname":"DVideoWidget::brightness","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DVideoWidget::brightnessChanged(int brightness)","Funname":"DVideoWidget::brightnessChanged","Returntype":"void","Args":"int brightness"},{"Uniquefunname":"QPixmap DVideoWidget::capture()","Funname":"DVideoWidget::capture","Returntype":"QPixmap","Args":""},{"Uniquefunname":"int DVideoWidget::contrast() cons)","Funname":"DVideoWidget::contrast","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DVideoWidget::contrastChanged(int contrast)","Funname":"DVideoWidget::contrastChanged","Returntype":"void","Args":"int contrast"},{"Uniquefunname":"const QVideoFrame * DVideoWidget::currentFrame() cons)","Funname":"DVideoWidget::currentFrame","Returntype":"const QVideoFrame *","Args":") cons"},{"Uniquefunname":"int DVideoWidget::hue() cons)","Funname":"DVideoWidget::hue","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DVideoWidget::hueChanged(int hue)","Funname":"DVideoWidget::hueChanged","Returntype":"void","Args":"int hue"},{"Uniquefunname":"bool DVideoWidget::mirroredHorizontal() cons)","Funname":"DVideoWidget::mirroredHorizontal","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DVideoWidget::mirroredVertical() cons)","Funname":"DVideoWidget::mirroredVertical","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DVideoWidget::mirroredVerticalChanged(bool mirroredVertical)","Funname":"DVideoWidget::mirroredVerticalChanged","Returntype":"void","Args":"bool mirroredVertical"},{"Uniquefunname":"void DVideoWidget::paint(const QVideoFrame \u0026 frame)","Funname":"DVideoWidget::paint","Returntype":"void","Args":"const QVideoFrame \u0026 frame"},{"Uniquefunname":"void DVideoWidget::paintEvent(QPaintEvent * event)","Funname":"DVideoWidget::paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"bool DVideoWidget::round() cons)","Funname":"DVideoWidget::round","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DVideoWidget::roundChanged(bool round)","Funname":"DVideoWidget::roundChanged","Returntype":"void","Args":"bool round"},{"Uniquefunname":"int DVideoWidget::saturation() cons)","Funname":"DVideoWidget::saturation","Returntype":"int","Args":") cons"},{"Uniquefunname":"void DVideoWidget::saturationChanged(int saturation)","Funname":"DVideoWidget::saturationChanged","Returntype":"void","Args":"int saturation"},{"Uniquefunname":"qreal DVideoWidget::scale() cons)","Funname":"DVideoWidget::scale","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void DVideoWidget::scaleChanged(qreal scale)","Funname":"DVideoWidget::scaleChanged","Returntype":"void","Args":"qreal scale"},{"Uniquefunname":"void DVideoWidget::setAspectRatioMode(Qt::AspectRatioMode mode)","Funname":"DVideoWidget::setAspectRatioMode","Returntype":"void","Args":"Qt::AspectRatioMode mode"},{"Uniquefunname":"void DVideoWidget::setBrightness(int brightness)","Funname":"DVideoWidget::setBrightness","Returntype":"void","Args":"int brightness"},{"Uniquefunname":"void DVideoWidget::setContrast(int contrast)","Funname":"DVideoWidget::setContrast","Returntype":"void","Args":"int contrast"},{"Uniquefunname":"void DVideoWidget::setHue(int hue)","Funname":"DVideoWidget::setHue","Returntype":"void","Args":"int hue"},{"Uniquefunname":"void DVideoWidget::setMirroredHorizontal(bool mirroredHorizontal)","Funname":"DVideoWidget::setMirroredHorizontal","Returntype":"void","Args":"bool mirroredHorizontal"},{"Uniquefunname":"void DVideoWidget::setMirroredVertical(bool mirroredVertical)","Funname":"DVideoWidget::setMirroredVertical","Returntype":"void","Args":"bool mirroredVertical"},{"Uniquefunname":"void DVideoWidget::setRound(bool round)","Funname":"DVideoWidget::setRound","Returntype":"void","Args":"bool round"},{"Uniquefunname":"void DVideoWidget::setSaturation(int saturation)","Funname":"DVideoWidget::setSaturation","Returntype":"void","Args":"int saturation"},{"Uniquefunname":"void DVideoWidget::setScale(qreal scale)","Funname":"DVideoWidget::setScale","Returntype":"void","Args":"qreal scale"},{"Uniquefunname":"void DVideoWidget::setSource(QCamera * source)","Funname":"DVideoWidget::setSource","Returntype":"void","Args":"QCamera * source"},{"Uniquefunname":"void DVideoWidget::setSource(QMediaPlayer * source)","Funname":"DVideoWidget::setSource","Returntype":"void","Args":"QMediaPlayer * source"},{"Uniquefunname":"void DVideoWidget::setSourceVideoPixelRatio(const qreal ratio)","Funname":"DVideoWidget::setSourceVideoPixelRatio","Returntype":"void","Args":"const qreal ratio"},{"Uniquefunname":"qreal DVideoWidget::sourceVideoPixelRatio() cons)","Funname":"DVideoWidget::sourceVideoPixelRatio","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"Qt aspectRatioMode() cons)","Funname":"aspectRatioMode","Returntype":"Qt","Args":") cons"},{"Uniquefunname":"int brightness() cons)","Funname":"brightness","Returntype":"int","Args":") cons"},{"Uniquefunname":"void brightnessChanged(int brightness)","Funname":"brightnessChanged","Returntype":"void","Args":"int brightness"},{"Uniquefunname":"QPixmap capture()","Funname":"capture","Returntype":"QPixmap","Args":""},{"Uniquefunname":"int contrast() cons)","Funname":"contrast","Returntype":"int","Args":") cons"},{"Uniquefunname":"void contrastChanged(int contrast)","Funname":"contrastChanged","Returntype":"void","Args":"int contrast"},{"Uniquefunname":"const QVideoFrame * currentFrame() cons)","Funname":"currentFrame","Returntype":"const QVideoFrame *","Args":") cons"},{"Uniquefunname":"int hue() cons)","Funname":"hue","Returntype":"int","Args":") cons"},{"Uniquefunname":"void hueChanged(int hue)","Funname":"hueChanged","Returntype":"void","Args":"int hue"},{"Uniquefunname":"bool mirroredHorizontal() cons)","Funname":"mirroredHorizontal","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool mirroredVertical() cons)","Funname":"mirroredVertical","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void mirroredVerticalChanged(bool mirroredVertical)","Funname":"mirroredVerticalChanged","Returntype":"void","Args":"bool mirroredVertical"},{"Uniquefunname":"void paint(const QVideoFrame \u0026 frame)","Funname":"paint","Returntype":"void","Args":"const QVideoFrame \u0026 frame"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"bool round() cons)","Funname":"round","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void roundChanged(bool round)","Funname":"roundChanged","Returntype":"void","Args":"bool round"},{"Uniquefunname":"int saturation() cons)","Funname":"saturation","Returntype":"int","Args":") cons"},{"Uniquefunname":"void saturationChanged(int saturation)","Funname":"saturationChanged","Returntype":"void","Args":"int saturation"},{"Uniquefunname":"qreal scale() cons)","Funname":"scale","Returntype":"qreal","Args":") cons"},{"Uniquefunname":"void scaleChanged(qreal scale)","Funname":"scaleChanged","Returntype":"void","Args":"qreal scale"},{"Uniquefunname":"void setAspectRatioMode(Qt::AspectRatioMode mode)","Funname":"setAspectRatioMode","Returntype":"void","Args":"Qt::AspectRatioMode mode"},{"Uniquefunname":"void setBrightness(int brightness)","Funname":"setBrightness","Returntype":"void","Args":"int brightness"},{"Uniquefunname":"void setContrast(int contrast)","Funname":"setContrast","Returntype":"void","Args":"int contrast"},{"Uniquefunname":"void setHue(int hue)","Funname":"setHue","Returntype":"void","Args":"int hue"},{"Uniquefunname":"void setMirroredHorizontal(bool mirroredHorizontal)","Funname":"setMirroredHorizontal","Returntype":"void","Args":"bool mirroredHorizontal"},{"Uniquefunname":"void setMirroredVertical(bool mirroredVertical)","Funname":"setMirroredVertical","Returntype":"void","Args":"bool mirroredVertical"},{"Uniquefunname":"void setRound(bool round)","Funname":"setRound","Returntype":"void","Args":"bool round"},{"Uniquefunname":"void setSaturation(int saturation)","Funname":"setSaturation","Returntype":"void","Args":"int saturation"},{"Uniquefunname":"void setScale(qreal scale)","Funname":"setScale","Returntype":"void","Args":"qreal scale"},{"Uniquefunname":"void setSource(QCamera * source)","Funname":"setSource","Returntype":"void","Args":"QCamera * source"},{"Uniquefunname":"void setSource(QMediaPlayer * source)","Funname":"setSource","Returntype":"void","Args":"QMediaPlayer * source"},{"Uniquefunname":"void setSourceVideoPixelRatio(const qreal ratio)","Funname":"setSourceVideoPixelRatio","Returntype":"void","Args":"const qreal ratio"},{"Uniquefunname":"qreal sourceVideoPixelRatio() cons)","Funname":"sourceVideoPixelRatio","Returntype":"qreal","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DVIDEOWIDGET_H"]}]}
{"Filepath":"src/widgets/dwarningbutton.h","Functions":[{"Uniquefunname":" DWarningButton(QWidget * parent=nullptr)","Funname":"DWarningButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DWarningButton::DWarningButton(QWidget * parent=nullptr)","Funname":"DWarningButton::DWarningButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DWarningButton::initStyleOption(QStyleOptionButton * option) cons)","Funname":"DWarningButton::initStyleOption","Returntype":"void","Args":"QStyleOptionButton * option) cons"},{"Uniquefunname":"void DWarningButton::paintEvent(QPaintEvent * e)","Funname":"DWarningButton::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"void initStyleOption(QStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"QStyleOptionButton * option) cons"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"}],"Records":[{"Name":"macro","Fields":["DWARNINGBUTTON_H"]}]}
{"Filepath":"src/widgets/dwaterprogress.h","Functions":[{"Uniquefunname":" DWaterProgress(QWidget * parent=0)","Funname":"DWaterProgress","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DWaterProgress::DWaterProgress(QWidget * parent=0)","Funname":"DWaterProgress::DWaterProgress","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DWaterProgress::changeEvent(QEvent * e)","Funname":"DWaterProgress::changeEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"void DWaterProgress::paintEvent(QPaintEvent *)","Funname":"DWaterProgress::paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void DWaterProgress::setTextVisible(bool visible)","Funname":"DWaterProgress::setTextVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void DWaterProgress::setValue(int value)","Funname":"DWaterProgress::setValue","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DWaterProgress::start()","Funname":"DWaterProgress::start","Returntype":"void","Args":""},{"Uniquefunname":"void DWaterProgress::stop()","Funname":"DWaterProgress::stop","Returntype":"void","Args":""},{"Uniquefunname":"int DWaterProgress::value() cons)","Funname":"DWaterProgress::value","Returntype":"int","Args":") cons"},{"Uniquefunname":" DWaterProgress::~DWaterProgress()","Funname":"DWaterProgress::~DWaterProgress","Returntype":"","Args":""},{"Uniquefunname":"void changeEvent(QEvent * e)","Funname":"changeEvent","Returntype":"void","Args":"QEvent * e"},{"Uniquefunname":"void paintEvent(QPaintEvent *)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void setTextVisible(bool visible)","Funname":"setTextVisible","Returntype":"void","Args":"bool visible"},{"Uniquefunname":"void setValue(int value)","Funname":"setValue","Returntype":"void","Args":"int value"},{"Uniquefunname":"void start()","Funname":"start","Returntype":"void","Args":""},{"Uniquefunname":"void stop()","Funname":"stop","Returntype":"void","Args":""},{"Uniquefunname":"int value() cons)","Funname":"value","Returntype":"int","Args":") cons"},{"Uniquefunname":" ~DWaterProgress()","Funname":"~DWaterProgress","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DWATERPROGRESS_H"]}]}
{"Filepath":"src/widgets/dwidgetstype.h","Functions":null,"Records":[{"Name":"macro","Fields":["DWIDGETSTYPE_H"]}]}
{"Filepath":"src/widgets/dwindowclosebutton.h","Functions":[{"Uniquefunname":" DWindowCloseButton(QWidget * parent=0)","Funname":"DWindowCloseButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DWindowCloseButton::DWindowCloseButton(QWidget * parent=0)","Funname":"DWindowCloseButton::DWindowCloseButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DWindowCloseButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DWindowCloseButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize DWindowCloseButton::sizeHint() cons)","Funname":"DWindowCloseButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DWINDOWCLOSEBUTTON_H"]}]}
{"Filepath":"src/widgets/dwindowmaxbutton.h","Functions":[{"Uniquefunname":" DWindowMaxButton(QWidget * parent=0)","Funname":"DWindowMaxButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DWindowMaxButton::DWindowMaxButton(QWidget * parent=0)","Funname":"DWindowMaxButton::DWindowMaxButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"    Q_PROPERTY(bool isMaximized READ isMaximized WRITE setMaximized NOTIFY maximizedChanged)","Funname":"DWindowMaxButton::Q_PROPERTY","Returntype":"","Args":"bool isMaximized READ isMaximized WRITE setMaximized NOTIFY maximizedChanged"},{"Uniquefunname":"void DWindowMaxButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DWindowMaxButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"void DWindowMaxButton::setMaximized(bool isMaximized)","Funname":"DWindowMaxButton::setMaximized","Returntype":"void","Args":"bool isMaximized"},{"Uniquefunname":"QSize DWindowMaxButton::sizeHint() cons)","Funname":"DWindowMaxButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"    Q_PROPERTY(bool isMaximized READ isMaximized WRITE setMaximized NOTIFY maximizedChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool isMaximized READ isMaximized WRITE setMaximized NOTIFY maximizedChanged"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"void setMaximized(bool isMaximized)","Funname":"setMaximized","Returntype":"void","Args":"bool isMaximized"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DWINDOWMAXBUTTON_H"]}]}
{"Filepath":"src/widgets/dwindowminbutton.h","Functions":[{"Uniquefunname":" DWindowMinButton(QWidget * parent=0)","Funname":"DWindowMinButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DWindowMinButton::DWindowMinButton(QWidget * parent=0)","Funname":"DWindowMinButton::DWindowMinButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DWindowMinButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DWindowMinButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize DWindowMinButton::sizeHint() cons)","Funname":"DWindowMinButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DWINDOWMINBUTTON_H"]}]}
{"Filepath":"src/widgets/dwindowoptionbutton.h","Functions":[{"Uniquefunname":" DWindowOptionButton(QWidget * parent=0)","Funname":"DWindowOptionButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" DWindowOptionButton::DWindowOptionButton(QWidget * parent=0)","Funname":"DWindowOptionButton::DWindowOptionButton","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void DWindowOptionButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DWindowOptionButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize DWindowOptionButton::sizeHint() cons)","Funname":"DWindowOptionButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DWINDOWOPTIONBUTTON_H"]}]}
{"Filepath":"src/widgets/dwindowquitfullbutton.h","Functions":[{"Uniquefunname":" DWindowQuitFullButton(QWidget * parent=nullptr)","Funname":"DWindowQuitFullButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":" DWindowQuitFullButton::DWindowQuitFullButton(QWidget * parent=nullptr)","Funname":"DWindowQuitFullButton::DWindowQuitFullButton","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void DWindowQuitFullButton::initStyleOption(DStyleOptionButton * option) cons)","Funname":"DWindowQuitFullButton::initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize DWindowQuitFullButton::sizeHint() cons)","Funname":"DWindowQuitFullButton::sizeHint","Returntype":"QSize","Args":") cons"},{"Uniquefunname":"void initStyleOption(DStyleOptionButton * option) cons)","Funname":"initStyleOption","Returntype":"void","Args":"DStyleOptionButton * option) cons"},{"Uniquefunname":"QSize sizeHint() cons)","Funname":"sizeHint","Returntype":"QSize","Args":") cons"}],"Records":[{"Name":"macro","Fields":["DWINDOWQUITFULLBUTTON_H"]}]}
{"Filepath":"src/widgets/private/daboutdialog_p.h","Functions":[{"Uniquefunname":" DAboutDialogPrivate(DAboutDialog * qq)","Funname":"DAboutDialogPrivate","Returntype":"","Args":"DAboutDialog * qq"},{"Uniquefunname":" DAboutDialogPrivate::DAboutDialogPrivate(DAboutDialog * qq)","Funname":"DAboutDialogPrivate::DAboutDialogPrivate","Returntype":"","Args":"DAboutDialog * qq"},{"Uniquefunname":"void DAboutDialogPrivate::_q_onLinkActivated(const QString \u0026 link)","Funname":"DAboutDialogPrivate::_q_onLinkActivated","Returntype":"void","Args":"const QString \u0026 link"},{"Uniquefunname":"void DAboutDialogPrivate::init()","Funname":"DAboutDialogPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DAboutDialogPrivate::loadDistributionInfo()","Funname":"DAboutDialogPrivate::loadDistributionInfo","Returntype":"void","Args":""},{"Uniquefunname":"QPixmap DAboutDialogPrivate::loadPixmap(const QString \u0026 file)","Funname":"DAboutDialogPrivate::loadPixmap","Returntype":"QPixmap","Args":"const QString \u0026 file"},{"Uniquefunname":"void DAboutDialogPrivate::updateAcknowledgementLabel()","Funname":"DAboutDialogPrivate::updateAcknowledgementLabel","Returntype":"void","Args":""},{"Uniquefunname":"void DAboutDialogPrivate::updateWebsiteLabel()","Funname":"DAboutDialogPrivate::updateWebsiteLabel","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onLinkActivated(const QString \u0026 link)","Funname":"_q_onLinkActivated","Returntype":"void","Args":"const QString \u0026 link"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void loadDistributionInfo()","Funname":"loadDistributionInfo","Returntype":"void","Args":""},{"Uniquefunname":"QPixmap loadPixmap(const QString \u0026 file)","Funname":"loadPixmap","Returntype":"QPixmap","Args":"const QString \u0026 file"},{"Uniquefunname":"void updateAcknowledgementLabel()","Funname":"updateAcknowledgementLabel","Returntype":"void","Args":""},{"Uniquefunname":"void updateWebsiteLabel()","Funname":"updateWebsiteLabel","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DABOUTDIALOG_P_H"]},{"Name":"class:DAboutDialogPrivate","Fields":["QLabel * DAboutDialogPrivate::acknowledgementLabel","QString DAboutDialogPrivate::acknowledgementLink","QLabel * DAboutDialogPrivate::companyLogoLabel","QLabel * DAboutDialogPrivate::descriptionLabel","QLabel * DAboutDialogPrivate::licenseLabel","QLabel * DAboutDialogPrivate::logoLabel","QString DAboutDialogPrivate::logoPath","QLabel * DAboutDialogPrivate::productNameLabel","QLabel * DAboutDialogPrivate::versionLabel","QLabel * DAboutDialogPrivate::websiteLabel","QString DAboutDialogPrivate::websiteLink","const QString DAboutDialogPrivate::websiteLinkTemplate","QString DAboutDialogPrivate::websiteName","QPixmap DAboutDialogPrivate::windowIcon"]}]}
{"Filepath":"src/widgets/private/dabstractdialogprivate_p.h","Functions":[{"Uniquefunname":" DAbstractDialogPrivate(DAbstractDialog * qq)","Funname":"DAbstractDialogPrivate","Returntype":"","Args":"DAbstractDialog * qq"},{"Uniquefunname":" DAbstractDialogPrivate::DAbstractDialogPrivate(DAbstractDialog * qq)","Funname":"DAbstractDialogPrivate::DAbstractDialogPrivate","Returntype":"","Args":"DAbstractDialog * qq"},{"Uniquefunname":"QRect DAbstractDialogPrivate::getParentGeometry() cons)","Funname":"DAbstractDialogPrivate::getParentGeometry","Returntype":"QRect","Args":") cons"},{"Uniquefunname":"void DAbstractDialogPrivate::init(bool blurIfPossible)","Funname":"DAbstractDialogPrivate::init","Returntype":"void","Args":"bool blurIfPossible"},{"Uniquefunname":"QRect getParentGeometry() cons)","Funname":"getParentGeometry","Returntype":"QRect","Args":") cons"},{"Uniquefunname":"void init(bool blurIfPossible)","Funname":"init","Returntype":"void","Args":"bool blurIfPossible"}],"Records":[{"Name":"macro","Fields":["DABSTRACTDIALOG_P_H"]},{"Name":"class:DAbstractDialogPrivate","Fields":["DBlurEffectWidget * DAbstractDialogPrivate::bgBlurWidget","DAbstractDialog::DisplayPosition DAbstractDialogPrivate::displayPosition","QPoint DAbstractDialogPrivate::dragPosition","DPlatformWindowHandle * DAbstractDialogPrivate::handle","bool DAbstractDialogPrivate::mouseMoved","bool DAbstractDialogPrivate::mousePressed"]}]}
{"Filepath":"src/widgets/private/dalertcontrol_p.h","Functions":[{"Uniquefunname":" DAlertControlPrivate(DAlertControl * q)","Funname":"DAlertControlPrivate","Returntype":"","Args":"DAlertControl * q"},{"Uniquefunname":" DAlertControlPrivate::DAlertControlPrivate(DAlertControl * q)","Funname":"DAlertControlPrivate::DAlertControlPrivate","Returntype":"","Args":"DAlertControl * q"},{"Uniquefunname":"void DAlertControlPrivate::updateTooltipPos()","Funname":"DAlertControlPrivate::updateTooltipPos","Returntype":"void","Args":""},{"Uniquefunname":"void updateTooltipPos()","Funname":"updateTooltipPos","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DALERTCONTROL_P_H"]},{"Name":"class:DAlertControlPrivate","Fields":["QColor DAlertControlPrivate::alertColor","Qt::Alignment DAlertControlPrivate::alignment","QWidget * DAlertControlPrivate::follower","QPointer\u003cDFloatingWidget\u003e DAlertControlPrivate::frame","bool DAlertControlPrivate::isAlert","QWidget * DAlertControlPrivate::target","QTimer DAlertControlPrivate::timer","QPointer\u003cDToolTip\u003e DAlertControlPrivate::tooltip"]}]}
{"Filepath":"src/widgets/private/dapplication_p.h","Functions":[{"Uniquefunname":" DApplicationPrivate(DApplication * q)","Funname":"DApplicationPrivate","Returntype":"","Args":"DApplication * q"},{"Uniquefunname":" DApplicationPrivate::DApplicationPrivate(DApplication * q)","Funname":"DApplicationPrivate::DApplicationPrivate","Returntype":"","Args":"DApplication * q"},{"Uniquefunname":"void DApplicationPrivate::_q_onNewInstanceStarted()","Funname":"DApplicationPrivate::_q_onNewInstanceStarted","Returntype":"void","Args":""},{"Uniquefunname":"void DApplicationPrivate::_q_panWindowContentsForVirtualKeyboard()","Funname":"DApplicationPrivate::_q_panWindowContentsForVirtualKeyboard","Returntype":"void","Args":""},{"Uniquefunname":"void DApplicationPrivate::_q_resizeWindowContentsForVirtualKeyboard()","Funname":"DApplicationPrivate::_q_resizeWindowContentsForVirtualKeyboard","Returntype":"void","Args":""},{"Uniquefunname":"void DApplicationPrivate::acclimatizeVirtualKeyboardForFocusWidget(bool allowResizeContentsMargins)","Funname":"DApplicationPrivate::acclimatizeVirtualKeyboardForFocusWidget","Returntype":"void","Args":"bool allowResizeContentsMargins"},{"Uniquefunname":"void DApplicationPrivate::doAcclimatizeVirtualKeyboard(QWidget * window,QWidget * widget,bool allowResizeContentsMargins)","Funname":"DApplicationPrivate::doAcclimatizeVirtualKeyboard","Returntype":"void","Args":"QWidget * window,QWidget * widget,bool allowResizeContentsMargins"},{"Uniquefunname":"bool DApplicationPrivate::isUserManualExists()","Funname":"DApplicationPrivate::isUserManualExists","Returntype":"bool","Args":""},{"Uniquefunname":"bool DApplicationPrivate::loadDtkTranslator(QList\u003cQLocale\u003e localeFallback)","Funname":"DApplicationPrivate::loadDtkTranslator","Returntype":"bool","Args":"QList\u003cQLocale\u003e localeFallback"},{"Uniquefunname":"bool DApplicationPrivate::loadTranslator(QList\u003cDPathBuf\u003e translateDirs,const QString \u0026 name,QList\u003cQLocale\u003e localeFallback)","Funname":"DApplicationPrivate::loadTranslator","Returntype":"bool","Args":"QList\u003cDPathBuf\u003e translateDirs,const QString \u0026 name,QList\u003cQLocale\u003e localeFallback"},{"Uniquefunname":"bool DApplicationPrivate::setSingleInstanceByDbus(const QString \u0026 key)","Funname":"DApplicationPrivate::setSingleInstanceByDbus","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"bool DApplicationPrivate::setSingleInstanceBySemaphore(const QString \u0026 key)","Funname":"DApplicationPrivate::setSingleInstanceBySemaphore","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"D_DECL_DEPRECATED void DApplicationPrivate::setTheme(const QString \u0026 theme)","Funname":"DApplicationPrivate::setTheme","Returntype":"D_DECL_DEPRECATED void","Args":"const QString \u0026 theme"},{"Uniquefunname":"D_DECL_DEPRECATED QString DApplicationPrivate::theme() cons)","Funname":"DApplicationPrivate::theme","Returntype":"D_DECL_DEPRECATED QString","Args":") cons"},{"Uniquefunname":" DApplicationPrivate::~DApplicationPrivate()","Funname":"DApplicationPrivate::~DApplicationPrivate","Returntype":"","Args":""},{"Uniquefunname":"void _q_onNewInstanceStarted()","Funname":"_q_onNewInstanceStarted","Returntype":"void","Args":""},{"Uniquefunname":"void _q_panWindowContentsForVirtualKeyboard()","Funname":"_q_panWindowContentsForVirtualKeyboard","Returntype":"void","Args":""},{"Uniquefunname":"void _q_resizeWindowContentsForVirtualKeyboard()","Funname":"_q_resizeWindowContentsForVirtualKeyboard","Returntype":"void","Args":""},{"Uniquefunname":"void acclimatizeVirtualKeyboardForFocusWidget(bool allowResizeContentsMargins)","Funname":"acclimatizeVirtualKeyboardForFocusWidget","Returntype":"void","Args":"bool allowResizeContentsMargins"},{"Uniquefunname":"void doAcclimatizeVirtualKeyboard(QWidget * window,QWidget * widget,bool allowResizeContentsMargins)","Funname":"doAcclimatizeVirtualKeyboard","Returntype":"void","Args":"QWidget * window,QWidget * widget,bool allowResizeContentsMargins"},{"Uniquefunname":"bool isUserManualExists()","Funname":"isUserManualExists","Returntype":"bool","Args":""},{"Uniquefunname":"bool loadDtkTranslator(QList\u003cQLocale\u003e localeFallback)","Funname":"loadDtkTranslator","Returntype":"bool","Args":"QList\u003cQLocale\u003e localeFallback"},{"Uniquefunname":"bool loadTranslator(QList\u003cDPathBuf\u003e translateDirs,const QString \u0026 name,QList\u003cQLocale\u003e localeFallback)","Funname":"loadTranslator","Returntype":"bool","Args":"QList\u003cDPathBuf\u003e translateDirs,const QString \u0026 name,QList\u003cQLocale\u003e localeFallback"},{"Uniquefunname":"bool setSingleInstanceByDbus(const QString \u0026 key)","Funname":"setSingleInstanceByDbus","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"bool setSingleInstanceBySemaphore(const QString \u0026 key)","Funname":"setSingleInstanceBySemaphore","Returntype":"bool","Args":"const QString \u0026 key"},{"Uniquefunname":"D_DECL_DEPRECATED void setTheme(const QString \u0026 theme)","Funname":"setTheme","Returntype":"D_DECL_DEPRECATED void","Args":"const QString \u0026 theme"},{"Uniquefunname":"D_DECL_DEPRECATED QString theme() cons)","Funname":"theme","Returntype":"D_DECL_DEPRECATED QString","Args":") cons"},{"Uniquefunname":" ~DApplicationPrivate()","Funname":"~DApplicationPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DAPPLICATION_P_H"]},{"Name":"class:DApplicationPrivate","Fields":["DAboutDialog * DApplicationPrivate::aboutDialog","QList\u003cQWidget * \u003e DApplicationPrivate::acclimatizeVirtualKeyboardWindows","QString DApplicationPrivate::acknowledgementPage","bool DApplicationPrivate::acknowledgementPageVisible","QPointer\u003cQWidget\u003e DApplicationPrivate::activeInputWindow","QMargins DApplicationPrivate::activeInputWindowContentsMargins","QString DApplicationPrivate::appDescription","QString DApplicationPrivate::appLicense","bool DApplicationPrivate::autoActivateWindows","QString DApplicationPrivate::homePage","QPair\u003cint,int\u003e DApplicationPrivate::lastContentsMargins","QLocalServer * DApplicationPrivate::m_localServer","QStringList DApplicationPrivate::m_monitoredStartupApps","QIcon DApplicationPrivate::productIcon","QString DApplicationPrivate::productName","bool DApplicationPrivate::visibleMenuCheckboxWidget","bool DApplicationPrivate::visibleMenuIcon","bool DApplicationPrivate::visibleMenuShortcutText"]}]}
{"Filepath":"src/widgets/private/darrowrectangle_p.h","Functions":[{"Uniquefunname":" DArrowRectanglePrivate(DArrowRectangle::ArrowDirection direction,DArrowRectangle * q)","Funname":"DArrowRectanglePrivate","Returntype":"","Args":"DArrowRectangle::ArrowDirection direction,DArrowRectangle * q"},{"Uniquefunname":" DArrowRectanglePrivate::DArrowRectanglePrivate(DArrowRectangle::ArrowDirection direction,DArrowRectangle * q)","Funname":"DArrowRectanglePrivate::DArrowRectanglePrivate","Returntype":"","Args":"DArrowRectangle::ArrowDirection direction,DArrowRectangle * q"},{"Uniquefunname":"const QRect DArrowRectanglePrivate::currentScreenRect(const int x,const int y)","Funname":"DArrowRectanglePrivate::currentScreenRect","Returntype":"const QRect","Args":"const int x,const int y"},{"Uniquefunname":"QPainterPath DArrowRectanglePrivate::getBottomCornerPath()","Funname":"DArrowRectanglePrivate::getBottomCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"QPainterPath DArrowRectanglePrivate::getLeftCornerPath()","Funname":"DArrowRectanglePrivate::getLeftCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"QPainterPath DArrowRectanglePrivate::getRightCornerPath()","Funname":"DArrowRectanglePrivate::getRightCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"QPainterPath DArrowRectanglePrivate::getTopCornerPath()","Funname":"DArrowRectanglePrivate::getTopCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"void DArrowRectanglePrivate::horizontalMove(int x,int y)","Funname":"DArrowRectanglePrivate::horizontalMove","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void DArrowRectanglePrivate::init(DArrowRectangle::FloatMode floatMode)","Funname":"DArrowRectanglePrivate::init","Returntype":"void","Args":"DArrowRectangle::FloatMode floatMode"},{"Uniquefunname":"void DArrowRectanglePrivate::paintEvent(QPaintEvent * e)","Funname":"DArrowRectanglePrivate::paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"bool DArrowRectanglePrivate::radiusEnabled()","Funname":"DArrowRectanglePrivate::radiusEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"void DArrowRectanglePrivate::resizeEvent(QResizeEvent * e)","Funname":"DArrowRectanglePrivate::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void DArrowRectanglePrivate::resizeWithContent()","Funname":"DArrowRectanglePrivate::resizeWithContent","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowRectanglePrivate::setContent(QWidget * content)","Funname":"DArrowRectanglePrivate::setContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void DArrowRectanglePrivate::show(int x,int y)","Funname":"DArrowRectanglePrivate::show","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void DArrowRectanglePrivate::updateClipPath()","Funname":"DArrowRectanglePrivate::updateClipPath","Returntype":"void","Args":""},{"Uniquefunname":"void DArrowRectanglePrivate::verticalMove(int x,int y)","Funname":"DArrowRectanglePrivate::verticalMove","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"const QRect currentScreenRect(const int x,const int y)","Funname":"currentScreenRect","Returntype":"const QRect","Args":"const int x,const int y"},{"Uniquefunname":"QPainterPath getBottomCornerPath()","Funname":"getBottomCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"QPainterPath getLeftCornerPath()","Funname":"getLeftCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"QPainterPath getRightCornerPath()","Funname":"getRightCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"QPainterPath getTopCornerPath()","Funname":"getTopCornerPath","Returntype":"QPainterPath","Args":""},{"Uniquefunname":"void horizontalMove(int x,int y)","Funname":"horizontalMove","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void init(DArrowRectangle::FloatMode floatMode)","Funname":"init","Returntype":"void","Args":"DArrowRectangle::FloatMode floatMode"},{"Uniquefunname":"void paintEvent(QPaintEvent * e)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * e"},{"Uniquefunname":"bool radiusEnabled()","Funname":"radiusEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void resizeWithContent()","Funname":"resizeWithContent","Returntype":"void","Args":""},{"Uniquefunname":"void setContent(QWidget * content)","Funname":"setContent","Returntype":"void","Args":"QWidget * content"},{"Uniquefunname":"void show(int x,int y)","Funname":"show","Returntype":"void","Args":"int x,int y"},{"Uniquefunname":"void updateClipPath()","Funname":"updateClipPath","Returntype":"void","Args":""},{"Uniquefunname":"void verticalMove(int x,int y)","Funname":"verticalMove","Returntype":"void","Args":"int x,int y"}],"Records":[{"Name":"macro","Fields":["DARROWRECTANGLE_P_H"]},{"Name":"class:DArrowRectanglePrivate","Fields":["DArrowRectangle::FloatMode DArrowRectanglePrivate::floatMode","bool DArrowRectanglePrivate::leftRightRadius","DArrowRectangle::ArrowDirection DArrowRectanglePrivate::m_arrowDirection","int DArrowRectanglePrivate::m_arrowHeight","int DArrowRectanglePrivate::m_arrowWidth","int DArrowRectanglePrivate::m_arrowX","int DArrowRectanglePrivate::m_arrowY","QColor DArrowRectanglePrivate::m_backgroundColor","DBlurEffectWidget * DArrowRectanglePrivate::m_blurBackground","QColor DArrowRectanglePrivate::m_borderColor","int DArrowRectanglePrivate::m_borderWidth","QPointer\u003cQWidget\u003e DArrowRectanglePrivate::m_content","DPlatformWindowHandle * DArrowRectanglePrivate::m_handle","QPoint DArrowRectanglePrivate::m_lastPos","int DArrowRectanglePrivate::m_margin","int DArrowRectanglePrivate::m_radius","qreal DArrowRectanglePrivate::m_shadowBlurRadius","qreal DArrowRectanglePrivate::m_shadowDistance","int DArrowRectanglePrivate::m_shadowWidth","qreal DArrowRectanglePrivate::m_shadowXOffset","qreal DArrowRectanglePrivate::m_shadowYOffset","DWindowManagerHelper * DArrowRectanglePrivate::m_wmHelper","bool DArrowRectanglePrivate::radiusArrowStyleEnable"]}]}
{"Filepath":"src/widgets/private/dblureffectwidget_p.h","Functions":[{"Uniquefunname":" DBlurEffectWidgetPrivate(DBlurEffectWidget * qq)","Funname":"DBlurEffectWidgetPrivate","Returntype":"","Args":"DBlurEffectWidget * qq"},{"Uniquefunname":" DBlurEffectWidgetPrivate::DBlurEffectWidgetPrivate(DBlurEffectWidget * qq)","Funname":"DBlurEffectWidgetPrivate::DBlurEffectWidgetPrivate","Returntype":"","Args":"DBlurEffectWidget * qq"},{"Uniquefunname":"void DBlurEffectWidgetPrivate::addToBlurEffectWidgetHash()","Funname":"DBlurEffectWidgetPrivate::addToBlurEffectWidgetHash","Returntype":"void","Args":""},{"Uniquefunname":"QColor DBlurEffectWidgetPrivate::getMaskColor(const QColor \u0026 baseColor) cons)","Funname":"DBlurEffectWidgetPrivate::getMaskColor","Returntype":"QColor","Args":"const QColor \u0026 baseColor) cons"},{"Uniquefunname":"quint8 DBlurEffectWidgetPrivate::getMaskColorAlpha() cons)","Funname":"DBlurEffectWidgetPrivate::getMaskColorAlpha","Returntype":"quint8","Args":") cons"},{"Uniquefunname":"bool DBlurEffectWidgetPrivate::isBehindWindowBlendMode() cons)","Funname":"DBlurEffectWidgetPrivate::isBehindWindowBlendMode","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool DBlurEffectWidgetPrivate::isFull() cons)","Funname":"DBlurEffectWidgetPrivate::isFull","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void DBlurEffectWidgetPrivate::removeFromBlurEffectWidgetHash()","Funname":"DBlurEffectWidgetPrivate::removeFromBlurEffectWidgetHash","Returntype":"void","Args":""},{"Uniquefunname":"void DBlurEffectWidgetPrivate::resetSourceImage()","Funname":"DBlurEffectWidgetPrivate::resetSourceImage","Returntype":"void","Args":""},{"Uniquefunname":"void DBlurEffectWidgetPrivate::setMaskAlpha(const quint8 alpha)","Funname":"DBlurEffectWidgetPrivate::setMaskAlpha","Returntype":"void","Args":"const quint8 alpha"},{"Uniquefunname":"void DBlurEffectWidgetPrivate::setMaskColor(const QColor \u0026 color)","Funname":"DBlurEffectWidgetPrivate::setMaskColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"bool DBlurEffectWidgetPrivate::updateWindowBlurArea()","Funname":"DBlurEffectWidgetPrivate::updateWindowBlurArea","Returntype":"bool","Args":""},{"Uniquefunname":"bool DBlurEffectWidgetPrivate::updateWindowBlurArea(QWidget * topLevelWidget)","Funname":"DBlurEffectWidgetPrivate::updateWindowBlurArea","Returntype":"bool","Args":"QWidget * topLevelWidget"},{"Uniquefunname":"void addToBlurEffectWidgetHash()","Funname":"addToBlurEffectWidgetHash","Returntype":"void","Args":""},{"Uniquefunname":"QColor getMaskColor(const QColor \u0026 baseColor) cons)","Funname":"getMaskColor","Returntype":"QColor","Args":"const QColor \u0026 baseColor) cons"},{"Uniquefunname":"quint8 getMaskColorAlpha() cons)","Funname":"getMaskColorAlpha","Returntype":"quint8","Args":") cons"},{"Uniquefunname":"bool isBehindWindowBlendMode() cons)","Funname":"isBehindWindowBlendMode","Returntype":"bool","Args":") cons"},{"Uniquefunname":"bool isFull() cons)","Funname":"isFull","Returntype":"bool","Args":") cons"},{"Uniquefunname":"void removeFromBlurEffectWidgetHash()","Funname":"removeFromBlurEffectWidgetHash","Returntype":"void","Args":""},{"Uniquefunname":"void resetSourceImage()","Funname":"resetSourceImage","Returntype":"void","Args":""},{"Uniquefunname":"void setMaskAlpha(const quint8 alpha)","Funname":"setMaskAlpha","Returntype":"void","Args":"const quint8 alpha"},{"Uniquefunname":"void setMaskColor(const QColor \u0026 color)","Funname":"setMaskColor","Returntype":"void","Args":"const QColor \u0026 color"},{"Uniquefunname":"bool updateWindowBlurArea()","Funname":"updateWindowBlurArea","Returntype":"bool","Args":""},{"Uniquefunname":"bool updateWindowBlurArea(QWidget * topLevelWidget)","Funname":"updateWindowBlurArea","Returntype":"bool","Args":"QWidget * topLevelWidget"}],"Records":[{"Name":"macro","Fields":["DBLUREFFECTWIDGET_P_H"]},{"Name":"class:DBlurEffectWidgetPrivate","Fields":["bool DBlurEffectWidgetPrivate::autoScaleSourceImage","DBlurEffectWidget::BlendMode DBlurEffectWidgetPrivate::blendMode","QMultiHash\u003cQWidget *,const DBlurEffectWidget * \u003e DBlurEffectWidgetPrivate::blurEffectWidgetHash","bool DBlurEffectWidgetPrivate::blurEnabled","int DBlurEffectWidgetPrivate::blurRectXRadius","int DBlurEffectWidgetPrivate::blurRectYRadius","bool DBlurEffectWidgetPrivate::customSourceImage","bool DBlurEffectWidgetPrivate::full","DBlurEffectGroup * DBlurEffectWidgetPrivate::group","qint16 DBlurEffectWidgetPrivate::maskAlpha","QColor DBlurEffectWidgetPrivate::maskColor","DBlurEffectWidget::MaskColorType DBlurEffectWidgetPrivate::maskColorType","QPainterPath DBlurEffectWidgetPrivate::maskPath","DBlurEffectWidget::BlurMode DBlurEffectWidgetPrivate::mode","int DBlurEffectWidgetPrivate::radius","QImage DBlurEffectWidgetPrivate::sourceImage","QHash\u003cconst DBlurEffectWidget *,QWidget * \u003e DBlurEffectWidgetPrivate::windowOfBlurEffectHash"]}]}
{"Filepath":"src/widgets/private/dboxwidget_p.h","Functions":[{"Uniquefunname":" DBoxWidgetPrivate(DBoxWidget * qq)","Funname":"DBoxWidgetPrivate","Returntype":"","Args":"DBoxWidget * qq"},{"Uniquefunname":" DBoxWidgetPrivate::DBoxWidgetPrivate(DBoxWidget * qq)","Funname":"DBoxWidgetPrivate::DBoxWidgetPrivate","Returntype":"","Args":"DBoxWidget * qq"},{"Uniquefunname":"void DBoxWidgetPrivate::init()","Funname":"DBoxWidgetPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DBOXWIDGET_P_H"]},{"Name":"class:DBoxWidgetPrivate","Fields":["QBoxLayout * DBoxWidgetPrivate::layout"]}]}
{"Filepath":"src/widgets/private/dbuttonbox_p.h","Functions":[{"Uniquefunname":" DButtonBoxPrivate(DButtonBox * qq)","Funname":"DButtonBoxPrivate","Returntype":"","Args":"DButtonBox * qq"},{"Uniquefunname":" DButtonBoxPrivate::DButtonBoxPrivate(DButtonBox * qq)","Funname":"DButtonBoxPrivate::DButtonBoxPrivate","Returntype":"","Args":"DButtonBox * qq"},{"Uniquefunname":"DStyleOptionButtonBoxButton DButtonBoxPrivate::getButtonPosition(const DButtonBoxButton * button) cons)","Funname":"DButtonBoxPrivate::getButtonPosition","Returntype":"DStyleOptionButtonBoxButton","Args":"const DButtonBoxButton * button) cons"},{"Uniquefunname":"void DButtonBoxPrivate::init()","Funname":"DButtonBoxPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"DStyleOptionButtonBoxButton getButtonPosition(const DButtonBoxButton * button) cons)","Funname":"getButtonPosition","Returntype":"DStyleOptionButtonBoxButton","Args":"const DButtonBoxButton * button) cons"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DBUTTONBOX_P_H"]},{"Name":"class:DButtonBoxPrivate","Fields":["QButtonGroup * DButtonBoxPrivate::group","QBoxLayout * DButtonBoxPrivate::layout"]}]}
{"Filepath":"src/widgets/private/dcircleprogress_p.h","Functions":[{"Uniquefunname":" DCircleProgressPrivate(DCircleProgress * q)","Funname":"DCircleProgressPrivate","Returntype":"","Args":"DCircleProgress * q"},{"Uniquefunname":" DCircleProgressPrivate::DCircleProgressPrivate(DCircleProgress * q)","Funname":"DCircleProgressPrivate::DCircleProgressPrivate","Returntype":"","Args":"DCircleProgress * q"},{"Uniquefunname":"void DCircleProgressPrivate::paint(QPainter * painter)","Funname":"DCircleProgressPrivate::paint","Returntype":"void","Args":"QPainter * painter"},{"Uniquefunname":"void paint(QPainter * painter)","Funname":"paint","Returntype":"void","Args":"QPainter * painter"}],"Records":[{"Name":"macro","Fields":["DCIRCLEPROGRESS_P_H"]},{"Name":"class:DCircleProgressPrivate","Fields":["QColor DCircleProgressPrivate::m_backgroundColor","QLabel DCircleProgressPrivate::m_bottomLabel","QColor DCircleProgressPrivate::m_chunkColor","int DCircleProgressPrivate::m_currentValue","int DCircleProgressPrivate::m_lineWidth","int DCircleProgressPrivate::m_maximumValue","int DCircleProgressPrivate::m_minmumValue","QLabel DCircleProgressPrivate::m_topLabel"]}]}
{"Filepath":"src/widgets/private/ddialog_p.h","Functions":[{"Uniquefunname":" DDialogPrivate(DDialog * qq)","Funname":"DDialogPrivate","Returntype":"","Args":"DDialog * qq"},{"Uniquefunname":" DDialogPrivate::DDialogPrivate(DDialog * qq)","Funname":"DDialogPrivate::DDialogPrivate","Returntype":"","Args":"DDialog * qq"},{"Uniquefunname":"void DDialogPrivate::_q_defaultButtonTriggered()","Funname":"DDialogPrivate::_q_defaultButtonTriggered","Returntype":"void","Args":""},{"Uniquefunname":"void DDialogPrivate::_q_onButtonClicked()","Funname":"DDialogPrivate::_q_onButtonClicked","Returntype":"void","Args":""},{"Uniquefunname":"QString DDialogPrivate::elideString(QString str,const QFontMetrics \u0026 fm,int width) cons)","Funname":"DDialogPrivate::elideString","Returntype":"QString","Args":"QString str,const QFontMetrics \u0026 fm,int width) cons"},{"Uniquefunname":"QBoxLayout * DDialogPrivate::getContentLayout()","Funname":"DDialogPrivate::getContentLayout","Returntype":"QBoxLayout *","Args":""},{"Uniquefunname":"const QScreen * DDialogPrivate::getScreen() cons)","Funname":"DDialogPrivate::getScreen","Returntype":"const QScreen *","Args":") cons"},{"Uniquefunname":"void DDialogPrivate::init()","Funname":"DDialogPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"QMap\u003cint,QString\u003e DDialogPrivate::scanTags(const QString origin) cons)","Funname":"DDialogPrivate::scanTags","Returntype":"QMap\u003cint,QString\u003e","Args":"const QString origin) cons"},{"Uniquefunname":"void DDialogPrivate::setSpacer(int height)","Funname":"DDialogPrivate::setSpacer","Returntype":"void","Args":"int height"},{"Uniquefunname":"QString DDialogPrivate::trimTag(QString origin) cons)","Funname":"DDialogPrivate::trimTag","Returntype":"QString","Args":"QString origin) cons"},{"Uniquefunname":"void DDialogPrivate::updateSize()","Funname":"DDialogPrivate::updateSize","Returntype":"void","Args":""},{"Uniquefunname":"void _q_defaultButtonTriggered()","Funname":"_q_defaultButtonTriggered","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onButtonClicked()","Funname":"_q_onButtonClicked","Returntype":"void","Args":""},{"Uniquefunname":"QString elideString(QString str,const QFontMetrics \u0026 fm,int width) cons)","Funname":"elideString","Returntype":"QString","Args":"QString str,const QFontMetrics \u0026 fm,int width) cons"},{"Uniquefunname":"QBoxLayout * getContentLayout()","Funname":"getContentLayout","Returntype":"QBoxLayout *","Args":""},{"Uniquefunname":"const QScreen * getScreen() cons)","Funname":"getScreen","Returntype":"const QScreen *","Args":") cons"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"QMap\u003cint,QString\u003e scanTags(const QString origin) cons)","Funname":"scanTags","Returntype":"QMap\u003cint,QString\u003e","Args":"const QString origin) cons"},{"Uniquefunname":"void setSpacer(int height)","Funname":"setSpacer","Returntype":"void","Args":"int height"},{"Uniquefunname":"QString trimTag(QString origin) cons)","Funname":"trimTag","Returntype":"QString","Args":"QString origin) cons"},{"Uniquefunname":"void updateSize()","Funname":"updateSize","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DDIALOG_P_H"]},{"Name":"class:DDialogPrivate","Fields":["QHBoxLayout * DDialogPrivate::buttonLayout","QList\u003cQAbstractButton * \u003e DDialogPrivate::buttonList","int DDialogPrivate::clickedButtonIndex","QVBoxLayout * DDialogPrivate::contentLayout","QList\u003cQWidget * \u003e DDialogPrivate::contentList","QPointer\u003cQAbstractButton\u003e DDialogPrivate::defaultButton","QIcon DDialogPrivate::icon","QHBoxLayout * DDialogPrivate::iconLayout","QString DDialogPrivate::message","QLabel * DDialogPrivate::messageLabel","bool DDialogPrivate::onButtonClickedClose","QSpacerItem * DDialogPrivate::spacer","const QScreen * DDialogPrivate::targetScreen","Qt::TextFormat DDialogPrivate::textFormat","QString DDialogPrivate::title","DTitlebar * DDialogPrivate::titleBar","QLabel * DDialogPrivate::titleLabel"]}]}
{"Filepath":"src/widgets/private/ddrawer_p.h","Functions":[{"Uniquefunname":" DDrawerPrivate(DDrawer * qq)","Funname":"DDrawerPrivate","Returntype":"","Args":"DDrawer * qq"},{"Uniquefunname":" DDrawerPrivate::DDrawerPrivate(DDrawer * qq)","Funname":"DDrawerPrivate::DDrawerPrivate","Returntype":"","Args":"DDrawer * qq"},{"Uniquefunname":"void DDrawerPrivate::init()","Funname":"DDrawerPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DDrawerPrivate::~DDrawerPrivate()","Funname":"DDrawerPrivate::~DDrawerPrivate","Returntype":"","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":" ~DDrawerPrivate()","Funname":"~DDrawerPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DDRAWER_P_H"]},{"Name":"class:DDrawerPrivate","Fields":["QPropertyAnimation * DDrawerPrivate::m_animation","DHorizontalLine * DDrawerPrivate::m_bottom_separator","DBoxWidget * DDrawerPrivate::m_boxWidget","QWidget * DDrawerPrivate::m_content","QBoxLayout * DDrawerPrivate::m_contentLayout","ContentBox * DDrawerPrivate::m_contentLoader","bool DDrawerPrivate::m_expand","DHorizontalLine * DDrawerPrivate::m_hSeparator","QWidget * DDrawerPrivate::m_header","QVBoxLayout * DDrawerPrivate::m_headerLayout","bool[7] DDrawerPrivate::m_reservedPadding"]}]}
{"Filepath":"src/widgets/private/dfilechooseredit_p.h","Functions":[{"Uniquefunname":" DFileChooserEditPrivate(DFileChooserEdit * q)","Funname":"DFileChooserEditPrivate","Returntype":"","Args":"DFileChooserEdit * q"},{"Uniquefunname":" DFileChooserEditPrivate::DFileChooserEditPrivate(DFileChooserEdit * q)","Funname":"DFileChooserEditPrivate::DFileChooserEditPrivate","Returntype":"","Args":"DFileChooserEdit * q"},{"Uniquefunname":"void DFileChooserEditPrivate::_q_showFileChooserDialog()","Funname":"DFileChooserEditPrivate::_q_showFileChooserDialog","Returntype":"void","Args":""},{"Uniquefunname":"void DFileChooserEditPrivate::init()","Funname":"DFileChooserEditPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void _q_showFileChooserDialog()","Funname":"_q_showFileChooserDialog","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DFILECHOOSEREDIT_P_H"]},{"Name":"class:DFileChooserEditPrivate","Fields":["QFileDialog * DFileChooserEditPrivate::dialog","DFileChooserEdit::DialogDisplayPosition DFileChooserEditPrivate::dialogDisplayPosition"]}]}
{"Filepath":"src/widgets/private/dfloatingmessage_p.h","Functions":[{"Uniquefunname":" DFloatingMessagePrivate(DFloatingMessage * qq)","Funname":"DFloatingMessagePrivate","Returntype":"","Args":"DFloatingMessage * qq"},{"Uniquefunname":" DFloatingMessagePrivate::DFloatingMessagePrivate(DFloatingMessage * qq)","Funname":"DFloatingMessagePrivate::DFloatingMessagePrivate","Returntype":"","Args":"DFloatingMessage * qq"},{"Uniquefunname":"void DFloatingMessagePrivate::init()","Funname":"DFloatingMessagePrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DFloatingMessagePrivate::~DFloatingMessagePrivate()","Funname":"DFloatingMessagePrivate::~DFloatingMessagePrivate","Returntype":"","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":" ~DFloatingMessagePrivate()","Funname":"~DFloatingMessagePrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DFLOATINGMESSAGE_P_H"]},{"Name":"class:DFloatingMessagePrivate","Fields":["DIconButton * DFloatingMessagePrivate::closeButton","QWidget * DFloatingMessagePrivate::content","QHBoxLayout * DFloatingMessagePrivate::hBoxLayout","DIconButton * DFloatingMessagePrivate::iconButton","MessageLabel * DFloatingMessagePrivate::labMessage","DFloatingMessage::MessageType DFloatingMessagePrivate::notifyType","QTimer * DFloatingMessagePrivate::timer","QWidget * DFloatingMessagePrivate::widget"]}]}
{"Filepath":"src/widgets/private/dfloatingwidget_p.h","Functions":[{"Uniquefunname":" DFloatingWidgetPrivate(DFloatingWidget * qq)","Funname":"DFloatingWidgetPrivate","Returntype":"","Args":"DFloatingWidget * qq"},{"Uniquefunname":" DFloatingWidgetPrivate::DFloatingWidgetPrivate(DFloatingWidget * qq)","Funname":"DFloatingWidgetPrivate::DFloatingWidgetPrivate","Returntype":"","Args":"DFloatingWidget * qq"},{"Uniquefunname":"void DFloatingWidgetPrivate::adjustPalette()","Funname":"DFloatingWidgetPrivate::adjustPalette","Returntype":"void","Args":""},{"Uniquefunname":"void DFloatingWidgetPrivate::init()","Funname":"DFloatingWidgetPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DFloatingWidgetPrivate::~DFloatingWidgetPrivate()","Funname":"DFloatingWidgetPrivate::~DFloatingWidgetPrivate","Returntype":"","Args":""},{"Uniquefunname":"void adjustPalette()","Funname":"adjustPalette","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":" ~DFloatingWidgetPrivate()","Funname":"~DFloatingWidgetPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DFLOATINGWIDGET_P_H"]},{"Name":"class:DFloatingWidgetPrivate","Fields":["DBlurEffectWidget * DFloatingWidgetPrivate::background","int DFloatingWidgetPrivate::framRadius","QHBoxLayout * DFloatingWidgetPrivate::layout"]}]}
{"Filepath":"src/widgets/private/dflowlayout_p.h","Functions":[{"Uniquefunname":" DFlowLayoutPrivate(DFlowLayout * qq)","Funname":"DFlowLayoutPrivate","Returntype":"","Args":"DFlowLayout * qq"},{"Uniquefunname":" DFlowLayoutPrivate::DFlowLayoutPrivate(DFlowLayout * qq)","Funname":"DFlowLayoutPrivate::DFlowLayoutPrivate","Returntype":"","Args":"DFlowLayout * qq"},{"Uniquefunname":"QSize DFlowLayoutPrivate::doLayout(const QRect \u0026 rect,bool testOnly) cons)","Funname":"DFlowLayoutPrivate::doLayout","Returntype":"QSize","Args":"const QRect \u0026 rect,bool testOnly) cons"},{"Uniquefunname":"QSize doLayout(const QRect \u0026 rect,bool testOnly) cons)","Funname":"doLayout","Returntype":"QSize","Args":"const QRect \u0026 rect,bool testOnly) cons"}],"Records":[{"Name":"macro","Fields":["DFLOWLAYOUT_P_H"]},{"Name":"class:DFlowLayoutPrivate","Fields":["DFlowLayout::Flow DFlowLayoutPrivate::flow","int DFlowLayoutPrivate::horizontalSpacing","QList\u003cQLayoutItem * \u003e DFlowLayoutPrivate::itemList","QSize DFlowLayoutPrivate::sizeHint","int DFlowLayoutPrivate::verticalSpacing"]}]}
{"Filepath":"src/widgets/private/dframe_p.h","Functions":[{"Uniquefunname":" DFramePrivate(DFrame * qq)","Funname":"DFramePrivate","Returntype":"","Args":"DFrame * qq"},{"Uniquefunname":" DFramePrivate::DFramePrivate(DFrame * qq)","Funname":"DFramePrivate::DFramePrivate","Returntype":"","Args":"DFrame * qq"}],"Records":[{"Name":"macro","Fields":["DFRAME_P_H"]},{"Name":"class:DFramePrivate","Fields":["DPalette::ColorType DFramePrivate::backType","bool DFramePrivate::frameRounded"]}]}
{"Filepath":"src/widgets/private/diconbutton_p.h","Functions":[{"Uniquefunname":" DIconButtonPrivate(DIconButton * qq)","Funname":"DIconButtonPrivate","Returntype":"","Args":"DIconButton * qq"},{"Uniquefunname":" DIconButtonPrivate::DIconButtonPrivate(DIconButton * qq)","Funname":"DIconButtonPrivate::DIconButtonPrivate","Returntype":"","Args":"DIconButton * qq"}],"Records":[{"Name":"macro","Fields":["DICONBUTTON_P_H"]},{"Name":"class:DIconButtonPrivate","Fields":["bool DIconButtonPrivate::circleStatus","bool DIconButtonPrivate::flat","qint64 DIconButtonPrivate::iconType"]}]}
{"Filepath":"src/widgets/private/dimagebutton_p.h","Functions":[{"Uniquefunname":" DImageButtonPrivate(DImageButton * qq)","Funname":"DImageButtonPrivate","Returntype":"","Args":"DImageButton * qq"},{"Uniquefunname":" DImageButtonPrivate::DImageButtonPrivate(DImageButton * qq)","Funname":"DImageButtonPrivate::DImageButtonPrivate","Returntype":"","Args":"DImageButton * qq"},{"Uniquefunname":"QPixmap DImageButtonPrivate::loadPixmap(const QString \u0026 path)","Funname":"DImageButtonPrivate::loadPixmap","Returntype":"QPixmap","Args":"const QString \u0026 path"},{"Uniquefunname":"void DImageButtonPrivate::setState(DImageButton::State state)","Funname":"DImageButtonPrivate::setState","Returntype":"void","Args":"DImageButton::State state"},{"Uniquefunname":"void DImageButtonPrivate::updateIcon()","Funname":"DImageButtonPrivate::updateIcon","Returntype":"void","Args":""},{"Uniquefunname":" DImageButtonPrivate::~DImageButtonPrivate()","Funname":"DImageButtonPrivate::~DImageButtonPrivate","Returntype":"","Args":""},{"Uniquefunname":"QPixmap loadPixmap(const QString \u0026 path)","Funname":"loadPixmap","Returntype":"QPixmap","Args":"const QString \u0026 path"},{"Uniquefunname":"void setState(DImageButton::State state)","Funname":"setState","Returntype":"void","Args":"DImageButton::State state"},{"Uniquefunname":"void updateIcon()","Funname":"updateIcon","Returntype":"void","Args":""},{"Uniquefunname":" ~DImageButtonPrivate()","Funname":"~DImageButtonPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DIMAGEBUTTON_P_H"]},{"Name":"class:DImageButtonPrivate","Fields":["QString DImageButtonPrivate::m_checkedPic","QString DImageButtonPrivate::m_disabledPic","QString DImageButtonPrivate::m_hoverPic","bool DImageButtonPrivate::m_isCheckable","bool DImageButtonPrivate::m_isChecked","QString DImageButtonPrivate::m_normalPic","QString DImageButtonPrivate::m_pressPic","DImageButton::State DImageButtonPrivate::m_state"]}]}
{"Filepath":"src/widgets/private/dinputdialog_p.h","Functions":[{"Uniquefunname":" DInputDialogPrivate(DInputDialog * qq)","Funname":"DInputDialogPrivate","Returntype":"","Args":"DInputDialog * qq"},{"Uniquefunname":" DInputDialogPrivate::DInputDialogPrivate(DInputDialog * qq)","Funname":"DInputDialogPrivate::DInputDialogPrivate","Returntype":"","Args":"DInputDialog * qq"},{"Uniquefunname":"void DInputDialogPrivate::init()","Funname":"DInputDialogPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DINPUTDIALOG_P_H"]},{"Name":"class:DInputDialogPrivate","Fields":["QAbstractButton * DInputDialogPrivate::cancelButton","QComboBox * DInputDialogPrivate::comboBox","DDoubleSpinBox * DInputDialogPrivate::doubleSpinBox","DInputDialog::InputMode DInputDialogPrivate::inputMode","DLineEdit * DInputDialogPrivate::lineEdit","QAbstractButton * DInputDialogPrivate::okButton","DSpinBox * DInputDialogPrivate::spinBox"]}]}
{"Filepath":"src/widgets/private/dipv4lineedit_p.h","Functions":[{"Uniquefunname":" DIpv4LineEditPrivate(DIpv4LineEdit * parent)","Funname":"DIpv4LineEditPrivate","Returntype":"","Args":"DIpv4LineEdit * parent"},{"Uniquefunname":" DIpv4LineEditPrivate::DIpv4LineEditPrivate(DIpv4LineEdit * parent)","Funname":"DIpv4LineEditPrivate::DIpv4LineEditPrivate","Returntype":"","Args":"DIpv4LineEdit * parent"},{"Uniquefunname":"void DIpv4LineEditPrivate::_q_setIpLineEditText(const QString \u0026 text)","Funname":"DIpv4LineEditPrivate::_q_setIpLineEditText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void DIpv4LineEditPrivate::_q_updateLineEditText()","Funname":"DIpv4LineEditPrivate::_q_updateLineEditText","Returntype":"void","Args":""},{"Uniquefunname":"QLineEdit * DIpv4LineEditPrivate::getEdit()","Funname":"DIpv4LineEditPrivate::getEdit","Returntype":"QLineEdit *","Args":""},{"Uniquefunname":"QLabel * DIpv4LineEditPrivate::getLabel()","Funname":"DIpv4LineEditPrivate::getLabel","Returntype":"QLabel *","Args":""},{"Uniquefunname":"void DIpv4LineEditPrivate::init()","Funname":"DIpv4LineEditPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DIpv4LineEditPrivate::setFocus(bool focus)","Funname":"DIpv4LineEditPrivate::setFocus","Returntype":"void","Args":"bool focus"},{"Uniquefunname":"void _q_setIpLineEditText(const QString \u0026 text)","Funname":"_q_setIpLineEditText","Returntype":"void","Args":"const QString \u0026 text"},{"Uniquefunname":"void _q_updateLineEditText()","Funname":"_q_updateLineEditText","Returntype":"void","Args":""},{"Uniquefunname":"QLineEdit * getEdit()","Funname":"getEdit","Returntype":"QLineEdit *","Args":""},{"Uniquefunname":"QLabel * getLabel()","Funname":"getLabel","Returntype":"QLabel *","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void setFocus(bool focus)","Funname":"setFocus","Returntype":"void","Args":"bool focus"}],"Records":[{"Name":"macro","Fields":["DIPV4LINEEDIT_P_H"]},{"Name":"class:DIpv4LineEditPrivate","Fields":["QList\u003cQLineEdit * \u003e DIpv4LineEditPrivate::editList","QWidget * DIpv4LineEditPrivate::editMainWidget","bool DIpv4LineEditPrivate::focus"]}]}
{"Filepath":"src/widgets/private/dkeysequenceedit_p.h","Functions":[{"Uniquefunname":" DKeySequenceEditPrivate(DKeySequenceEdit * q)","Funname":"DKeySequenceEditPrivate","Returntype":"","Args":"DKeySequenceEdit * q"},{"Uniquefunname":" DKeySequenceEditPrivate::DKeySequenceEditPrivate(DKeySequenceEdit * q)","Funname":"DKeySequenceEditPrivate::DKeySequenceEditPrivate","Returntype":"","Args":"DKeySequenceEdit * q"},{"Uniquefunname":"void DKeySequenceEditPrivate::init()","Funname":"DKeySequenceEditPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"QString DKeySequenceEditPrivate::replaceWriting(QString writing)","Funname":"DKeySequenceEditPrivate::replaceWriting","Returntype":"QString","Args":"QString writing"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"QString replaceWriting(QString writing)","Funname":"replaceWriting","Returntype":"QString","Args":"QString writing"}],"Records":[{"Name":"macro","Fields":["DKEYSEQUENCEEDIT_P_H"]},{"Name":"class:DKeySequenceEditPrivate","Fields":["QMap\u003cQString,QString\u003e DKeySequenceEditPrivate::copywritingList","DKeyWidget * DKeySequenceEditPrivate::rightWidget","QKeySequence DKeySequenceEditPrivate::sequencekey"]}]}
{"Filepath":"src/widgets/private/dlabel_p.h","Functions":[{"Uniquefunname":" DLabelPrivate(DLabel * q)","Funname":"DLabelPrivate","Returntype":"","Args":"DLabel * q"},{"Uniquefunname":" DLabelPrivate::DLabelPrivate(DLabel * q)","Funname":"DLabelPrivate::DLabelPrivate","Returntype":"","Args":"DLabel * q"},{"Uniquefunname":"QRectF DLabelPrivate::documentRect(QLabelPrivate * d)","Funname":"DLabelPrivate::documentRect","Returntype":"QRectF","Args":"QLabelPrivate * d"},{"Uniquefunname":"void DLabelPrivate::ensureTextLayouted(QLabelPrivate * d)","Funname":"DLabelPrivate::ensureTextLayouted","Returntype":"void","Args":"QLabelPrivate * d"},{"Uniquefunname":"void DLabelPrivate::init()","Funname":"DLabelPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"QRectF DLabelPrivate::layoutRect(QLabelPrivate * d)","Funname":"DLabelPrivate::layoutRect","Returntype":"QRectF","Args":"QLabelPrivate * d"},{"Uniquefunname":"Qt DLabelPrivate::textDirection(QLabelPrivate * d)","Funname":"DLabelPrivate::textDirection","Returntype":"Qt","Args":"QLabelPrivate * d"},{"Uniquefunname":"QRectF documentRect(QLabelPrivate * d)","Funname":"documentRect","Returntype":"QRectF","Args":"QLabelPrivate * d"},{"Uniquefunname":"void ensureTextLayouted(QLabelPrivate * d)","Funname":"ensureTextLayouted","Returntype":"void","Args":"QLabelPrivate * d"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"QRectF layoutRect(QLabelPrivate * d)","Funname":"layoutRect","Returntype":"QRectF","Args":"QLabelPrivate * d"},{"Uniquefunname":"Qt textDirection(QLabelPrivate * d)","Funname":"textDirection","Returntype":"Qt","Args":"QLabelPrivate * d"}],"Records":[{"Name":"macro","Fields":["DLABEL_P_H"]},{"Name":"class:DLabelPrivate","Fields":["DPalette::ColorType DLabelPrivate::color","Qt::TextElideMode DLabelPrivate::elideMode"]}]}
{"Filepath":"src/widgets/private/dlineedit_p.h","Functions":[{"Uniquefunname":" DLineEditPrivate(DLineEdit * q)","Funname":"DLineEditPrivate","Returntype":"","Args":"DLineEdit * q"},{"Uniquefunname":" DLineEditPrivate::DLineEditPrivate(DLineEdit * q)","Funname":"DLineEditPrivate::DLineEditPrivate","Returntype":"","Args":"DLineEdit * q"},{"Uniquefunname":"void DLineEditPrivate::init()","Funname":"DLineEditPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DLineEditPrivate::updateTooltipPos()","Funname":"DLineEditPrivate::updateTooltipPos","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void updateTooltipPos()","Funname":"updateTooltipPos","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DLINEEDIT_P_H"]},{"Name":"class:DLineEditPrivate","Fields":["bool DLineEditPrivate::bSpeechToText","bool DLineEditPrivate::bTextToSpeech","bool DLineEditPrivate::bTextToTranslate","DAlertControl * DLineEditPrivate::control","QHBoxLayout * DLineEditPrivate::hLayout","QWidget * DLineEditPrivate::leftWidget","QLineEdit * DLineEditPrivate::lineEdit","QWidget * DLineEditPrivate::rightWidget"]}]}
{"Filepath":"src/widgets/private/dlistview_p.h","Functions":[{"Uniquefunname":" DListViewPrivate(DListView * qq)","Funname":"DListViewPrivate","Returntype":"","Args":"DListView * qq"},{"Uniquefunname":" DListViewPrivate::DListViewPrivate(DListView * qq)","Funname":"DListViewPrivate::DListViewPrivate","Returntype":"","Args":"DListView * qq"},{"Uniquefunname":"void DListViewPrivate::init()","Funname":"DListViewPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DListViewPrivate::onOrientationChanged()","Funname":"DListViewPrivate::onOrientationChanged","Returntype":"void","Args":""},{"Uniquefunname":" DListViewPrivate::~DListViewPrivate()","Funname":"DListViewPrivate::~DListViewPrivate","Returntype":"","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void onOrientationChanged()","Funname":"onOrientationChanged","Returntype":"void","Args":""},{"Uniquefunname":" ~DListViewPrivate()","Funname":"~DListViewPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DLISTVIEW_P_H"]},{"Name":"class:DListViewPrivate","Fields":["int DListViewPrivate::bottom","DBoxWidget * DListViewPrivate::footerLayout","QList\u003cQWidget * \u003e DListViewPrivate::footerList","DBoxWidget * DListViewPrivate::headerLayout","QList\u003cQWidget * \u003e DListViewPrivate::headerList","int DListViewPrivate::left","int DListViewPrivate::right","int DListViewPrivate::top"]}]}
{"Filepath":"src/widgets/private/dloadingindicator_p.h","Functions":[{"Uniquefunname":" DLoadingIndicatorPrivate(DLoadingIndicator * qq)","Funname":"DLoadingIndicatorPrivate","Returntype":"","Args":"DLoadingIndicator * qq"},{"Uniquefunname":" DLoadingIndicatorPrivate::DLoadingIndicatorPrivate(DLoadingIndicator * qq)","Funname":"DLoadingIndicatorPrivate::DLoadingIndicatorPrivate","Returntype":"","Args":"DLoadingIndicator * qq"},{"Uniquefunname":"void DLoadingIndicatorPrivate::init()","Funname":"DLoadingIndicatorPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DLoadingIndicatorPrivate::setLoadingItem(QGraphicsItem * item)","Funname":"DLoadingIndicatorPrivate::setLoadingItem","Returntype":"void","Args":"QGraphicsItem * item"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void setLoadingItem(QGraphicsItem * item)","Funname":"setLoadingItem","Returntype":"void","Args":"QGraphicsItem * item"}],"Records":[{"Name":"macro","Fields":["DLOADINGINDICATOR_P"]},{"Name":"class:DLoadingIndicatorPrivate","Fields":["DLoadingIndicator::RotationDirection DLoadingIndicatorPrivate::direction","bool DLoadingIndicatorPrivate::loading","QVariantAnimation DLoadingIndicatorPrivate::rotateAni","bool DLoadingIndicatorPrivate::smooth","QWidget * DLoadingIndicatorPrivate::widgetSource"]}]}
{"Filepath":"src/widgets/private/dmainwindow_p.h","Functions":[{"Uniquefunname":" DMainWindowPrivate(DMainWindow * qq)","Funname":"DMainWindowPrivate","Returntype":"","Args":"DMainWindow * qq"},{"Uniquefunname":" DMainWindowPrivate::DMainWindowPrivate(DMainWindow * qq)","Funname":"DMainWindowPrivate::DMainWindowPrivate","Returntype":"","Args":"DMainWindow * qq"},{"Uniquefunname":"void DMainWindowPrivate::init()","Funname":"DMainWindowPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DMainWindowPrivate::updateTitleShadowGeometry()","Funname":"DMainWindowPrivate::updateTitleShadowGeometry","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void updateTitleShadowGeometry()","Funname":"updateTitleShadowGeometry","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DMAINWINDOW_P_H"]},{"Name":"class:DMainWindowPrivate","Fields":["DPlatformWindowHandle * DMainWindowPrivate::handle","QShortcut * DMainWindowPrivate::help","DShadowLine * DMainWindowPrivate::titleShadow","DTitlebar * DMainWindowPrivate::titlebar"]}]}
{"Filepath":"src/widgets/private/dmpriscontrol_p.h","Functions":[{"Uniquefunname":" DMPRISControlPrivate(DMPRISControl * q)","Funname":"DMPRISControlPrivate","Returntype":"","Args":"DMPRISControl * q"},{"Uniquefunname":" DMPRISControlPrivate::DMPRISControlPrivate(DMPRISControl * q)","Funname":"DMPRISControlPrivate::DMPRISControlPrivate","Returntype":"","Args":"DMPRISControl * q"},{"Uniquefunname":"void DMPRISControlPrivate::_q_loadMPRISPath(const QString \u0026 path)","Funname":"DMPRISControlPrivate::_q_loadMPRISPath","Returntype":"void","Args":"const QString \u0026 path"},{"Uniquefunname":"void DMPRISControlPrivate::_q_onCanControlChanged(bool canControl)","Funname":"DMPRISControlPrivate::_q_onCanControlChanged","Returntype":"void","Args":"bool canControl"},{"Uniquefunname":"void DMPRISControlPrivate::_q_onMetaDataChanged()","Funname":"DMPRISControlPrivate::_q_onMetaDataChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISControlPrivate::_q_onNextClicked()","Funname":"DMPRISControlPrivate::_q_onNextClicked","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISControlPrivate::_q_onPauseClicked()","Funname":"DMPRISControlPrivate::_q_onPauseClicked","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISControlPrivate::_q_onPlayClicked()","Funname":"DMPRISControlPrivate::_q_onPlayClicked","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISControlPrivate::_q_onPlaybackStatusChanged()","Funname":"DMPRISControlPrivate::_q_onPlaybackStatusChanged","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISControlPrivate::_q_onPrevClicked()","Funname":"DMPRISControlPrivate::_q_onPrevClicked","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISControlPrivate::_q_removeMPRISPath(const QString \u0026 path)","Funname":"DMPRISControlPrivate::_q_removeMPRISPath","Returntype":"void","Args":"const QString \u0026 path"},{"Uniquefunname":"void DMPRISControlPrivate::init()","Funname":"DMPRISControlPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void _q_loadMPRISPath(const QString \u0026 path)","Funname":"_q_loadMPRISPath","Returntype":"void","Args":"const QString \u0026 path"},{"Uniquefunname":"void _q_onCanControlChanged(bool canControl)","Funname":"_q_onCanControlChanged","Returntype":"void","Args":"bool canControl"},{"Uniquefunname":"void _q_onMetaDataChanged()","Funname":"_q_onMetaDataChanged","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onNextClicked()","Funname":"_q_onNextClicked","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onPauseClicked()","Funname":"_q_onPauseClicked","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onPlayClicked()","Funname":"_q_onPlayClicked","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onPlaybackStatusChanged()","Funname":"_q_onPlaybackStatusChanged","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onPrevClicked()","Funname":"_q_onPrevClicked","Returntype":"void","Args":""},{"Uniquefunname":"void _q_removeMPRISPath(const QString \u0026 path)","Funname":"_q_removeMPRISPath","Returntype":"void","Args":"const QString \u0026 path"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DMPRISCONTROL_P_H"]},{"Name":"class:DMPRISControlPrivate","Fields":["bool DMPRISControlPrivate::m_clickedStatus","QWidget * DMPRISControlPrivate::m_controlWidget","QString DMPRISControlPrivate::m_lastPath","DBusMPRIS * DMPRISControlPrivate::m_mprisInter","DMPRISMonitor * DMPRISControlPrivate::m_mprisMonitor","QStringList DMPRISControlPrivate::m_mprisPaths","DFloatingButton * DMPRISControlPrivate::m_nextBtn","QLabel * DMPRISControlPrivate::m_picture","bool DMPRISControlPrivate::m_pictureVisible","DFloatingButton * DMPRISControlPrivate::m_playBtn","bool DMPRISControlPrivate::m_playStatus","DFloatingButton * DMPRISControlPrivate::m_prevBtn","DTickEffect * DMPRISControlPrivate::m_tickEffect","QLabel * DMPRISControlPrivate::m_title","QScrollArea * DMPRISControlPrivate::m_titleScrollArea"]}]}
{"Filepath":"src/widgets/private/dpageindicator_p.h","Functions":[{"Uniquefunname":" DPageIndicatorPrivate(DPageIndicator * q)","Funname":"DPageIndicatorPrivate","Returntype":"","Args":"DPageIndicator * q"},{"Uniquefunname":" DPageIndicatorPrivate::DPageIndicatorPrivate(DPageIndicator * q)","Funname":"DPageIndicatorPrivate::DPageIndicatorPrivate","Returntype":"","Args":"DPageIndicator * q"},{"Uniquefunname":"void DPageIndicatorPrivate::nextPage()","Funname":"DPageIndicatorPrivate::nextPage","Returntype":"void","Args":""},{"Uniquefunname":"void DPageIndicatorPrivate::previousPage()","Funname":"DPageIndicatorPrivate::previousPage","Returntype":"void","Args":""},{"Uniquefunname":"void DPageIndicatorPrivate::setCurrentPage(const int index)","Funname":"DPageIndicatorPrivate::setCurrentPage","Returntype":"void","Args":"const int index"},{"Uniquefunname":"void DPageIndicatorPrivate::setPageCount(const int count)","Funname":"DPageIndicatorPrivate::setPageCount","Returntype":"void","Args":"const int count"},{"Uniquefunname":"void nextPage()","Funname":"nextPage","Returntype":"void","Args":""},{"Uniquefunname":"void previousPage()","Funname":"previousPage","Returntype":"void","Args":""},{"Uniquefunname":"void setCurrentPage(const int index)","Funname":"setCurrentPage","Returntype":"void","Args":"const int index"},{"Uniquefunname":"void setPageCount(const int count)","Funname":"setPageCount","Returntype":"void","Args":"const int count"}],"Records":[{"Name":"macro","Fields":["DPAGEINDICATOR_P_H"]},{"Name":"class:DPageIndicatorPrivate","Fields":["int DPageIndicatorPrivate::currentPage","int DPageIndicatorPrivate::pageCount","QColor DPageIndicatorPrivate::pointColor","int DPageIndicatorPrivate::pointDistance","int DPageIndicatorPrivate::pointRadius","QColor DPageIndicatorPrivate::secondaryPointColor","int DPageIndicatorPrivate::secondaryPointRadius"]}]}
{"Filepath":"src/widgets/private/dpalettehelper_p.h","Functions":[{"Uniquefunname":" DPaletteHelperPrivate(DPaletteHelper * qq)","Funname":"DPaletteHelperPrivate","Returntype":"","Args":"DPaletteHelper * qq"},{"Uniquefunname":" DPaletteHelperPrivate::DPaletteHelperPrivate(DPaletteHelper * qq)","Funname":"DPaletteHelperPrivate::DPaletteHelperPrivate","Returntype":"","Args":"DPaletteHelper * qq"}],"Records":[{"Name":"macro","Fields":["DPALETTEHELPER_P_H"]},{"Name":"class:DPaletteHelperPrivate","Fields":["QHash\u003cconst QWidget *,DPalette\u003e DPaletteHelperPrivate::paletteCache"]}]}
{"Filepath":"src/widgets/private/dpasswordedit_p.h","Functions":[{"Uniquefunname":" DPasswordEditPrivate(DPasswordEdit * q)","Funname":"DPasswordEditPrivate","Returntype":"","Args":"DPasswordEdit * q"},{"Uniquefunname":" DPasswordEditPrivate::DPasswordEditPrivate(DPasswordEdit * q)","Funname":"DPasswordEditPrivate::DPasswordEditPrivate","Returntype":"","Args":"DPasswordEdit * q"},{"Uniquefunname":"void DPasswordEditPrivate::_q_toggleEchoMode()","Funname":"DPasswordEditPrivate::_q_toggleEchoMode","Returntype":"void","Args":""},{"Uniquefunname":"void DPasswordEditPrivate::init()","Funname":"DPasswordEditPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void _q_toggleEchoMode()","Funname":"_q_toggleEchoMode","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DPASSWORDEDIT_P_H"]},{"Name":"class:DPasswordEditPrivate","Fields":["DSuggestButton * DPasswordEditPrivate::togglePasswordVisibleButton"]}]}
{"Filepath":"src/widgets/private/dpicturesequenceview_p.h","Functions":[{"Uniquefunname":" DPictureSequenceViewPrivate(DPictureSequenceView * q)","Funname":"DPictureSequenceViewPrivate","Returntype":"","Args":"DPictureSequenceView * q"},{"Uniquefunname":" DPictureSequenceViewPrivate::DPictureSequenceViewPrivate(DPictureSequenceView * q)","Funname":"DPictureSequenceViewPrivate::DPictureSequenceViewPrivate","Returntype":"","Args":"DPictureSequenceView * q"},{"Uniquefunname":"void DPictureSequenceViewPrivate::_q_refreshPicture()","Funname":"DPictureSequenceViewPrivate::_q_refreshPicture","Returntype":"void","Args":""},{"Uniquefunname":"void DPictureSequenceViewPrivate::init()","Funname":"DPictureSequenceViewPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"QPixmap DPictureSequenceViewPrivate::loadPixmap(const QString \u0026 path)","Funname":"DPictureSequenceViewPrivate::loadPixmap","Returntype":"QPixmap","Args":"const QString \u0026 path"},{"Uniquefunname":"void DPictureSequenceViewPrivate::play()","Funname":"DPictureSequenceViewPrivate::play","Returntype":"void","Args":""},{"Uniquefunname":" DPictureSequenceViewPrivate::~DPictureSequenceViewPrivate()","Funname":"DPictureSequenceViewPrivate::~DPictureSequenceViewPrivate","Returntype":"","Args":""},{"Uniquefunname":"void _q_refreshPicture()","Funname":"_q_refreshPicture","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"QPixmap loadPixmap(const QString \u0026 path)","Funname":"loadPixmap","Returntype":"QPixmap","Args":"const QString \u0026 path"},{"Uniquefunname":"void play()","Funname":"play","Returntype":"void","Args":""},{"Uniquefunname":" ~DPictureSequenceViewPrivate()","Funname":"~DPictureSequenceViewPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DPICTURESEQUENCEVIEW_P_H"]},{"Name":"class:DPictureSequenceViewPrivate","Fields":["int DPictureSequenceViewPrivate::lastItemPos","QList\u003cQGraphicsPixmapItem * \u003e DPictureSequenceViewPrivate::pictureItemList","QTimer * DPictureSequenceViewPrivate::refreshTimer","QGraphicsScene * DPictureSequenceViewPrivate::scene","bool DPictureSequenceViewPrivate::singleShot"]}]}
{"Filepath":"src/widgets/private/dprintpreviewdialog_p.h","Functions":[{"Uniquefunname":" DPrintPreviewDialogPrivate(DPrintPreviewDialog * qq)","Funname":"DPrintPreviewDialogPrivate","Returntype":"","Args":"DPrintPreviewDialog * qq"},{"Uniquefunname":" DPrintPreviewDialogPrivate::DPrintPreviewDialogPrivate(DPrintPreviewDialog * qq)","Funname":"DPrintPreviewDialogPrivate::DPrintPreviewDialogPrivate","Returntype":"","Args":"DPrintPreviewDialog * qq"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_ColorModeChange(int index)","Funname":"DPrintPreviewDialogPrivate::_q_ColorModeChange","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_checkStateChanged(int state)","Funname":"DPrintPreviewDialogPrivate::_q_checkStateChanged","Returntype":"void","Args":"int state"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_currentPageSpinChanged(int value)","Funname":"DPrintPreviewDialogPrivate::_q_currentPageSpinChanged","Returntype":"void","Args":"int value"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_customPagesFinished()","Funname":"DPrintPreviewDialogPrivate::_q_customPagesFinished","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_marginEditFinished()","Funname":"DPrintPreviewDialogPrivate::_q_marginEditFinished","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_marginTimerOut()","Funname":"DPrintPreviewDialogPrivate::_q_marginTimerOut","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_marginspinChanged(double)","Funname":"DPrintPreviewDialogPrivate::_q_marginspinChanged","Returntype":"void","Args":"double"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_orientationChanged(int index)","Funname":"DPrintPreviewDialogPrivate::_q_orientationChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_pageMarginChanged(int index)","Funname":"DPrintPreviewDialogPrivate::_q_pageMarginChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_pageRangeChanged(int index)","Funname":"DPrintPreviewDialogPrivate::_q_pageRangeChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_printerChanged(int index)","Funname":"DPrintPreviewDialogPrivate::_q_printerChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::_q_startPrint(bool clicked)","Funname":"DPrintPreviewDialogPrivate::_q_startPrint","Returntype":"void","Args":"bool clicked"},{"Uniquefunname":"QVector\u003cint\u003e DPrintPreviewDialogPrivate::checkDuplication(QVector\u003cint\u003e data)","Funname":"DPrintPreviewDialogPrivate::checkDuplication","Returntype":"QVector\u003cint\u003e","Args":"QVector\u003cint\u003e data"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initadvanceui()","Funname":"DPrintPreviewDialogPrivate::initadvanceui","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initbasicui()","Funname":"DPrintPreviewDialogPrivate::initbasicui","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initconnections()","Funname":"DPrintPreviewDialogPrivate::initconnections","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initdata()","Funname":"DPrintPreviewDialogPrivate::initdata","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initleft(QVBoxLayout * layout)","Funname":"DPrintPreviewDialogPrivate::initleft","Returntype":"void","Args":"QVBoxLayout * layout"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initright(QVBoxLayout * layout)","Funname":"DPrintPreviewDialogPrivate::initright","Returntype":"void","Args":"QVBoxLayout * layout"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::initui()","Funname":"DPrintPreviewDialogPrivate::initui","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::judgeSupportedAttributes(const QString \u0026 lastPaperSize)","Funname":"DPrintPreviewDialogPrivate::judgeSupportedAttributes","Returntype":"void","Args":"const QString \u0026 lastPaperSize"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::marginsLayout(bool adapted)","Funname":"DPrintPreviewDialogPrivate::marginsLayout","Returntype":"void","Args":"bool adapted"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setEnable(const int \u0026 value,DComboBox * combox)","Funname":"DPrintPreviewDialogPrivate::setEnable","Returntype":"void","Args":"const int \u0026 value,DComboBox * combox"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setMininumMargins()","Funname":"DPrintPreviewDialogPrivate::setMininumMargins","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setPageIsLegal(bool islegal)","Funname":"DPrintPreviewDialogPrivate::setPageIsLegal","Returntype":"void","Args":"bool islegal"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setScaling(int index)","Funname":"DPrintPreviewDialogPrivate::setScaling","Returntype":"void","Args":"int index"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setTurnPageBtnStatus()","Funname":"DPrintPreviewDialogPrivate::setTurnPageBtnStatus","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setfrmaeback(DFrame * frame)","Funname":"DPrintPreviewDialogPrivate::setfrmaeback","Returntype":"void","Args":"DFrame * frame"},{"Uniquefunname":"void DPrintPreviewDialogPrivate::setupPrinter()","Funname":"DPrintPreviewDialogPrivate::setupPrinter","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::showadvancesetting()","Funname":"DPrintPreviewDialogPrivate::showadvancesetting","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::startup()","Funname":"DPrintPreviewDialogPrivate::startup","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewDialogPrivate::themeTypeChange(DGuiApplicationHelper::ColorType themeType)","Funname":"DPrintPreviewDialogPrivate::themeTypeChange","Returntype":"void","Args":"DGuiApplicationHelper::ColorType themeType"},{"Uniquefunname":"void _q_ColorModeChange(int index)","Funname":"_q_ColorModeChange","Returntype":"void","Args":"int index"},{"Uniquefunname":"void _q_checkStateChanged(int state)","Funname":"_q_checkStateChanged","Returntype":"void","Args":"int state"},{"Uniquefunname":"void _q_currentPageSpinChanged(int value)","Funname":"_q_currentPageSpinChanged","Returntype":"void","Args":"int value"},{"Uniquefunname":"void _q_customPagesFinished()","Funname":"_q_customPagesFinished","Returntype":"void","Args":""},{"Uniquefunname":"void _q_marginEditFinished()","Funname":"_q_marginEditFinished","Returntype":"void","Args":""},{"Uniquefunname":"void _q_marginTimerOut()","Funname":"_q_marginTimerOut","Returntype":"void","Args":""},{"Uniquefunname":"void _q_marginspinChanged(double)","Funname":"_q_marginspinChanged","Returntype":"void","Args":"double"},{"Uniquefunname":"void _q_orientationChanged(int index)","Funname":"_q_orientationChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void _q_pageMarginChanged(int index)","Funname":"_q_pageMarginChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void _q_pageRangeChanged(int index)","Funname":"_q_pageRangeChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void _q_printerChanged(int index)","Funname":"_q_printerChanged","Returntype":"void","Args":"int index"},{"Uniquefunname":"void _q_startPrint(bool clicked)","Funname":"_q_startPrint","Returntype":"void","Args":"bool clicked"},{"Uniquefunname":"QVector\u003cint\u003e checkDuplication(QVector\u003cint\u003e data)","Funname":"checkDuplication","Returntype":"QVector\u003cint\u003e","Args":"QVector\u003cint\u003e data"},{"Uniquefunname":"void initadvanceui()","Funname":"initadvanceui","Returntype":"void","Args":""},{"Uniquefunname":"void initbasicui()","Funname":"initbasicui","Returntype":"void","Args":""},{"Uniquefunname":"void initconnections()","Funname":"initconnections","Returntype":"void","Args":""},{"Uniquefunname":"void initdata()","Funname":"initdata","Returntype":"void","Args":""},{"Uniquefunname":"void initleft(QVBoxLayout * layout)","Funname":"initleft","Returntype":"void","Args":"QVBoxLayout * layout"},{"Uniquefunname":"void initright(QVBoxLayout * layout)","Funname":"initright","Returntype":"void","Args":"QVBoxLayout * layout"},{"Uniquefunname":"void initui()","Funname":"initui","Returntype":"void","Args":""},{"Uniquefunname":"void judgeSupportedAttributes(const QString \u0026 lastPaperSize)","Funname":"judgeSupportedAttributes","Returntype":"void","Args":"const QString \u0026 lastPaperSize"},{"Uniquefunname":"void marginsLayout(bool adapted)","Funname":"marginsLayout","Returntype":"void","Args":"bool adapted"},{"Uniquefunname":"void setEnable(const int \u0026 value,DComboBox * combox)","Funname":"setEnable","Returntype":"void","Args":"const int \u0026 value,DComboBox * combox"},{"Uniquefunname":"void setMininumMargins()","Funname":"setMininumMargins","Returntype":"void","Args":""},{"Uniquefunname":"void setPageIsLegal(bool islegal)","Funname":"setPageIsLegal","Returntype":"void","Args":"bool islegal"},{"Uniquefunname":"void setScaling(int index)","Funname":"setScaling","Returntype":"void","Args":"int index"},{"Uniquefunname":"void setTurnPageBtnStatus()","Funname":"setTurnPageBtnStatus","Returntype":"void","Args":""},{"Uniquefunname":"void setfrmaeback(DFrame * frame)","Funname":"setfrmaeback","Returntype":"void","Args":"DFrame * frame"},{"Uniquefunname":"void setupPrinter()","Funname":"setupPrinter","Returntype":"void","Args":""},{"Uniquefunname":"void showadvancesetting()","Funname":"showadvancesetting","Returntype":"void","Args":""},{"Uniquefunname":"void startup()","Funname":"startup","Returntype":"void","Args":""},{"Uniquefunname":"void themeTypeChange(DGuiApplicationHelper::ColorType themeType)","Funname":"themeTypeChange","Returntype":"void","Args":"DGuiApplicationHelper::ColorType themeType"}],"Records":[{"Name":"macro","Fields":["DPRINTPREVIEWDIALOG_P_H"]},{"Name":"class:DPrintPreviewDialogPrivate","Fields":["DPushButton * DPrintPreviewDialogPrivate::advanceBtn","DWidget * DPrintPreviewDialogPrivate::advancesettingwdg","DWidget * DPrintPreviewDialogPrivate::basicsettingwdg","DPushButton * DPrintPreviewDialogPrivate::cancelBtn","DComboBox * DPrintPreviewDialogPrivate::colorModeCombo","DSpinBox * DPrintPreviewDialogPrivate::copycountspinbox","DCheckBox * DPrintPreviewDialogPrivate::duplexCheckBox","DComboBox * DPrintPreviewDialogPrivate::duplexCombo","DIconButton * DPrintPreviewDialogPrivate::firstBtn","bool DPrintPreviewDialogPrivate::fontSizeMore","DComboBox * DPrintPreviewDialogPrivate::inorderCombo","bool DPrintPreviewDialogPrivate::isInited","DSpinBox * DPrintPreviewDialogPrivate::jumpPageEdit","DIconButton * DPrintPreviewDialogPrivate::lastBtn","QString DPrintPreviewDialogPrivate::lastPageRange","DIconButton * DPrintPreviewDialogPrivate::lrtbBtn","DDoubleSpinBox * DPrintPreviewDialogPrivate::marginBottomSpin","DDoubleSpinBox * DPrintPreviewDialogPrivate::marginLeftSpin","DDoubleSpinBox * DPrintPreviewDialogPrivate::marginRightSpin","DDoubleSpinBox * DPrintPreviewDialogPrivate::marginTopSpin","DComboBox * DPrintPreviewDialogPrivate::marginsCombo","bool DPrintPreviewDialogPrivate::marginsControl","DIconButton * DPrintPreviewDialogPrivate::nextPageBtn","QButtonGroup * DPrintPreviewDialogPrivate::orientationgroup","DComboBox * DPrintPreviewDialogPrivate::pagePerSheetCombo","DComboBox * DPrintPreviewDialogPrivate::pageRangeCombo","DLineEdit * DPrintPreviewDialogPrivate::pageRangeEdit","DComboBox * DPrintPreviewDialogPrivate::paperSizeCombo","DIconButton * DPrintPreviewDialogPrivate::prevPageBtn","DSuggestButton * DPrintPreviewDialogPrivate::printBtn","DComboBox * DPrintPreviewDialogPrivate::printDeviceCombo","QButtonGroup * DPrintPreviewDialogPrivate::printOrderGroup","DPrinter * DPrintPreviewDialogPrivate::printer","DPrintPreviewWidget * DPrintPreviewDialogPrivate::pview","DIconButton * DPrintPreviewDialogPrivate::rltbBtn","QButtonGroup * DPrintPreviewDialogPrivate::scaleGroup","DSpinBox * DPrintPreviewDialogPrivate::scaleRateEdit","DScrollArea * DPrintPreviewDialogPrivate::scrollarea","bool DPrintPreviewDialogPrivate::supportedColorMode","bool DPrintPreviewDialogPrivate::supportedDuplexFlag","DIconButton * DPrintPreviewDialogPrivate::tblrBtn","DIconButton * DPrintPreviewDialogPrivate::tbrlBtn","DLabel * DPrintPreviewDialogPrivate::totalPageLabel","int DPrintPreviewDialogPrivate::totalPages","DIconButton * DPrintPreviewDialogPrivate::waterColorBtn","DLineEdit * DPrintPreviewDialogPrivate::waterTextEdit","DComboBox * DPrintPreviewDialogPrivate::waterTypeCombo"]}]}
{"Filepath":"src/widgets/private/dprintpreviewwidget_p.h","Functions":[{"Uniquefunname":"    ContentItem(const QPicture *_pagePicture, QRect _pageRect, QGraphicsItem *parent = nullptr)","Funname":"ContentItem","Returntype":"","Args":"const QPicture * _pagePicture,QRect _pageRect,QGraphicsItem * parent=nullptr"},{"Uniquefunname":"    ContentItem(const QPicture *_pagePicture, QRect _pageRect, QGraphicsItem *parent = nullptr)","Funname":"ContentItem::ContentItem","Returntype":"","Args":"const QPicture * _pagePicture,QRect _pageRect,QGraphicsItem * parent=nullptr"},{"Uniquefunname":"QRectF ContentItem::boundingRect() cons)","Funname":"ContentItem::boundingRect","Returntype":"QRectF","Args":") cons"},{"Uniquefunname":"QPicture ContentItem::grayscalePaint(const QPicture \u0026 picture)","Funname":"ContentItem::grayscalePaint","Returntype":"QPicture","Args":"const QPicture \u0026 picture"},{"Uniquefunname":"QImage ContentItem::imageGrayscale(const QImage * origin)","Funname":"ContentItem::imageGrayscale","Returntype":"QImage","Args":"const QImage * origin"},{"Uniquefunname":"void ContentItem::paint(QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget)","Funname":"ContentItem::paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget"},{"Uniquefunname":"    void setRect(const QRectF \u0026rect)","Funname":"ContentItem::setRect","Returntype":"void","Args":"const QRectF \u0026 rect"},{"Uniquefunname":" DPrintPreviewWidgetPrivate(DPrintPreviewWidget * qq)","Funname":"DPrintPreviewWidgetPrivate","Returntype":"","Args":"DPrintPreviewWidget * qq"},{"Uniquefunname":" DPrintPreviewWidgetPrivate::DPrintPreviewWidgetPrivate(DPrintPreviewWidget * qq)","Funname":"DPrintPreviewWidgetPrivate::DPrintPreviewWidgetPrivate","Returntype":"","Args":"DPrintPreviewWidget * qq"},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::fitView()","Funname":"DPrintPreviewWidgetPrivate::fitView","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::generatePreview()","Funname":"DPrintPreviewWidgetPrivate::generatePreview","Returntype":"void","Args":""},{"Uniquefunname":"int DPrintPreviewWidgetPrivate::index2page(int index)","Funname":"DPrintPreviewWidgetPrivate::index2page","Returntype":"int","Args":"int index"},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::init()","Funname":"DPrintPreviewWidgetPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"int DPrintPreviewWidgetPrivate::page2index(int page)","Funname":"DPrintPreviewWidgetPrivate::page2index","Returntype":"int","Args":"int page"},{"Uniquefunname":"int DPrintPreviewWidgetPrivate::pagesCount()","Funname":"DPrintPreviewWidgetPrivate::pagesCount","Returntype":"int","Args":""},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::populateScene()","Funname":"DPrintPreviewWidgetPrivate::populateScene","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::print()","Funname":"DPrintPreviewWidgetPrivate::print","Returntype":"void","Args":""},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::setCurrentPage(int page)","Funname":"DPrintPreviewWidgetPrivate::setCurrentPage","Returntype":"void","Args":"int page"},{"Uniquefunname":"void DPrintPreviewWidgetPrivate::setPageRangeAll()","Funname":"DPrintPreviewWidgetPrivate::setPageRangeAll","Returntype":"void","Args":""},{"Uniquefunname":"int DPrintPreviewWidgetPrivate::targetPage(int page)","Funname":"DPrintPreviewWidgetPrivate::targetPage","Returntype":"int","Args":"int page"},{"Uniquefunname":"    GraphicsView(QWidget *parent = nullptr)","Funname":"GraphicsView","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"    GraphicsView(QWidget *parent = nullptr)","Funname":"GraphicsView::GraphicsView","Returntype":"","Args":"QWidget * parent=nullptr"},{"Uniquefunname":"void GraphicsView::resizeEvent(QResizeEvent * e)","Funname":"GraphicsView::resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void GraphicsView::showEvent(QShowEvent * e)","Funname":"GraphicsView::showEvent","Returntype":"void","Args":"QShowEvent * e"},{"Uniquefunname":"void GraphicsView::wheelEvent(QWheelEvent * e)","Funname":"GraphicsView::wheelEvent","Returntype":"void","Args":"QWheelEvent * e"},{"Uniquefunname":"    PageItem(int _pageNum, const QPicture *_pagePicture, QSize _paperSize, QRect _pageRect)","Funname":"PageItem","Returntype":"","Args":"int _pageNum,const QPicture * _pagePicture,QSize _paperSize,QRect _pageRect"},{"Uniquefunname":"    PageItem(int _pageNum, const QPicture *_pagePicture, QSize _paperSize, QRect _pageRect)","Funname":"PageItem::PageItem","Returntype":"","Args":"int _pageNum,const QPicture * _pagePicture,QSize _paperSize,QRect _pageRect"},{"Uniquefunname":"QRectF PageItem::boundingRect() cons)","Funname":"PageItem::boundingRect","Returntype":"QRectF","Args":") cons"},{"Uniquefunname":"int PageItem::pageNumber() cons)","Funname":"PageItem::pageNumber","Returntype":"int","Args":") cons"},{"Uniquefunname":"void PageItem::paint(QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget)","Funname":"PageItem::paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget"},{"Uniquefunname":"QRectF boundingRect() cons)","Funname":"boundingRect","Returntype":"QRectF","Args":") cons"},{"Uniquefunname":"QRectF boundingRect() cons)","Funname":"boundingRect","Returntype":"QRectF","Args":") cons"},{"Uniquefunname":"void fitView()","Funname":"fitView","Returntype":"void","Args":""},{"Uniquefunname":"void generatePreview()","Funname":"generatePreview","Returntype":"void","Args":""},{"Uniquefunname":"QPicture grayscalePaint(const QPicture \u0026 picture)","Funname":"grayscalePaint","Returntype":"QPicture","Args":"const QPicture \u0026 picture"},{"Uniquefunname":"QImage imageGrayscale(const QImage * origin)","Funname":"imageGrayscale","Returntype":"QImage","Args":"const QImage * origin"},{"Uniquefunname":"int index2page(int index)","Funname":"index2page","Returntype":"int","Args":"int index"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"int page2index(int page)","Funname":"page2index","Returntype":"int","Args":"int page"},{"Uniquefunname":"int pageNumber() cons)","Funname":"pageNumber","Returntype":"int","Args":") cons"},{"Uniquefunname":"int pagesCount()","Funname":"pagesCount","Returntype":"int","Args":""},{"Uniquefunname":"void paint(QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget)","Funname":"paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget"},{"Uniquefunname":"void paint(QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget)","Funname":"paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionGraphicsItem * item,QWidget * widget"},{"Uniquefunname":"void populateScene()","Funname":"populateScene","Returntype":"void","Args":""},{"Uniquefunname":"void print()","Funname":"print","Returntype":"void","Args":""},{"Uniquefunname":"void resizeEvent(QResizeEvent * e)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * e"},{"Uniquefunname":"void setCurrentPage(int page)","Funname":"setCurrentPage","Returntype":"void","Args":"int page"},{"Uniquefunname":"void setPageRangeAll()","Funname":"setPageRangeAll","Returntype":"void","Args":""},{"Uniquefunname":"    void setRect(const QRectF \u0026rect)","Funname":"setRect","Returntype":"void","Args":"const QRectF \u0026 rect"},{"Uniquefunname":"void showEvent(QShowEvent * e)","Funname":"showEvent","Returntype":"void","Args":"QShowEvent * e"},{"Uniquefunname":"int targetPage(int page)","Funname":"targetPage","Returntype":"int","Args":"int page"},{"Uniquefunname":"void wheelEvent(QWheelEvent * e)","Funname":"wheelEvent","Returntype":"void","Args":"QWheelEvent * e"}],"Records":[{"Name":"class:ContentItem","Fields":["QRectF ContentItem::brect","const QPicture * ContentItem::pagePicture","QRect ContentItem::pageRect"]},{"Name":"macro","Fields":["DPRINTPREVIEWWIDGET_P_H","PREVIEW_ENLARGE_RATIO","PREVIEW_NARROW_RATIO","PREVIEW_WIDGET_MARGIN_RATIO"]},{"Name":"enum:DPrintPreviewWidgetPrivate::RefreshMode","Fields":["DPrintPreviewWidgetPrivate::RefreshDelay","DPrintPreviewWidgetPrivate::RefreshImmediately","RefreshDelay","RefreshImmediately"]},{"Name":"class:DPrintPreviewWidgetPrivate","Fields":["DPrinter::ColorMode DPrintPreviewWidgetPrivate::colorMode","int DPrintPreviewWidgetPrivate::currentPageNumber","GraphicsView * DPrintPreviewWidgetPrivate::graphicsView","DPrintPreviewWidget::Imposition DPrintPreviewWidgetPrivate::imposition","bool DPrintPreviewWidgetPrivate::isGenerate","QVector\u003cint\u003e DPrintPreviewWidgetPrivate::pageRange","DPrintPreviewWidget::PageRange DPrintPreviewWidgetPrivate::pageRangeMode","QList\u003cQGraphicsItem * \u003e DPrintPreviewWidgetPrivate::pages","QList\u003cconst QPicture * \u003e DPrintPreviewWidgetPrivate::pictures","DPrinter * DPrintPreviewWidgetPrivate::previewPrinter","RefreshMode DPrintPreviewWidgetPrivate::refreshMode","qreal DPrintPreviewWidgetPrivate::scale","QGraphicsScene * DPrintPreviewWidgetPrivate::scene","QList\u003cQPicture\u003e DPrintPreviewWidgetPrivate::targetPictures"]},{"Name":"class:PageItem","Fields":["QRectF PageItem::brect","ContentItem * PageItem::content","int PageItem::pageNum","const QPicture * PageItem::pagePicture","QRect PageItem::pageRect","QSize PageItem::paperSize"]}]}
{"Filepath":"src/widgets/private/dsearchcombobox_p.h","Functions":[{"Uniquefunname":" DSearchComboBoxPrivate(DSearchComboBox * q)","Funname":"DSearchComboBoxPrivate","Returntype":"","Args":"DSearchComboBox * q"},{"Uniquefunname":" DSearchComboBoxPrivate::DSearchComboBoxPrivate(DSearchComboBox * q)","Funname":"DSearchComboBoxPrivate::DSearchComboBoxPrivate","Returntype":"","Args":"DSearchComboBox * q"}],"Records":[{"Name":"macro","Fields":["DSEARCHCOMBOBOX_P_H"]},{"Name":"class:DSearchComboBoxPrivate","Fields":["QCompleter * DSearchComboBoxPrivate::completer","int DSearchComboBoxPrivate::height","QSortFilterProxyModel * DSearchComboBoxPrivate::proxyModel","DSearchEdit * DSearchComboBoxPrivate::searchEdit"]}]}
{"Filepath":"src/widgets/private/dsearchedit_p.h","Functions":[{"Uniquefunname":" DSearchEditPrivate(DSearchEdit * q)","Funname":"DSearchEditPrivate","Returntype":"","Args":"DSearchEdit * q"},{"Uniquefunname":" DSearchEditPrivate::DSearchEditPrivate(DSearchEdit * q)","Funname":"DSearchEditPrivate::DSearchEditPrivate","Returntype":"","Args":"DSearchEdit * q"},{"Uniquefunname":"void DSearchEditPrivate::_q_clearFocus()","Funname":"DSearchEditPrivate::_q_clearFocus","Returntype":"void","Args":""},{"Uniquefunname":"void DSearchEditPrivate::_q_onVoiceActionTrigger(bool checked)","Funname":"DSearchEditPrivate::_q_onVoiceActionTrigger","Returntype":"void","Args":"bool checked"},{"Uniquefunname":"void DSearchEditPrivate::_q_toEditMode(bool focus)","Funname":"DSearchEditPrivate::_q_toEditMode","Returntype":"void","Args":"bool focus"},{"Uniquefunname":"void DSearchEditPrivate::init()","Funname":"DSearchEditPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DSearchEditPrivate::~DSearchEditPrivate()","Funname":"DSearchEditPrivate::~DSearchEditPrivate","Returntype":"","Args":""},{"Uniquefunname":"void _q_clearFocus()","Funname":"_q_clearFocus","Returntype":"void","Args":""},{"Uniquefunname":"void _q_onVoiceActionTrigger(bool checked)","Funname":"_q_onVoiceActionTrigger","Returntype":"void","Args":"bool checked"},{"Uniquefunname":"void _q_toEditMode(bool focus)","Funname":"_q_toEditMode","Returntype":"void","Args":"bool focus"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":" ~DSearchEditPrivate()","Funname":"~DSearchEditPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DSEARCHEDIT_P_H"]},{"Name":"class:DSearchEditPrivate","Fields":["QAction * DSearchEditPrivate::action","QWidget * DSearchEditPrivate::iconWidget","QLabel * DSearchEditPrivate::label","QString DSearchEditPrivate::placeHolder","QString DSearchEditPrivate::placeholderText","QAction * DSearchEditPrivate::voiceAction","VoiceDevice * DSearchEditPrivate::voiceIODevice","QAudioInput * DSearchEditPrivate::voiceInput"]}]}
{"Filepath":"src/widgets/private/dslider_p.h","Functions":[{"Uniquefunname":" DSliderPrivate(DSlider * q)","Funname":"DSliderPrivate","Returntype":"","Args":"DSlider * q"},{"Uniquefunname":" DSliderPrivate::DSliderPrivate(DSlider * q)","Funname":"DSliderPrivate::DSliderPrivate","Returntype":"","Args":"DSlider * q"},{"Uniquefunname":"void DSliderPrivate::init()","Funname":"DSliderPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DSliderPrivate::updtateTool(int value)","Funname":"DSliderPrivate::updtateTool","Returntype":"void","Args":"int value"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void updtateTool(int value)","Funname":"updtateTool","Returntype":"void","Args":"int value"}],"Records":[{"Name":"macro","Fields":["DSLIDER_P_H"]},{"Name":"class:DSliderPrivate","Fields":["QSlider::TickPosition DSliderPrivate::aleDirection","bool DSliderPrivate::handleVisible","QSize DSliderPrivate::iconSize","DLabel * DSliderPrivate::label","QGridLayout * DSliderPrivate::layout","SliderStrip * DSliderPrivate::left","DIconButton * DSliderPrivate::leftIcon","bool DSliderPrivate::mouseWheelEnabled","Qt::Orientation DSliderPrivate::orientation","SliderStrip * DSliderPrivate::right","DIconButton * DSliderPrivate::rightIcon","SpecialSlider * DSliderPrivate::slider","DFloatingWidget * DSliderPrivate::tipvalue"]}]}
{"Filepath":"src/widgets/private/dspinbox_p.h","Functions":[{"Uniquefunname":" DDoubleSpinBoxPrivate(DDoubleSpinBox * parent)","Funname":"DDoubleSpinBoxPrivate","Returntype":"","Args":"DDoubleSpinBox * parent"},{"Uniquefunname":" DDoubleSpinBoxPrivate::DDoubleSpinBoxPrivate(DDoubleSpinBox * parent)","Funname":"DDoubleSpinBoxPrivate::DDoubleSpinBoxPrivate","Returntype":"","Args":"DDoubleSpinBox * parent"},{"Uniquefunname":"void DDoubleSpinBoxPrivate::init()","Funname":"DDoubleSpinBoxPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DSpinBoxPrivate(DSpinBox * parent)","Funname":"DSpinBoxPrivate","Returntype":"","Args":"DSpinBox * parent"},{"Uniquefunname":" DSpinBoxPrivate::DSpinBoxPrivate(DSpinBox * parent)","Funname":"DSpinBoxPrivate::DSpinBoxPrivate","Returntype":"","Args":"DSpinBox * parent"},{"Uniquefunname":"void DSpinBoxPrivate::init()","Funname":"DSpinBoxPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"class:DDoubleSpinBoxPrivate","Fields":["DLineEdit * DDoubleSpinBoxPrivate::lineEdit"]},{"Name":"macro","Fields":["DSPINBOX_P_H"]},{"Name":"class:DSpinBoxPrivate","Fields":["DLineEdit * DSpinBoxPrivate::lineEdit"]}]}
{"Filepath":"src/widgets/private/dstackwidget_p.h","Functions":[{"Uniquefunname":" DAbstractStackWidgetTransitionPrivate(DAbstractStackWidgetTransition * qq)","Funname":"DAbstractStackWidgetTransitionPrivate","Returntype":"","Args":"DAbstractStackWidgetTransition * qq"},{"Uniquefunname":" DAbstractStackWidgetTransitionPrivate::DAbstractStackWidgetTransitionPrivate(DAbstractStackWidgetTransition * qq)","Funname":"DAbstractStackWidgetTransitionPrivate::DAbstractStackWidgetTransitionPrivate","Returntype":"","Args":"DAbstractStackWidgetTransition * qq"},{"Uniquefunname":"void DAbstractStackWidgetTransitionPrivate::init()","Funname":"DAbstractStackWidgetTransitionPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DAbstractStackWidgetTransitionPrivate::~DAbstractStackWidgetTransitionPrivate()","Funname":"DAbstractStackWidgetTransitionPrivate::~DAbstractStackWidgetTransitionPrivate","Returntype":"","Args":""},{"Uniquefunname":" DStackWidgetPrivate(DStackWidget * qq)","Funname":"DStackWidgetPrivate","Returntype":"","Args":"DStackWidget * qq"},{"Uniquefunname":" DStackWidgetPrivate::DStackWidgetPrivate(DStackWidget * qq)","Funname":"DStackWidgetPrivate::DStackWidgetPrivate","Returntype":"","Args":"DStackWidget * qq"},{"Uniquefunname":"void DStackWidgetPrivate::init()","Funname":"DStackWidgetPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DStackWidgetPrivate::setCurrentIndex(int index)","Funname":"DStackWidgetPrivate::setCurrentIndex","Returntype":"void","Args":"int index"},{"Uniquefunname":" DStackWidgetPrivate::~DStackWidgetPrivate()","Funname":"DStackWidgetPrivate::~DStackWidgetPrivate","Returntype":"","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void setCurrentIndex(int index)","Funname":"setCurrentIndex","Returntype":"void","Args":"int index"},{"Uniquefunname":" ~DAbstractStackWidgetTransitionPrivate()","Funname":"~DAbstractStackWidgetTransitionPrivate","Returntype":"","Args":""},{"Uniquefunname":" ~DStackWidgetPrivate()","Funname":"~DStackWidgetPrivate","Returntype":"","Args":""}],"Records":[{"Name":"class:DAbstractStackWidgetTransitionPrivate","Fields":["QVariantAnimation * DAbstractStackWidgetTransitionPrivate::animation","DAbstractStackWidgetTransition::TransitionInfo DAbstractStackWidgetTransitionPrivate::info"]},{"Name":"macro","Fields":["DSTACKWIDGET_P_H"]},{"Name":"class:DStackWidgetPrivate","Fields":["int DStackWidgetPrivate::currentIndex","QWidget * DStackWidgetPrivate::currentWidget","DAbstractStackWidgetTransition * DStackWidgetPrivate::transition"]}]}
{"Filepath":"src/widgets/private/dswitchbutton_p.h","Functions":[{"Uniquefunname":" DSwitchButtonPrivate(DSwitchButton * qq)","Funname":"DSwitchButtonPrivate","Returntype":"","Args":"DSwitchButton * qq"},{"Uniquefunname":" DSwitchButtonPrivate::DSwitchButtonPrivate(DSwitchButton * qq)","Funname":"DSwitchButtonPrivate::DSwitchButtonPrivate","Returntype":"","Args":"DSwitchButton * qq"},{"Uniquefunname":"void DSwitchButtonPrivate::init()","Funname":"DSwitchButtonPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":" DSwitchButtonPrivate::~DSwitchButtonPrivate()","Funname":"DSwitchButtonPrivate::~DSwitchButtonPrivate","Returntype":"","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":" ~DSwitchButtonPrivate()","Funname":"~DSwitchButtonPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DSWITCHBUTTON_P_H"]},{"Name":"class:DSwitchButtonPrivate","Fields":["double DSwitchButtonPrivate::animationEndValue","double DSwitchButtonPrivate::animationStartValue","bool DSwitchButtonPrivate::checked","QColor DSwitchButtonPrivate::checkedBackground","QColor DSwitchButtonPrivate::disabledBackground","QColor DSwitchButtonPrivate::enabledBackground"]}]}
{"Filepath":"src/widgets/private/dthemehelper.h","Functions":[{"Uniquefunname":" DThemeHelper(QObject * parent=0)","Funname":"DThemeHelper","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DThemeHelper::DThemeHelper(QObject * parent=0)","Funname":"DThemeHelper::DThemeHelper","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"QString DThemeHelper::themeToQss(QString theme)","Funname":"DThemeHelper::themeToQss","Returntype":"QString","Args":"QString theme"},{"Uniquefunname":"QString DThemeHelper::trimThemeContents(QString qss)","Funname":"DThemeHelper::trimThemeContents","Returntype":"QString","Args":"QString qss"},{"Uniquefunname":"QString themeToQss(QString theme)","Funname":"themeToQss","Returntype":"QString","Args":"QString theme"},{"Uniquefunname":"QString trimThemeContents(QString qss)","Funname":"trimThemeContents","Returntype":"QString","Args":"QString qss"}],"Records":[{"Name":"macro","Fields":["DTHEMEHELPER_H"]}]}
{"Filepath":"src/widgets/private/dtickeffect_p.h","Functions":[{"Uniquefunname":" DTickEffectPrivate(DTickEffect * qq)","Funname":"DTickEffectPrivate","Returntype":"","Args":"DTickEffect * qq"},{"Uniquefunname":" DTickEffectPrivate::DTickEffectPrivate(DTickEffect * qq)","Funname":"DTickEffectPrivate::DTickEffectPrivate","Returntype":"","Args":"DTickEffect * qq"},{"Uniquefunname":"void DTickEffectPrivate::init()","Funname":"DTickEffectPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void DTickEffectPrivate::initDirection()","Funname":"DTickEffectPrivate::initDirection","Returntype":"void","Args":""},{"Uniquefunname":" DTickEffectPrivate::~DTickEffectPrivate()","Funname":"DTickEffectPrivate::~DTickEffectPrivate","Returntype":"","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void initDirection()","Funname":"initDirection","Returntype":"void","Args":""},{"Uniquefunname":" ~DTickEffectPrivate()","Funname":"~DTickEffectPrivate","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DTICKEFFECTPRIVATE_H"]},{"Name":"class:DTickEffectPrivate","Fields":["QWidget * DTickEffectPrivate::content","DTickEffect::Direction DTickEffectPrivate::direction","int DTickEffectPrivate::duration","int DTickEffectPrivate::fixPixel","QVariantAnimation * DTickEffectPrivate::runAnimation"]}]}
{"Filepath":"src/widgets/private/dtiplabel_p.h","Functions":[{"Uniquefunname":" DTipLabelPrivate(DTipLabel * q)","Funname":"DTipLabelPrivate","Returntype":"","Args":"DTipLabel * q"},{"Uniquefunname":" DTipLabelPrivate::DTipLabelPrivate(DTipLabel * q)","Funname":"DTipLabelPrivate::DTipLabelPrivate","Returntype":"","Args":"DTipLabel * q"},{"Uniquefunname":"void DTipLabelPrivate::init()","Funname":"DTipLabelPrivate::init","Returntype":"void","Args":""},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["DTIPLABEL_P_H"]}]}
{"Filepath":"src/widgets/private/keyboardmonitor/dkeyboardmonitor.h","Functions":[{"Uniquefunname":" DKeyboardMonitor()","Funname":"DKeyboardMonitor","Returntype":"","Args":""},{"Uniquefunname":" DKeyboardMonitor::DKeyboardMonitor()","Funname":"DKeyboardMonitor::DKeyboardMonitor","Returntype":"","Args":""},{"Uniquefunname":"DKeyboardMonitor * DKeyboardMonitor::instance()","Funname":"DKeyboardMonitor::instance","Returntype":"DKeyboardMonitor *","Args":""},{"Uniquefunname":"bool DKeyboardMonitor::isCapslockOn()","Funname":"DKeyboardMonitor::isCapslockOn","Returntype":"bool","Args":""},{"Uniquefunname":"bool DKeyboardMonitor::isNumlockOn()","Funname":"DKeyboardMonitor::isNumlockOn","Returntype":"bool","Args":""},{"Uniquefunname":"int DKeyboardMonitor::listen(Display * display)","Funname":"DKeyboardMonitor::listen","Returntype":"int","Args":"Display * display"},{"Uniquefunname":"void DKeyboardMonitor::numlockStatusChanged(bool on)","Funname":"DKeyboardMonitor::numlockStatusChanged","Returntype":"void","Args":"bool on"},{"Uniquefunname":"void DKeyboardMonitor::run()","Funname":"DKeyboardMonitor::run","Returntype":"void","Args":""},{"Uniquefunname":"bool DKeyboardMonitor::setNumlockStatus(const bool \u0026 on)","Funname":"DKeyboardMonitor::setNumlockStatus","Returntype":"bool","Args":"const bool \u0026 on"},{"Uniquefunname":"DKeyboardMonitor * instance()","Funname":"instance","Returntype":"DKeyboardMonitor *","Args":""},{"Uniquefunname":"bool isCapslockOn()","Funname":"isCapslockOn","Returntype":"bool","Args":""},{"Uniquefunname":"bool isNumlockOn()","Funname":"isNumlockOn","Returntype":"bool","Args":""},{"Uniquefunname":"int listen(Display * display)","Funname":"listen","Returntype":"int","Args":"Display * display"},{"Uniquefunname":"void numlockStatusChanged(bool on)","Funname":"numlockStatusChanged","Returntype":"void","Args":"bool on"},{"Uniquefunname":"void run()","Funname":"run","Returntype":"void","Args":""},{"Uniquefunname":"bool setNumlockStatus(const bool \u0026 on)","Funname":"setNumlockStatus","Returntype":"bool","Args":"const bool \u0026 on"}],"Records":[{"Name":"macro","Fields":["KEYBOARDMONITOR_H"]}]}
{"Filepath":"src/widgets/private/mpris/dbusinterface.h","Functions":[{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e AddMatch(const QString \u0026in0)","Funname":"AddMatch","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":" DBusInterface(const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0)","Funname":"DBusInterface","Returntype":"","Args":"const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e AddMatch(const QString \u0026in0)","Funname":"DBusInterface::AddMatch","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":" DBusInterface::DBusInterface(const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0)","Funname":"DBusInterface::DBusInterface","Returntype":"","Args":"const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQByteArray\u003e GetAdtAuditSessionData(const QString \u0026in0)","Funname":"DBusInterface::GetAdtAuditSessionData","Returntype":"QDBusPendingReply\u003cQByteArray\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQByteArray\u003e GetConnectionSELinuxSecurityContext(const QString \u0026in0)","Funname":"DBusInterface::GetConnectionSELinuxSecurityContext","Returntype":"QDBusPendingReply\u003cQByteArray\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e GetConnectionUnixProcessID(const QString \u0026in0)","Funname":"DBusInterface::GetConnectionUnixProcessID","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e GetConnectionUnixUser(const QString \u0026in0)","Funname":"DBusInterface::GetConnectionUnixUser","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQString\u003e GetId()","Funname":"DBusInterface::GetId","Returntype":"QDBusPendingReply\u003cQString\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQString\u003e GetNameOwner(const QString \u0026in0)","Funname":"DBusInterface::GetNameOwner","Returntype":"QDBusPendingReply\u003cQString\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQString\u003e Hello()","Funname":"DBusInterface::Hello","Returntype":"QDBusPendingReply\u003cQString\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQStringList\u003e ListActivatableNames()","Funname":"DBusInterface::ListActivatableNames","Returntype":"QDBusPendingReply\u003cQStringList\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQStringList\u003e ListNames()","Funname":"DBusInterface::ListNames","Returntype":"QDBusPendingReply\u003cQStringList\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQStringList\u003e ListQueuedOwners(const QString \u0026in0)","Funname":"DBusInterface::ListQueuedOwners","Returntype":"QDBusPendingReply\u003cQStringList\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cbool\u003e NameHasOwner(const QString \u0026in0)","Funname":"DBusInterface::NameHasOwner","Returntype":"QDBusPendingReply\u003cbool\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"void DBusInterface::NameLost(const QString \u0026 in0)","Funname":"DBusInterface::NameLost","Returntype":"void","Args":"const QString \u0026 in0"},{"Uniquefunname":"void DBusInterface::NameOwnerChanged(const QString \u0026 in0,const QString \u0026 in1,const QString \u0026 in2)","Funname":"DBusInterface::NameOwnerChanged","Returntype":"void","Args":"const QString \u0026 in0,const QString \u0026 in1,const QString \u0026 in2"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e ReleaseName(const QString \u0026in0)","Funname":"DBusInterface::ReleaseName","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e ReloadConfig()","Funname":"DBusInterface::ReloadConfig","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e RemoveMatch(const QString \u0026in0)","Funname":"DBusInterface::RemoveMatch","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e RequestName(const QString \u0026in0, uint in1)","Funname":"DBusInterface::RequestName","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0,uint in1"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e StartServiceByName(const QString \u0026in0, uint in1)","Funname":"DBusInterface::StartServiceByName","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0,uint in1"},{"Uniquefunname":"    Q_SLOT void __propertyChanged__(const QDBusMessage\u0026 msg)","Funname":"DBusInterface::__propertyChanged__","Returntype":"Q_OBJECT Q_SLOT void","Args":"const QDBusMessage \u0026 msg"},{"Uniquefunname":"    static inline const char *staticInterfaceName()","Funname":"DBusInterface::staticInterfaceName","Returntype":"const char *","Args":""},{"Uniquefunname":" DBusInterface::~DBusInterface()","Funname":"DBusInterface::~DBusInterface","Returntype":"","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQByteArray\u003e GetAdtAuditSessionData(const QString \u0026in0)","Funname":"GetAdtAuditSessionData","Returntype":"QDBusPendingReply\u003cQByteArray\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQByteArray\u003e GetConnectionSELinuxSecurityContext(const QString \u0026in0)","Funname":"GetConnectionSELinuxSecurityContext","Returntype":"QDBusPendingReply\u003cQByteArray\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e GetConnectionUnixProcessID(const QString \u0026in0)","Funname":"GetConnectionUnixProcessID","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e GetConnectionUnixUser(const QString \u0026in0)","Funname":"GetConnectionUnixUser","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQString\u003e GetId()","Funname":"GetId","Returntype":"QDBusPendingReply\u003cQString\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQString\u003e GetNameOwner(const QString \u0026in0)","Funname":"GetNameOwner","Returntype":"QDBusPendingReply\u003cQString\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cQString\u003e Hello()","Funname":"Hello","Returntype":"QDBusPendingReply\u003cQString\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQStringList\u003e ListActivatableNames()","Funname":"ListActivatableNames","Returntype":"QDBusPendingReply\u003cQStringList\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQStringList\u003e ListNames()","Funname":"ListNames","Returntype":"QDBusPendingReply\u003cQStringList\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003cQStringList\u003e ListQueuedOwners(const QString \u0026in0)","Funname":"ListQueuedOwners","Returntype":"QDBusPendingReply\u003cQStringList\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cbool\u003e NameHasOwner(const QString \u0026in0)","Funname":"NameHasOwner","Returntype":"QDBusPendingReply\u003cbool\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"void NameLost(const QString \u0026 in0)","Funname":"NameLost","Returntype":"void","Args":"const QString \u0026 in0"},{"Uniquefunname":"void NameOwnerChanged(const QString \u0026 in0,const QString \u0026 in1,const QString \u0026 in2)","Funname":"NameOwnerChanged","Returntype":"void","Args":"const QString \u0026 in0,const QString \u0026 in1,const QString \u0026 in2"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e ReleaseName(const QString \u0026in0)","Funname":"ReleaseName","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e ReloadConfig()","Funname":"ReloadConfig","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e RemoveMatch(const QString \u0026in0)","Funname":"RemoveMatch","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QString \u0026 in0"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e RequestName(const QString \u0026in0, uint in1)","Funname":"RequestName","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0,uint in1"},{"Uniquefunname":"    inline QDBusPendingReply\u003cuint\u003e StartServiceByName(const QString \u0026in0, uint in1)","Funname":"StartServiceByName","Returntype":"QDBusPendingReply\u003cuint\u003e","Args":"const QString \u0026 in0,uint in1"},{"Uniquefunname":"    Q_SLOT void __propertyChanged__(const QDBusMessage\u0026 msg)","Funname":"__propertyChanged__","Returntype":"Q_OBJECT Q_SLOT void","Args":"const QDBusMessage \u0026 msg"},{"Uniquefunname":"    static inline const char *staticInterfaceName()","Funname":"staticInterfaceName","Returntype":"const char *","Args":""},{"Uniquefunname":" ~DBusInterface()","Funname":"~DBusInterface","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DBUSINTERFACE_H"]},{"Name":"namespace","Fields":["freedesktop","org","org::freedesktop"]}]}
{"Filepath":"src/widgets/private/mpris/dbusmpris.h","Functions":[{"Uniquefunname":"void CanControlChanged(bool value)","Funname":"CanControlChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void CanGoNextChanged(bool value)","Funname":"CanGoNextChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void CanGoPreviousChanged(bool value)","Funname":"CanGoPreviousChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void CanPauseChanged(bool value)","Funname":"CanPauseChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void CanPlayChanged(bool value)","Funname":"CanPlayChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void CanSeekChanged(bool value)","Funname":"CanSeekChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void CanShowInUIChanged(bool value)","Funname":"CanShowInUIChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":" DBusMPRIS(const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0)","Funname":"DBusMPRIS","Returntype":"","Args":"const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0"},{"Uniquefunname":"void DBusMPRIS::CanControlChanged(bool value)","Funname":"DBusMPRIS::CanControlChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBusMPRIS::CanGoNextChanged(bool value)","Funname":"DBusMPRIS::CanGoNextChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBusMPRIS::CanGoPreviousChanged(bool value)","Funname":"DBusMPRIS::CanGoPreviousChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBusMPRIS::CanPauseChanged(bool value)","Funname":"DBusMPRIS::CanPauseChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBusMPRIS::CanPlayChanged(bool value)","Funname":"DBusMPRIS::CanPlayChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBusMPRIS::CanSeekChanged(bool value)","Funname":"DBusMPRIS::CanSeekChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"void DBusMPRIS::CanShowInUIChanged(bool value)","Funname":"DBusMPRIS::CanShowInUIChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":" DBusMPRIS::DBusMPRIS(const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0)","Funname":"DBusMPRIS::DBusMPRIS","Returntype":"","Args":"const QString \u0026 service,const QString \u0026 path,const QDBusConnection \u0026 connection,QObject * parent=0"},{"Uniquefunname":"void DBusMPRIS::LoopStatusChanged(const QString \u0026 value)","Funname":"DBusMPRIS::LoopStatusChanged","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"void DBusMPRIS::MaximumRateChanged(double value)","Funname":"DBusMPRIS::MaximumRateChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"void DBusMPRIS::MetadataChanged(const QVariantMap \u0026 value)","Funname":"DBusMPRIS::MetadataChanged","Returntype":"void","Args":"const QVariantMap \u0026 value"},{"Uniquefunname":"void DBusMPRIS::MinimumRateChanged(double value)","Funname":"DBusMPRIS::MinimumRateChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Next()","Funname":"DBusMPRIS::Next","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e OpenUri(const QString \u0026Uri)","Funname":"DBusMPRIS::OpenUri","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QString \u0026 Uri"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Pause()","Funname":"DBusMPRIS::Pause","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Play()","Funname":"DBusMPRIS::Play","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e PlayPause()","Funname":"DBusMPRIS::PlayPause","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"void DBusMPRIS::PlaybackStatusChanged(const QString \u0026 value)","Funname":"DBusMPRIS::PlaybackStatusChanged","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"void DBusMPRIS::PositionChanged(qlonglong value)","Funname":"DBusMPRIS::PositionChanged","Returntype":"void","Args":"qlonglong value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Previous()","Funname":"DBusMPRIS::Previous","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    Q_PROPERTY(QString LoopStatus READ loopStatus WRITE setLoopStatus NOTIFY LoopStatusChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"QString LoopStatus READ loopStatus WRITE setLoopStatus NOTIFY LoopStatusChanged"},{"Uniquefunname":"    Q_PROPERTY(QString PlaybackStatus READ playbackStatus NOTIFY PlaybackStatusChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"QString PlaybackStatus READ playbackStatus NOTIFY PlaybackStatusChanged"},{"Uniquefunname":"    Q_PROPERTY(QVariantMap Metadata READ metadata NOTIFY MetadataChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"QVariantMap Metadata READ metadata NOTIFY MetadataChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanControl READ canControl NOTIFY CanControlChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanControl READ canControl NOTIFY CanControlChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanGoNext READ canGoNext NOTIFY CanGoNextChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanGoNext READ canGoNext NOTIFY CanGoNextChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanGoPrevious READ canGoPrevious NOTIFY CanGoPreviousChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanGoPrevious READ canGoPrevious NOTIFY CanGoPreviousChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanPause READ canPause NOTIFY CanPauseChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanPause READ canPause NOTIFY CanPauseChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanPlay READ canPlay NOTIFY CanPlayChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanPlay READ canPlay NOTIFY CanPlayChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanSeek READ canSeek NOTIFY CanSeekChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanSeek READ canSeek NOTIFY CanSeekChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanShowInUI READ canShowInUI NOTIFY CanShowInUIChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool CanShowInUI READ canShowInUI NOTIFY CanShowInUIChanged"},{"Uniquefunname":"    Q_PROPERTY(bool Shuffle READ shuffle WRITE setShuffle NOTIFY ShuffleChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"bool Shuffle READ shuffle WRITE setShuffle NOTIFY ShuffleChanged"},{"Uniquefunname":"    Q_PROPERTY(double MaximumRate READ maximumRate NOTIFY MaximumRateChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"double MaximumRate READ maximumRate NOTIFY MaximumRateChanged"},{"Uniquefunname":"    Q_PROPERTY(double MinimumRate READ minimumRate NOTIFY MinimumRateChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"double MinimumRate READ minimumRate NOTIFY MinimumRateChanged"},{"Uniquefunname":"    Q_PROPERTY(double Rate READ rate WRITE setRate NOTIFY RateChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"double Rate READ rate WRITE setRate NOTIFY RateChanged"},{"Uniquefunname":"    Q_PROPERTY(double Volume READ volume WRITE setVolume NOTIFY VolumeChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"double Volume READ volume WRITE setVolume NOTIFY VolumeChanged"},{"Uniquefunname":"    Q_PROPERTY(qlonglong Position READ position NOTIFY PositionChanged)","Funname":"DBusMPRIS::Q_PROPERTY","Returntype":"","Args":"qlonglong Position READ position NOTIFY PositionChanged"},{"Uniquefunname":"void DBusMPRIS::RateChanged(double value)","Funname":"DBusMPRIS::RateChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Seek(qlonglong Offset)","Funname":"DBusMPRIS::Seek","Returntype":"QDBusPendingReply\u003c\u003e","Args":"qlonglong Offset"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e SetPosition(const QDBusObjectPath \u0026TrackId, qlonglong Position)","Funname":"DBusMPRIS::SetPosition","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QDBusObjectPath \u0026 TrackId,qlonglong Position"},{"Uniquefunname":"void DBusMPRIS::ShuffleChanged(bool value)","Funname":"DBusMPRIS::ShuffleChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Stop()","Funname":"DBusMPRIS::Stop","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"void DBusMPRIS::VolumeChanged(double value)","Funname":"DBusMPRIS::VolumeChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"    Q_SLOT void __propertyChanged__(const QDBusMessage\u0026 msg)","Funname":"DBusMPRIS::__propertyChanged__","Returntype":"Q_OBJECT Q_SLOT void","Args":"const QDBusMessage \u0026 msg"},{"Uniquefunname":"    inline void setLoopStatus(const QString \u0026value)","Funname":"DBusMPRIS::setLoopStatus","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"    inline void setRate(double value)","Funname":"DBusMPRIS::setRate","Returntype":"void","Args":"double value"},{"Uniquefunname":"    inline void setShuffle(bool value)","Funname":"DBusMPRIS::setShuffle","Returntype":"void","Args":"bool value"},{"Uniquefunname":"    inline void setVolume(double value)","Funname":"DBusMPRIS::setVolume","Returntype":"void","Args":"double value"},{"Uniquefunname":"    static inline const char *staticInterfaceName()","Funname":"DBusMPRIS::staticInterfaceName","Returntype":"const char *","Args":""},{"Uniquefunname":" DBusMPRIS::~DBusMPRIS()","Funname":"DBusMPRIS::~DBusMPRIS","Returntype":"","Args":""},{"Uniquefunname":"void LoopStatusChanged(const QString \u0026 value)","Funname":"LoopStatusChanged","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"void MaximumRateChanged(double value)","Funname":"MaximumRateChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"void MetadataChanged(const QVariantMap \u0026 value)","Funname":"MetadataChanged","Returntype":"void","Args":"const QVariantMap \u0026 value"},{"Uniquefunname":"void MinimumRateChanged(double value)","Funname":"MinimumRateChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Next()","Funname":"Next","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e OpenUri(const QString \u0026Uri)","Funname":"OpenUri","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QString \u0026 Uri"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Pause()","Funname":"Pause","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Play()","Funname":"Play","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e PlayPause()","Funname":"PlayPause","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"void PlaybackStatusChanged(const QString \u0026 value)","Funname":"PlaybackStatusChanged","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"void PositionChanged(qlonglong value)","Funname":"PositionChanged","Returntype":"void","Args":"qlonglong value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Previous()","Funname":"Previous","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"    Q_PROPERTY(QString LoopStatus READ loopStatus WRITE setLoopStatus NOTIFY LoopStatusChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"QString LoopStatus READ loopStatus WRITE setLoopStatus NOTIFY LoopStatusChanged"},{"Uniquefunname":"    Q_PROPERTY(QString PlaybackStatus READ playbackStatus NOTIFY PlaybackStatusChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"QString PlaybackStatus READ playbackStatus NOTIFY PlaybackStatusChanged"},{"Uniquefunname":"    Q_PROPERTY(QVariantMap Metadata READ metadata NOTIFY MetadataChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"QVariantMap Metadata READ metadata NOTIFY MetadataChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanControl READ canControl NOTIFY CanControlChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanControl READ canControl NOTIFY CanControlChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanGoNext READ canGoNext NOTIFY CanGoNextChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanGoNext READ canGoNext NOTIFY CanGoNextChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanGoPrevious READ canGoPrevious NOTIFY CanGoPreviousChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanGoPrevious READ canGoPrevious NOTIFY CanGoPreviousChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanPause READ canPause NOTIFY CanPauseChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanPause READ canPause NOTIFY CanPauseChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanPlay READ canPlay NOTIFY CanPlayChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanPlay READ canPlay NOTIFY CanPlayChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanSeek READ canSeek NOTIFY CanSeekChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanSeek READ canSeek NOTIFY CanSeekChanged"},{"Uniquefunname":"    Q_PROPERTY(bool CanShowInUI READ canShowInUI NOTIFY CanShowInUIChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool CanShowInUI READ canShowInUI NOTIFY CanShowInUIChanged"},{"Uniquefunname":"    Q_PROPERTY(bool Shuffle READ shuffle WRITE setShuffle NOTIFY ShuffleChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool Shuffle READ shuffle WRITE setShuffle NOTIFY ShuffleChanged"},{"Uniquefunname":"    Q_PROPERTY(double MaximumRate READ maximumRate NOTIFY MaximumRateChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"double MaximumRate READ maximumRate NOTIFY MaximumRateChanged"},{"Uniquefunname":"    Q_PROPERTY(double MinimumRate READ minimumRate NOTIFY MinimumRateChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"double MinimumRate READ minimumRate NOTIFY MinimumRateChanged"},{"Uniquefunname":"    Q_PROPERTY(double Rate READ rate WRITE setRate NOTIFY RateChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"double Rate READ rate WRITE setRate NOTIFY RateChanged"},{"Uniquefunname":"    Q_PROPERTY(double Volume READ volume WRITE setVolume NOTIFY VolumeChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"double Volume READ volume WRITE setVolume NOTIFY VolumeChanged"},{"Uniquefunname":"    Q_PROPERTY(qlonglong Position READ position NOTIFY PositionChanged)","Funname":"Q_PROPERTY","Returntype":"","Args":"qlonglong Position READ position NOTIFY PositionChanged"},{"Uniquefunname":"void RateChanged(double value)","Funname":"RateChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Seek(qlonglong Offset)","Funname":"Seek","Returntype":"QDBusPendingReply\u003c\u003e","Args":"qlonglong Offset"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e SetPosition(const QDBusObjectPath \u0026TrackId, qlonglong Position)","Funname":"SetPosition","Returntype":"QDBusPendingReply\u003c\u003e","Args":"const QDBusObjectPath \u0026 TrackId,qlonglong Position"},{"Uniquefunname":"void ShuffleChanged(bool value)","Funname":"ShuffleChanged","Returntype":"void","Args":"bool value"},{"Uniquefunname":"    inline QDBusPendingReply\u003c\u003e Stop()","Funname":"Stop","Returntype":"QDBusPendingReply\u003c\u003e","Args":""},{"Uniquefunname":"void VolumeChanged(double value)","Funname":"VolumeChanged","Returntype":"void","Args":"double value"},{"Uniquefunname":"    Q_SLOT void __propertyChanged__(const QDBusMessage\u0026 msg)","Funname":"__propertyChanged__","Returntype":"Q_OBJECT Q_SLOT void","Args":"const QDBusMessage \u0026 msg"},{"Uniquefunname":"    inline void setLoopStatus(const QString \u0026value)","Funname":"setLoopStatus","Returntype":"void","Args":"const QString \u0026 value"},{"Uniquefunname":"    inline void setRate(double value)","Funname":"setRate","Returntype":"void","Args":"double value"},{"Uniquefunname":"    inline void setShuffle(bool value)","Funname":"setShuffle","Returntype":"void","Args":"bool value"},{"Uniquefunname":"    inline void setVolume(double value)","Funname":"setVolume","Returntype":"void","Args":"double value"},{"Uniquefunname":"    static inline const char *staticInterfaceName()","Funname":"staticInterfaceName","Returntype":"const char *","Args":""},{"Uniquefunname":" ~DBusMPRIS()","Funname":"~DBusMPRIS","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["DBUSMPRIS_H"]},{"Name":"namespace","Fields":["MediaPlayer2","mpris","org","org::mpris","org::mpris::MediaPlayer2"]}]}
{"Filepath":"src/widgets/private/mpris/dmprismonitor.h","Functions":[{"Uniquefunname":" DMPRISMonitor(QObject * parent=0)","Funname":"DMPRISMonitor","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":" DMPRISMonitor::DMPRISMonitor(QObject * parent=0)","Funname":"DMPRISMonitor::DMPRISMonitor","Returntype":"","Args":"QObject * parent=0"},{"Uniquefunname":"void DMPRISMonitor::init()","Funname":"DMPRISMonitor::init","Returntype":"void","Args":""},{"Uniquefunname":"void DMPRISMonitor::mprisLost(const QString \u0026 path) cons)","Funname":"DMPRISMonitor::mprisLost","Returntype":"void","Args":"const QString \u0026 path) cons"},{"Uniquefunname":"void DMPRISMonitor::onNameOwnerChanged(const QString \u0026 name,const QString \u0026 oldOwner,const QString \u0026 newOwner)","Funname":"DMPRISMonitor::onNameOwnerChanged","Returntype":"void","Args":"const QString \u0026 name,const QString \u0026 oldOwner,const QString \u0026 newOwner"},{"Uniquefunname":"void init()","Funname":"init","Returntype":"void","Args":""},{"Uniquefunname":"void mprisLost(const QString \u0026 path) cons)","Funname":"mprisLost","Returntype":"void","Args":"const QString \u0026 path) cons"},{"Uniquefunname":"void onNameOwnerChanged(const QString \u0026 name,const QString \u0026 oldOwner,const QString \u0026 newOwner)","Funname":"onNameOwnerChanged","Returntype":"void","Args":"const QString \u0026 name,const QString \u0026 oldOwner,const QString \u0026 newOwner"}],"Records":[{"Name":"macro","Fields":["DMPRISMONITOR_H"]},{"Name":"class:DMPRISMonitor","Fields":["DBusInterface * DMPRISMonitor::m_dbusInter"]}]}
{"Filepath":"src/widgets/private/settings/buttongroup.h","Functions":[{"Uniquefunname":" ButtonGroup(QWidget * parent=0)","Funname":"ButtonGroup","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" ButtonGroup::ButtonGroup(QWidget * parent=0)","Funname":"ButtonGroup::ButtonGroup","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void ButtonGroup::setButtons(const QStringList \u0026 texts)","Funname":"ButtonGroup::setButtons","Returntype":"void","Args":"const QStringList \u0026 texts"},{"Uniquefunname":"void ButtonGroup::setCheckedButton(int id)","Funname":"ButtonGroup::setCheckedButton","Returntype":"void","Args":"int id"},{"Uniquefunname":" ButtonGroup::~ButtonGroup()","Funname":"ButtonGroup::~ButtonGroup","Returntype":"","Args":""},{"Uniquefunname":"void setButtons(const QStringList \u0026 texts)","Funname":"setButtons","Returntype":"void","Args":"const QStringList \u0026 texts"},{"Uniquefunname":"void setCheckedButton(int id)","Funname":"setCheckedButton","Returntype":"void","Args":"int id"},{"Uniquefunname":" ~ButtonGroup()","Funname":"~ButtonGroup","Returntype":"","Args":""}],"Records":[{"Name":"class:ButtonGroup","Fields":["QScopedPointer\u003cButtonGroupPrivate\u003e ButtonGroup::d_ptr"]}]}
{"Filepath":"src/widgets/private/settings/combobox.h","Functions":[{"Uniquefunname":" ComboBox(QWidget * parent=0)","Funname":"ComboBox","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" ComboBox::ComboBox(QWidget * parent=0)","Funname":"ComboBox::ComboBox","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void ComboBox::wheelEvent(QWheelEvent * e)","Funname":"ComboBox::wheelEvent","Returntype":"void","Args":"QWheelEvent * e"},{"Uniquefunname":"void wheelEvent(QWheelEvent * e)","Funname":"wheelEvent","Returntype":"void","Args":"QWheelEvent * e"}],"Records":null}
{"Filepath":"src/widgets/private/settings/content.h","Functions":[{"Uniquefunname":" Content(QWidget * parent=0)","Funname":"Content","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" Content::Content(QWidget * parent=0)","Funname":"Content::Content","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"bool Content::groupIsVisible(const QString \u0026 key) cons)","Funname":"Content::groupIsVisible","Returntype":"bool","Args":"const QString \u0026 key) cons"},{"Uniquefunname":"void Content::mouseMoveEvent(QMouseEvent * event)","Funname":"Content::mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void Content::onScrollToGroup(const QString \u0026 key)","Funname":"Content::onScrollToGroup","Returntype":"void","Args":"const QString \u0026 key"},{"Uniquefunname":"void Content::resizeEvent(QResizeEvent * event)","Funname":"Content::resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void Content::setGroupVisible(const QString \u0026 key,bool visible)","Funname":"Content::setGroupVisible","Returntype":"void","Args":"const QString \u0026 key,bool visible"},{"Uniquefunname":"void Content::updateSettings(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings)","Funname":"Content::updateSettings","Returntype":"void","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings"},{"Uniquefunname":"DSettingsWidgetFactory * Content::widgetFactory() cons)","Funname":"Content::widgetFactory","Returntype":"DSettingsWidgetFactory *","Args":") cons"},{"Uniquefunname":" Content::~Content()","Funname":"Content::~Content","Returntype":"","Args":""},{"Uniquefunname":"bool groupIsVisible(const QString \u0026 key) cons)","Funname":"groupIsVisible","Returntype":"bool","Args":"const QString \u0026 key) cons"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void onScrollToGroup(const QString \u0026 key)","Funname":"onScrollToGroup","Returntype":"void","Args":"const QString \u0026 key"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"void setGroupVisible(const QString \u0026 key,bool visible)","Funname":"setGroupVisible","Returntype":"void","Args":"const QString \u0026 key,bool visible"},{"Uniquefunname":"void updateSettings(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings)","Funname":"updateSettings","Returntype":"void","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings"},{"Uniquefunname":"DSettingsWidgetFactory * widgetFactory() cons)","Funname":"widgetFactory","Returntype":"DSettingsWidgetFactory *","Args":") cons"},{"Uniquefunname":" ~Content()","Funname":"~Content","Returntype":"","Args":""}],"Records":[{"Name":"class:Content","Fields":["QScopedPointer\u003cContentPrivate\u003e Content::d_ptr"]}]}
{"Filepath":"src/widgets/private/settings/contenttitle.h","Functions":[{"Uniquefunname":" ContentTitle(QWidget * parent=0)","Funname":"ContentTitle","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" ContentTitle::ContentTitle(QWidget * parent=0)","Funname":"ContentTitle::ContentTitle","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"QLabel * ContentTitle::label() cons)","Funname":"ContentTitle::label","Returntype":"QLabel *","Args":") cons"},{"Uniquefunname":"void ContentTitle::setSpacing(int width)","Funname":"ContentTitle::setSpacing","Returntype":"void","Args":"int width"},{"Uniquefunname":"void ContentTitle::setTitle(const QString \u0026 title)","Funname":"ContentTitle::setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":" ContentTitle::~ContentTitle()","Funname":"ContentTitle::~ContentTitle","Returntype":"","Args":""},{"Uniquefunname":"QLabel * label() cons)","Funname":"label","Returntype":"QLabel *","Args":") cons"},{"Uniquefunname":"void setSpacing(int width)","Funname":"setSpacing","Returntype":"void","Args":"int width"},{"Uniquefunname":"void setTitle(const QString \u0026 title)","Funname":"setTitle","Returntype":"void","Args":"const QString \u0026 title"},{"Uniquefunname":" ~ContentTitle()","Funname":"~ContentTitle","Returntype":"","Args":""}],"Records":[{"Name":"class:ContentTitle","Fields":["QScopedPointer\u003cContentTitlePrivate\u003e ContentTitle::d_ptr"]}]}
{"Filepath":"src/widgets/private/settings/navigation.h","Functions":[{"Uniquefunname":" Navigation(QWidget * parent=0)","Funname":"Navigation","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" Navigation::Navigation(QWidget * parent=0)","Funname":"Navigation::Navigation","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"bool Navigation::groupIsVisible(const QString \u0026 key) cons)","Funname":"Navigation::groupIsVisible","Returntype":"bool","Args":"const QString \u0026 key) cons"},{"Uniquefunname":"void Navigation::onSelectGroup(const QString \u0026 key)","Funname":"Navigation::onSelectGroup","Returntype":"void","Args":"const QString \u0026 key"},{"Uniquefunname":"void Navigation::setGroupVisible(const QString \u0026 key,bool visible)","Funname":"Navigation::setGroupVisible","Returntype":"void","Args":"const QString \u0026 key,bool visible"},{"Uniquefunname":"void Navigation::updateSettings(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings)","Funname":"Navigation::updateSettings","Returntype":"void","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings"},{"Uniquefunname":" Navigation::~Navigation()","Funname":"Navigation::~Navigation","Returntype":"","Args":""},{"Uniquefunname":"bool groupIsVisible(const QString \u0026 key) cons)","Funname":"groupIsVisible","Returntype":"bool","Args":"const QString \u0026 key) cons"},{"Uniquefunname":"void onSelectGroup(const QString \u0026 key)","Funname":"onSelectGroup","Returntype":"void","Args":"const QString \u0026 key"},{"Uniquefunname":"void setGroupVisible(const QString \u0026 key,bool visible)","Funname":"setGroupVisible","Returntype":"void","Args":"const QString \u0026 key,bool visible"},{"Uniquefunname":"void updateSettings(const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings)","Funname":"updateSettings","Returntype":"void","Args":"const QByteArray \u0026 translateContext,QPointer\u003cDTK_CORE_NAMESPACE::DSettings\u003e settings"},{"Uniquefunname":" ~Navigation()","Funname":"~Navigation","Returntype":"","Args":""}],"Records":[{"Name":"class:Navigation","Fields":["QScopedPointer\u003cNavigationPrivate\u003e Navigation::d_ptr"]}]}
{"Filepath":"src/widgets/private/settings/navigationdelegate.h","Functions":[{"Uniquefunname":" NavigationDelegate(QAbstractItemView * parent)","Funname":"NavigationDelegate","Returntype":"","Args":"QAbstractItemView * parent"},{"Uniquefunname":" NavigationDelegate::NavigationDelegate(QAbstractItemView * parent)","Funname":"NavigationDelegate::NavigationDelegate","Returntype":"","Args":"QAbstractItemView * parent"},{"Uniquefunname":"void NavigationDelegate::initStyleOption(QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons)","Funname":"NavigationDelegate::initStyleOption","Returntype":"void","Args":"QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"void NavigationDelegate::paint(QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"NavigationDelegate::paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":" NavigationDelegate::~NavigationDelegate()","Funname":"NavigationDelegate::~NavigationDelegate","Returntype":"","Args":""},{"Uniquefunname":"void initStyleOption(QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons)","Funname":"initStyleOption","Returntype":"void","Args":"QStyleOptionViewItem * option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":"void paint(QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons)","Funname":"paint","Returntype":"void","Args":"QPainter * painter,const QStyleOptionViewItem \u0026 option,const QModelIndex \u0026 index) cons"},{"Uniquefunname":" ~NavigationDelegate()","Funname":"~NavigationDelegate","Returntype":"","Args":""}],"Records":[{"Name":"enum:NavigationDelegate::NavLevel","Fields":["Level1","Level2","Level3","NavigationDelegate::Level1","NavigationDelegate::Level2","NavigationDelegate::Level3","NavigationDelegate::Split","Split"]},{"Name":"enum:NavigationDelegate::DataRole","Fields":["NavKeyRole","NavLevelRole","NavigationDelegate::NavKeyRole","NavigationDelegate::NavLevelRole"]}]}
{"Filepath":"src/widgets/private/settings/shortcutedit.h","Functions":[{"Uniquefunname":" ShortcutEdit(QWidget * parent=0)","Funname":"ShortcutEdit","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":" ShortcutEdit::ShortcutEdit(QWidget * parent=0)","Funname":"ShortcutEdit::ShortcutEdit","Returntype":"","Args":"QWidget * parent=0"},{"Uniquefunname":"void ShortcutEdit::focusInEvent(QFocusEvent * e)","Funname":"ShortcutEdit::focusInEvent","Returntype":"void","Args":"QFocusEvent * e"},{"Uniquefunname":"void ShortcutEdit::focusOutEvent(QFocusEvent * e)","Funname":"ShortcutEdit::focusOutEvent","Returntype":"void","Args":"QFocusEvent * e"},{"Uniquefunname":"void ShortcutEdit::keyPressEvent(QKeyEvent * e)","Funname":"ShortcutEdit::keyPressEvent","Returntype":"void","Args":"QKeyEvent * e"},{"Uniquefunname":"void ShortcutEdit::mouseDoubleClickEvent(QMouseEvent * event)","Funname":"ShortcutEdit::mouseDoubleClickEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void ShortcutEdit::notifyShortcutChanged(Qt::KeyboardModifiers modifier,Qt::Key key)","Funname":"ShortcutEdit::notifyShortcutChanged","Returntype":"void","Args":"Qt::KeyboardModifiers modifier,Qt::Key key"},{"Uniquefunname":"void ShortcutEdit::paintEvent(QPaintEvent *)","Funname":"ShortcutEdit::paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void ShortcutEdit::setShortCut(Qt::KeyboardModifiers modifier,Qt::Key key)","Funname":"ShortcutEdit::setShortCut","Returntype":"void","Args":"Qt::KeyboardModifiers modifier,Qt::Key key"},{"Uniquefunname":"void ShortcutEdit::setShortCut(const QString \u0026 sequenceString)","Funname":"ShortcutEdit::setShortCut","Returntype":"void","Args":"const QString \u0026 sequenceString"},{"Uniquefunname":"void ShortcutEdit::shortcutStringChanged(const QString \u0026 sequenceString)","Funname":"ShortcutEdit::shortcutStringChanged","Returntype":"void","Args":"const QString \u0026 sequenceString"},{"Uniquefunname":" ShortcutEdit::~ShortcutEdit()","Funname":"ShortcutEdit::~ShortcutEdit","Returntype":"","Args":""},{"Uniquefunname":"void focusInEvent(QFocusEvent * e)","Funname":"focusInEvent","Returntype":"void","Args":"QFocusEvent * e"},{"Uniquefunname":"void focusOutEvent(QFocusEvent * e)","Funname":"focusOutEvent","Returntype":"void","Args":"QFocusEvent * e"},{"Uniquefunname":"void keyPressEvent(QKeyEvent * e)","Funname":"keyPressEvent","Returntype":"void","Args":"QKeyEvent * e"},{"Uniquefunname":"void mouseDoubleClickEvent(QMouseEvent * event)","Funname":"mouseDoubleClickEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void notifyShortcutChanged(Qt::KeyboardModifiers modifier,Qt::Key key)","Funname":"notifyShortcutChanged","Returntype":"void","Args":"Qt::KeyboardModifiers modifier,Qt::Key key"},{"Uniquefunname":"void paintEvent(QPaintEvent *)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent *"},{"Uniquefunname":"void setShortCut(Qt::KeyboardModifiers modifier,Qt::Key key)","Funname":"setShortCut","Returntype":"void","Args":"Qt::KeyboardModifiers modifier,Qt::Key key"},{"Uniquefunname":"void setShortCut(const QString \u0026 sequenceString)","Funname":"setShortCut","Returntype":"void","Args":"const QString \u0026 sequenceString"},{"Uniquefunname":"void shortcutStringChanged(const QString \u0026 sequenceString)","Funname":"shortcutStringChanged","Returntype":"void","Args":"const QString \u0026 sequenceString"},{"Uniquefunname":" ~ShortcutEdit()","Funname":"~ShortcutEdit","Returntype":"","Args":""}],"Records":[{"Name":"class:ShortcutEdit","Fields":["QScopedPointer\u003cShortcutEditPrivate\u003e ShortcutEdit::d_ptr"]}]}
{"Filepath":"src/widgets/private/startupnotifications/startupnotificationmonitor.h","Functions":[{"Uniquefunname":" StartupNotificationMonitor()","Funname":"StartupNotificationMonitor","Returntype":"","Args":""},{"Uniquefunname":" StartupNotificationMonitor::StartupNotificationMonitor()","Funname":"StartupNotificationMonitor::StartupNotificationMonitor","Returntype":"","Args":""},{"Uniquefunname":"void StartupNotificationMonitor::appStartupCompleted(QString id)","Funname":"StartupNotificationMonitor::appStartupCompleted","Returntype":"void","Args":"QString id"},{"Uniquefunname":"StartupNotificationMonitor * StartupNotificationMonitor::instance()","Funname":"StartupNotificationMonitor::instance","Returntype":"StartupNotificationMonitor *","Args":""},{"Uniquefunname":"bool StartupNotificationMonitor::nativeEventFilter(const QByteArray \u0026 eventType,void * message,long * result)","Funname":"StartupNotificationMonitor::nativeEventFilter","Returntype":"bool","Args":"const QByteArray \u0026 eventType,void * message,long * result"},{"Uniquefunname":" StartupNotificationMonitor::~StartupNotificationMonitor()","Funname":"StartupNotificationMonitor::~StartupNotificationMonitor","Returntype":"","Args":""},{"Uniquefunname":"void appStartupCompleted(QString id)","Funname":"appStartupCompleted","Returntype":"void","Args":"QString id"},{"Uniquefunname":"StartupNotificationMonitor * instance()","Funname":"instance","Returntype":"StartupNotificationMonitor *","Args":""},{"Uniquefunname":"bool nativeEventFilter(const QByteArray \u0026 eventType,void * message,long * result)","Funname":"nativeEventFilter","Returntype":"bool","Args":"const QByteArray \u0026 eventType,void * message,long * result"},{"Uniquefunname":" ~StartupNotificationMonitor()","Funname":"~StartupNotificationMonitor","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["STARTUPNOTIFICATIONMONITOR_H"]}]}
